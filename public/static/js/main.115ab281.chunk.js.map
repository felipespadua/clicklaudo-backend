{"version":3,"sources":["Components/VoiceRecognition.js","Components/auth/auth-service.js","Components/auth/Login.js","Components/auth/SignUp.js","Services/ApiService.js","Components/Preview.js","FigadoForm.js","GeneralForm.js","ProstataForm.js","FinalForm.js","Expansion.js","MainTable.js","Menubar.js","Navbar.js","Footer.js","Laudos.js","MainTableMedicos.js","Medicos.js","MainTableMedicosSolicitante.js","MedicosSolicitante.js","MainTableClinicas.js","Clinicas.js","NewLaudoView.js","NewProstataView.js","MainTableConvenios.js","Convenios.js","NewFigadoView.js","Components/auth/protected-route.js","listItems.js","Title.js","ChartSemana.js","ChartDias.js","Dashboard.js","HistoricoFigadoForm.js","HistoricoFigado.js","HistoricoProstataForm.js","HistoricoProstata.js","LandingPageCover.js","FinalView.js","LandingPage.js","App.js","serviceWorker.js","index.js"],"names":["globalStream","undefined","input","context","processor","VoiceRecognition","props","socket","socketIOClient","process","bufferSize","AudioContext","finalWord","removeLastSetence","wordControl","state","response","streamStreaming","constraints","audio","video","classOn","initRecording","bind","startRecording","stopRecording","microphoneProcess","fillForm","this","emit","setState","window","webkitAudioContext","latencyHint","createScriptProcessor","connect","destination","resume","onAudioProcess","e","navigator","mediaDevices","getUserMedia","then","stream","createMediaStreamSource","onaudioprocess","left","inputBuffer","getChannelData","left16","downsampleBuffer","getTracks","stop","disconnect","close","buffer","sampleRate","outSampleRate","Error","sampleRateRatio","newLength","Math","round","length","result","Int16Array","offsetResult","offsetBuffer","nextOffsetBuffer","accum","count","i","min","s","charAt","toUpperCase","slice","on","data","console","log","results","isFinal","words","alternatives","map","alternative","normalizeText","transcript","replace","forEach","word","handleChangeVR","index","Object","keys","prevState","key","indexOf","text","toLowerCase","RegExp","className","Button","variant","type","onClick","changeClass","id","color","Component","AuthService","signup","username","password","name","service","post","login","loggedin","get","logout","axios","create","baseURL","withCredentials","useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","logo","marginBottom","width","paper","margin","spacing","display","flexDirection","alignItems","avatar","backgroundColor","palette","primary","main","form","marginTop","submit","Login","classes","React","useState","handleChange","event","target","value","Grid","container","component","item","xs","sm","md","Paper","elevation","square","Link","href","Avatar","Typography","onSubmit","preventDefault","getUser","history","push","catch","error","noValidate","TextField","required","label","textField","fullWidth","autoComplete","onChange","SignUp","CssBaseline","justify","ApiService","getAllExams","err","getOneLiver","newLiver","clinica","medico","medicoSolicitante","pacient","newProstate","newPacient","nome","idade","telefone","email","convenio","updateLiver","dimensao","homogeneo","esteatotico","hepatopiaCronica","ciscoSimples","cistoSimplesMM","ciscoSimplesSit","variosCiscos","variosCiscosMM","variosCiscosSit","noduloSolido","noduloSolidoTipo","noduloSolidoContorno","noduloSolidoHMM","noduloSolidoVMM","noduloSolidoSi","calcificacaoGrosseira","calcificacaoGrosseiraMM","calcificacaoGrosseiraSit","put","updateProstate","homogenio","size1","size2","size3","contornos","residuo","residuoML","exameViaTransretal","noduloPeriferica","noduloPerifericaTipo","noduloSize1","noduloSize2","noduloSize3","noduloLocal","biopsia","fragmentos","deleteExam","delete","getPhrases","examType","downloadPdf","filename","crossdomain","sendEmail","FigadoForm","checked","handleChangeBySpeech","checkBoxes","typeControl","checkBox","selects","includes","handleChangeSelect","updateUser","onclick","a","apiHandler","rest","match","params","_id","noduloSolidoSit","age","select","handleSubmit","FormControlLabel","control","Checkbox","style","fontWeight","FormControl","InputLabel","htmlFor","Select","inputProps","MenuItem","InputLabelProps","shrink","flexWrap","formControl","minWidth","selectEmpty","GeneralForm","useEffect","Date","dataDeNasc","selecionarExame","hrefExam","inputLabel","useRef","labelWidth","setLabelWidth","current","offsetWidth","handleDateChange","dateName","date","utils","DateFnsUtils","format","KeyboardButtonProps","ref","native","itemResponse","addUser","ProstataForm","show","colspan","handleChangeByToggle","handleChangeSelectByToggle","ExameTransversal","colSpan","FinalForm","observacoes","conclusoes","concluir","pdf","phrases","campoObservasoes","campoConclusoes","observations","conclusions","hepatopatiaCronica","hepatopariaCronica","cistoSimples","paciente","populateFields","multiline","loading","spinColor","handleClick","heading","fontSize","typography","pxToRem","fontWeightRegular","SimpleExpansionPanel","ExpansionPanel","ExpansionPanelSummary","aria-controls","ExpansionPanelDetails","MainTable","bg","columns","title","field","render","rowData","status","setData","exam","examId","column","cellStyle","cell","onRowClick","evt","selectedRow","options","rowStyle","tableData","ITEM_HEIGHT","LongMenu","anchorEl","setAnchorEl","open","Boolean","handleClose","IconButton","aria-label","aria-haspopup","currentTarget","Menu","keepMounted","onClose","PaperProps","maxHeight","option","selected","flexGrow","menuButton","marginRight","position","top","marginLeft","transform","NavBar","FormGroup","AppBar","Toolbar","Divider","onCl","ick","Footer","Laudos","crm","editable","onRowAdd","newData","Promise","resolve","setTimeout","onRowUpdate","oldData","onRowDelete","splice","Medicos","MedicosSolicitante","Clinicas","NewLaudoView","NewProstataView","Convenios","NewFigadoView","protectedRoute","user","loggedInUser","to","pathname","from","location","mainListItems","ListItem","button","ListItemIcon","ListItemText","secondaryListItems","ListSubheader","inset","Title","gutterBottom","children","createData","time","amount","ChartSemana","Fragment","right","bottom","dataKey","angle","textAnchor","stroke","dot","ChartDias","toolbar","paddingRight","toolbarIcon","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButtonHidden","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","overflow","paddingTop","paddingBottom","fixedHeight","Dashboard","setOpen","fixedHeightPaper","clsx","edge","noWrap","Drawer","List","Container","maxWidth","lg","disabled","Historico","LandingPageCover","skrollr","init","alt","src","data-0","data-99","data-100","data-50","FinalView","App","getTheUser","userObj","exact","path","HistoricoProstata","HistoricoFigado","isLocalhost","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","document","getElementById","URL","origin","addEventListener","fetch","contentType","headers","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.115ab281.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport React from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport { ReactMic } from \"react-mic\";\n// import { isThisHour } from 'date-fns/esm';\n// import { nominalTypeHack } from 'prop-types';\nimport \"../../src/VR.css\";\nimport { isThisHour } from \"date-fns/esm\";\nimport { nominalTypeHack } from \"prop-types\";\nimport \"./VoiceRecognition.css\";\nimport Button from \"@material-ui/core/Button\";\n// import io from \"socket.io\"\nlet globalStream = undefined;\nlet input = undefined;\nlet context = undefined;\nlet processor = undefined;\n\nclass VoiceRecognition extends Component {\n  constructor(props) {\n    super(props);\n    this.socket = socketIOClient(process.env.REACT_APP_API_URL);\n    this.bufferSize = 2048;\n    this.AudioContext = undefined;\n    this.finalWord = false;\n    this.removeLastSetence = true;\n    this.wordControl = [];\n    this.state = {\n      response: false,\n      streamStreaming: false,\n      constraints: {\n        audio: true,\n        video: false\n      },\n      classOn: false\n    };\n    this.initRecording = this.initRecording.bind(this);\n    this.startRecording = this.startRecording.bind(this);\n    this.stopRecording = this.stopRecording.bind(this);\n    this.microphoneProcess = this.microphoneProcess.bind(this);\n    this.fillForm = this.fillForm.bind(this);\n  }\n\n  initRecording() {\n    this.socket.emit(\"startGoogleCloudStream\", \"\"); //init socket Google Speech Connection\n    this.setState({\n      streamStreaming: true\n    });\n    this.AudioContext = window.AudioContext || window.webkitAudioContext;\n    context = new AudioContext({\n      // if Non-interactive, use 'playback' or 'balanced' // https://developer.mozilla.org/en-US/docs/Web/API/AudioContextLatencyCategory\n      latencyHint: \"interactive\"\n    });\n    processor = context.createScriptProcessor(this.bufferSize, 1, 1);\n    processor.connect(context.destination);\n    context.resume();\n\n    let onAudioProcess = e => {\n      this.microphoneProcess(e);\n    };\n    let handleSuccess = function(stream) {\n      globalStream = stream;\n      input = context.createMediaStreamSource(stream);\n      input.connect(processor);\n\n      processor.onaudioprocess = onAudioProcess;\n    };\n\n    navigator.mediaDevices\n      .getUserMedia(this.state.constraints)\n      .then(handleSuccess);\n  }\n\n  microphoneProcess(e) {\n    var left = e.inputBuffer.getChannelData(0);\n    // var left16 = convertFloat32ToInt16(left); // old 32 to 16 function\n    var left16 = this.downsampleBuffer(left, 44100, 16000);\n    this.socket.emit(\"binaryData\", left16);\n  }\n  startRecording(e) {\n    // startButton.disabled = true;\n    // endButton.disabled = false;\n    // recordingStatus.style.visibility = \"visible\";\n    this.initRecording();\n  }\n  stopRecording(e) {\n    // waited for FinalWord\n    // startButton.disabled = false;\n    // endButton.disabled = true;\n    // recordingStatus.style.visibility = \"hidden\";\n    // streamStreaming = false;\n    this.socket.emit(\"endGoogleCloudStream\", \"\");\n    if (globalStream !== undefined) {\n      let track = globalStream.getTracks()[0];\n      track.stop();\n\n      input.disconnect(processor);\n      processor.disconnect(context.destination);\n      let closeContext = () => {\n        input = null;\n        processor = null;\n        context = null;\n        this.AudioContext = null;\n      };\n      context.close().then(closeContext);\n    }\n  }\n  downsampleBuffer(buffer, sampleRate, outSampleRate) {\n    if (outSampleRate == sampleRate) {\n      return buffer;\n    }\n    if (outSampleRate > sampleRate) {\n      throw new Error(\n        \"downsampling rate show be smaller than original sample rate\"\n      );\n    }\n    var sampleRateRatio = sampleRate / outSampleRate;\n    var newLength = Math.round(buffer.length / sampleRateRatio);\n    var result = new Int16Array(newLength);\n    var offsetResult = 0;\n    var offsetBuffer = 0;\n    while (offsetResult < result.length) {\n      var nextOffsetBuffer = Math.round((offsetResult + 1) * sampleRateRatio);\n      var accum = 0,\n        count = 0;\n      for (\n        var i = offsetBuffer;\n        i < nextOffsetBuffer && i < buffer.length;\n        i++\n      ) {\n        accum += buffer[i];\n        count++;\n      }\n\n      result[offsetResult] = Math.min(1, accum / count) * 0x7fff;\n      offsetResult++;\n      offsetBuffer = nextOffsetBuffer;\n    }\n    return result.buffer;\n  }\n\n  capitalize(s) {\n    if (s.length < 1) {\n      return s;\n    }\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  componentDidMount() {\n    // const { endpoint } = this.state;\n    // const socket = socketIOClient(endpoint);\n    // socket.on(\"FromAPI\", data => this.setState({ response: data }));\n\n    this.socket.on(\"connect\", function(data) {\n      // this.socket.emit('join', 'Server Connected to Client');\n      console.log(\"Server Connected to Client\", data);\n    });\n\n    this.socket.on(\"messages\", function(data) {\n      console.log(\"messages\", data);\n    });\n\n    this.socket.on(\"speechData\", this.fillForm);\n  }\n  fillForm(data) {\n    // console.log(data.results[0].alternatives[0])\n    //    console.log(data.results[0])\n    if (data.results[0].isFinal === false) {\n      //    console.log(data.results[0])\n      let alternatives = data.results[0].alternatives;\n      //    let words = alternatives.map(alternative => {\n      //        return alternative.words\n\n      //    })\n\n      let words = alternatives.map(alternative => {\n        return this.normalizeText(alternative.transcript).replace(\" \", \"\");\n      });\n      console.log(words);\n\n      words.forEach(word => {\n        if (word === \"C1\" || word === \"c1\" || word === \"ser um\") {\n          this.props.handleChangeVR(\"homogeneo\");\n        }\n\n        let normalizedKeys = Object.keys(this.props.prevState).map(key => {\n          return this.normalizeText(key);\n        });\n        let index = normalizedKeys.indexOf(this.normalizeText(word));\n        if (index !== -1) {\n          this.props.handleChangeVR(Object.keys(this.props.prevState)[index]);\n        }\n      });\n    }\n\n    //    for( let key in this.props.prevState){\n    //         if(!this.wordControl.includes(key)){\n    //             // console.log(transcripts, \"A\")\n    //             if(transcripts.includes(this.normalizeText(key))){\n    //                 this.props.handleChangeVR(key)\n    //                 this.wordControl.push(key)\n    //             }\n    //         }else{\n    //             // console.log(transcripts, \"B\")\n    //             let count = this.wordControl.filter(word => word === key).length\n    //             for(let i = 0; i < count; i++){\n    //                 let index = transcripts.indexOf(key)\n    //                 transcripts = transcripts.splice(index)\n    //             }\n    //             if(transcripts.includes(this.normalizeText(key))){\n    //                 this.props.handleChangeVR(key)\n    //                 this.wordControl.push(key)\n    //             }\n    //        }\n    //    }\n\n    //    }\n    // console.log(\"AAA\")\n  }\n\n  normalizeText(text) {\n    text = text.toLowerCase();\n    text = text.replace(new RegExp(\"[ÁÀÂÃ]\", \"gi\"), \"a\");\n    text = text.replace(new RegExp(\"[ÉÈÊ]\", \"gi\"), \"e\");\n    text = text.replace(new RegExp(\"[ÍÌÎ]\", \"gi\"), \"i\");\n    text = text.replace(new RegExp(\"[ÓÒÔÕ]\", \"gi\"), \"o\");\n    text = text.replace(new RegExp(\"[ÚÙÛ]\", \"gi\"), \"u\");\n    text = text.replace(new RegExp(\"[Ç]\", \"gi\"), \"c\");\n    return text;\n  }\n\n  componentWillUnmount() {\n    if (this.state.streamStreaming) {\n      this.socket.emit(\"endGoogleCloudStream\", \"\");\n    }\n  }\n\n  changeClass() {\n    this.setState({\n      classOn: !this.state.classOn\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <audio></audio>\n\n        {/* <div id=\"soundEffect\">\n          <span className=\"soundSpan\"></span>\n          <span className=\"soundSpan\"></span>\n          <span className=\"soundSpan\"></span>\n          <span className=\"soundSpan\"></span>\n          <span className=\"soundSpan\"></span>\n        </div> */}\n\n        <Button\n          variant=\"contained\"\n          type=\"submit\"\n          onClick={e => {\n            this.startRecording(e);\n            this.changeClass();\n          }}\n          id={this.state.classOn ? \"startRecButtonOn\" : \"startRecButton\"}\n        >\n          Gravar\n        </Button>\n\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          id=\"stopRecButton\"\n          onClick={e => {\n            this.stopRecording(e);\n            this.changeClass();\n          }}\n        >\n          Encerrar\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default VoiceRecognition;\n","import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    let service = axios.create({\n      baseURL: process.env.REACT_APP_API_URL,\n      //baseURL: 'http://localhost:5000/api',\n      withCredentials: true\n    });\n    this.service = service;\n  }\n  signup = (username, password,name) => {\n    return this.service.post('/signup', {username, password,name})\n    .then(response => response.data)\n  }\n  login = (username, password) => {\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n  }\n  loggedin = () => {\n    return this.service.get('/loggedin')\n    .then(response => response.data)\n  }\n  \n  logout = () => {\n    return this.service.post('/logout', {})\n    .then(response => response.data)\n  }\n\n}\n\nexport default AuthService;","import React, {Component} from 'react';\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AuthService from './auth-service';\n\n// import MainTable from './MainTable'\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: \"100vh\"\n  },\n  image: {\n    backgroundImage: \"url(/img/medical5.jpeg)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\"\n  },\n\n  logo: {\n    marginBottom  : '35px',\n    backgroundImage: 'url(/img/Logo.svg)',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    height: '11vh',\n    width: '43vh',\n    backgroundSize: '280px'\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nexport default function Login (props) {\n \n  const classes = useStyles();\n\n  const [state,setState]=React.useState({\n     username: '', password: ''\n\n  })\n const service = new AuthService()\n\n  const handleFormSubmit = (event) => {\n    console.log(props, \"===>\")\n    event.preventDefault();\n    const username = state.username;\n    const password = state.password;\n    service.login(username, password)\n    .then( response => {\n        setState({ username: \"\", password: \"\" });\n        console.log(response)\n        props.getUser(response)\n        props.history.push(\"/laudos\")\n        \n    })\n    .catch( error => console.log(error) )\n  }\n  const handleChange = (event) => {  \n    const {name, value} = event.target;\n    setState({ ...state , [name]: value});\n  }\n  \n  \n  \n    return (\n      <Grid container component=\"main\" className={classes.root}>\n      {/* <CssBaseline /> */}\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n        <Link href=\"/\" className={classes.logo}></Link>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form onSubmit={handleFormSubmit} className={classes.form} noValidate>\n            <TextField\n              required\n              id=\"username\"\n              label=\"Username\"\n              className={classes.textField}\n              fullWidth\n              type=\"text\"\n              name=\"username\"\n              autoComplete=\"username\"\n              margin=\"normal\"\n              value={state.username} \n              onChange={ e => handleChange(e)}\n              input=\"submit\"\n              // variant=\"filled\"\n            />\n            <TextField\n              required\n              id=\"password\"\n              label=\"Password\"\n              className={classes.textField}\n              fullWidth\n              type=\"password\"\n              name=\"password\"\n              autoComplete=\"password\"\n              margin=\"normal\"\n              value={state.password} \n              onChange={ e => handleChange(e)}\n              // variant=\"filled\"\n            />\n            \n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item>\n                <Link href=\"/signup\" variant=\"body2\">\n                  {\"Não possui uma conta? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n    )\n  \n}\n\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AuthService from './auth-service';\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: \"100vh\"\n  },\n  image: {\n    backgroundImage: \"url(/img/medical5.jpeg)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\"\n  },\n\n  logo: {\n    marginBottom: \"35px\",\n    backgroundImage: \"url(/img/Logo.svg)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"center\",\n    height: \"15vh\",\n    width: \"70vh\",\n    backgroundSize: \"350px\"\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nexport default function SignUp(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useState({\n    username: \"\",\n    password: \"\",\n    name: \"\"\n  });\n  const service = new AuthService();\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    const { username, password, name } = state;\n    service\n      .signup(username, password, name)\n      .then(response => {\n        setState({ username: \"\", password: \"\", name: \"\" });\n\n        props.history.push(\"/login\");\n      })\n      .catch(error => console.log(error, \"ERRO\"));\n  };\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setState({ ...state, [name]: value });\n  };\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n        <Link href=\"/\" className={classes.logo}></Link>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign Up\n          </Typography>\n        <form onSubmit={handleFormSubmit} className={classes.form} noValidate>\n            <TextField\n              id=\"Nome\"\n              label=\"Nome\"\n              className={classes.textField}\n              required\n              fullWidth\n              type=\"text\"\n              name=\"name\"\n              autoComplete=\"nome\"\n              margin=\"normal\"\n              value={state.name} \n              onChange={ e => handleChange(e)}\n              // variant=\"filled\"\n            />\n            <TextField\n              id=\"username\"\n              label=\"username\"\n              className={classes.textField}\n              required\n              fullWidth\n              type=\"username\"\n              name=\"username\"\n              autoComplete=\"username\"\n              margin=\"normal\"\n              value={state.username} \n              onChange={ e => handleChange(e)}\n              // variant=\"filled\"\n            />\n            <TextField\n              id=\"password\"\n              label=\"Password\"\n              className={classes.textField}\n              required\n              fullWidth\n              type=\"password\"\n              name=\"password\"\n              autoComplete=\"password\"\n              margin=\"normal\"\n              value={state.password} \n              onChange={ e => handleChange(e)}\n              // variant=\"filled\"\n            />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item xs>\n              <Link href=\"/\" variant=\"body2\">\n                Já possui uma conta? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      </Grid>\n    </Grid>\n  );\n}","import axios from 'axios';\n\nclass ApiService {\n  constructor() {\n    let service = axios.create({\n       baseURL: process.env.REACT_APP_API_URL,\n     // baseURL: 'http://localhost:5000/api',\n      withCredentials: true\n    });\n    this.service = service;\n  }\n  getAllExams = () => {\n    return this.service.get('/api/allexams')\n    .then(response => response.data)\n    .catch(err => console.log(\"Ocorreu um erro ao consultar todos os exames\", err))\n  }\n\n  getOneLiver = (id) =>{\n    return this.service.get(`/api/getoneliver/${id}`)\n    .then(response => response.data)\n    .catch(err => console.log(\"Ocorreu um erro ao consultar todos os exames\", err))\n  }\n    newLiver = (clinica,medico,medicoSolicitante,data,pacient) => {\n    \n    return this.service.post('/api/newliver', {clinica,medico,medicoSolicitante,data,pacient})\n    .then(response => response.data)\n    .catch(err => console.log(\"Ocorreu um erro ao consultar todos os exames\", err))\n  }\n  newProstate = (clinica,medico,medicoSolicitante,data,pacient) => {\n   \n    return this.service.post('/api/newprostate', {clinica,medico,medicoSolicitante,data,pacient})\n    .then(response =>\n      \n      response.data)\n    .catch(err => console.log(\"Ocorreu um erro ao consultar todos os exames\", err))\n  }\n\n\n  newPacient = (nome,idade,telefone,email,convenio) => {\n    \n    return this.service.post('/api/newpacient',{nome,idade,telefone,email,convenio})\n    .then(response => response.data)\n    .catch(err => console.log(\"Ocorreu um erro ao consultar todos os exames\", err))\n  }\n  updateLiver = (dimensao,homogeneo,esteatotico,hepatopiaCronica,ciscoSimples,cistoSimplesMM,ciscoSimplesSit,variosCiscos,variosCiscosMM,variosCiscosSit,noduloSolido,noduloSolidoTipo,noduloSolidoContorno,noduloSolidoHMM,noduloSolidoVMM,noduloSolidoSi,calcificacaoGrosseira,calcificacaoGrosseiraMM,calcificacaoGrosseiraSit,id)=>{\n    return this.service.put(`/api/newfigadoview/${id}`,{dimensao,homogeneo,esteatotico,hepatopiaCronica,ciscoSimples,cistoSimplesMM,ciscoSimplesSit,variosCiscos,variosCiscosMM,variosCiscosSit,noduloSolido,noduloSolidoTipo,noduloSolidoContorno,noduloSolidoHMM,noduloSolidoVMM,noduloSolidoSi,calcificacaoGrosseira,calcificacaoGrosseiraMM,calcificacaoGrosseiraSit} )\n    .then(response => response.data)\n    .catch(err => console.log(\"Ocorreu um erro ao consultar todos os exames\", err))\n  }\n  updateProstate = (homogenio,size1,size2,size3,contornos,residuo,residuoML,exameViaTransretal,noduloPeriferica,noduloPerifericaTipo,noduloSize1,noduloSize2,noduloSize3,noduloLocal,biopsia,fragmentos,id)=>{\n    return this.service.put(`/api/newprostataview/${id}`,{homogenio,size1,size2,size3,contornos,residuo,residuoML,exameViaTransretal,noduloPeriferica,noduloPerifericaTipo,noduloSize1,noduloSize2,noduloSize3,noduloLocal,biopsia,fragmentos} )\n    .then(response => response.data)\n    .catch(err => console.log(\"Ocorreu um erro ao consultar todos os exames\", err))\n  }\n \n  deleteExam = id => {\n    return this.service.delete(`/api/exam/${id}`)\n    .then(response => response.data)\n    .catch(err => console.log(err))\n  }\n  getPhrases = examType => {\n    return this.service.post(`/api/getphrases/${examType}`)\n    .then(response => response.data)\n    .catch(err => console.log(err))\n  }\n  downloadPdf = (data) => {\n    return this.service.post(\"/api/generateReport\", {data})\n    .then(response => {\n      let {filename} = response.data\n      // return filename\n      return this.service.get(`/reports/${filename}.pdf`,{ crossdomain: true })\n        .then(response => console.log(response, \"response\"))\n        .catch(err => console.log(err))\n    })\n    .catch(err => console.log(err))\n  }\n  sendEmail = (data) => {\n    return this.service.post(\"/api/generateReport\", {data})\n    .then(response => {\n      \n      let {filename} = response.data\n      // return filename\n      return this.service.post(\"/api/send-email\", { data , filename })\n        .then(response => console.log(response, \"response\"))\n        .catch(err => console.log(err))\n    })\n    .catch(err => console.log(err, \"ERROOO\"))\n  }\n}\n\nexport default ApiService;","import React, {\n  Component\n} from 'react';\nimport FileViewer from 'react-file-viewer';\n\n\n\nclass Preview extends Component {\n  constructor(props) {\n    super(props)\n  }\n  render() {\n    return (\n        <FileViewer\n          fileType=\"docx\"\n          filePath=\"http://localhost:5000/reports/teste.docx\"\n          \n          onError={this.onError}/>\n      \n    );\n  }\n\n  onError(e) {\n    console.log(e)\n  }\n}\n\nexport default Preview","import React, { Component } from \"react\";\n// import Input from \"@material-ui/core/Input\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Button from \"@material-ui/core/Button\";\nimport VoiceRecognition from \"./Components/VoiceRecognition\";\nimport Preview from \"./Components/Preview\";\nimport NewWindow from \"react-new-window\";\nimport ApiService from './Services/ApiService'\n\n\nclass FigadoForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dimensao: \"\",\n      homogeneo: false,\n      esteatotico: false,\n      hepatopiaCronica: false,\n      ciscoSimples: false,\n      cistoSimplesMM: 0,\n      ciscoSimplesSit: \"\",\n      variosCiscos: false,\n      variosCiscosMM: 0,\n      variosCiscosSit: \"\",\n      noduloSolido: false,\n      noduloSolidoTipo: \"\",\n      noduloSolidoContorno: \"\",\n      noduloSolidoHMM: 0,\n      noduloSolidoVMM: 0,\n      noduloSolidoSit: \"\",\n      calcificacaoGrosseira: false,\n      calcificacaoGrosseiraMM: 0,\n      calcificacaoGrosseiraSit: \"\",\n      age: \"\"\n    };\n    this.typeControl = {\n      checkBox: [\n        \"homogeneo\",\n        \"esteatotico\",\n        \"hepatopiaCronica\",\n        \"ciscoSimples\",\n        \"variosCiscos\",\n        \"noduloSolido\",\n        \"calcificacaoGrosseira\"\n      ],\n      text: [\n        \"dimensao\",\n        \"ciscoSimplesSit\",\n        \"variosCiscosSit\",\n        \"noduloSolidoContorno\",\n        \"noduloSolidoTipo\",\n        \"noduloSolidoSit\",\n        \"calcificacaoGrosseiraSit\",\n        \"age\"\n      ],\n      select: []\n    };\n    \n    \n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeSelect = this.handleChangeSelect.bind(this);\n    this.handleChangeBySpeech = this.handleChangeBySpeech.bind(this);\n  }\n\n  handleChange = name => event => {\n   \n    if (event.target.type === \"checkbox\") {\n      this.setState({ ...this.state, [name]: event.target.checked });\n    } else {\n      this.setState({ ...this.state, [name]: event.target.value });\n    }\n  };\n\n  handleChangeBySpeech = name => {\n    console.log(name);\n    let checkBoxes = this.typeControl.checkBox;\n    let texts = this.typeControl.text;\n    let selects = this.typeControl.selects;\n    if (checkBoxes.includes(name)) {\n      this.setState({ ...this.state, [name]: !this.state.name });\n    }\n  };\n\n\n  handleChangeSelect = name => event => {\n    console.log(event.target);\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n    console.log(this.state);\n  };\n\n     updateUser = async (onclick) =>  {\n      try{\n      const apiHandler = new ApiService()\n      const id = this.props.rest.match.params.id;\n       const {dimensao,homogeneo,esteatotico,hepatopiaCronica,ciscoSimples,cistoSimplesMM,ciscoSimplesSit,variosCiscos,variosCiscosMM,variosCiscosSit,noduloSolido,noduloSolidoTipo,noduloSolidoContorno,noduloSolidoHMM,noduloSolidoVMM,noduloSolidoSi,calcificacaoGrosseira,calcificacaoGrosseiraMM,calcificacaoGrosseiraSit} = this.state;\n     const response = await apiHandler.updateLiver(dimensao,homogeneo,esteatotico,hepatopiaCronica,ciscoSimples,cistoSimplesMM,ciscoSimplesSit,variosCiscos,variosCiscosMM,variosCiscosSit,noduloSolido,noduloSolidoTipo,noduloSolidoContorno,noduloSolidoHMM,noduloSolidoVMM,noduloSolidoSi,calcificacaoGrosseira,calcificacaoGrosseiraMM,calcificacaoGrosseiraSit,id)\n     console.log(response)\n     this.props.rest.history.push(`/finalLiver/${response.response._id}`)\n    }catch(err){\n      console.log(err)\n    }\n  }\n\n  handleSubmit(event) {\n    \n    console.log(this.state);\n    event.preventDefault();\n    this.setState({\n      dimensao: \"\",\n      homogeneo: false,\n\n      esteatotico: false,\n      hepatopiaCronica: false,\n\n      ciscoSimples: false,\n      cistoSimplesMM: 0,\n      ciscoSimplesSit: \"\",\n\n      variosCiscos: false,\n      variosCiscosMM: 0,\n      variosCiscosSit: \"\",\n\n      noduloSolido: false,\n      noduloSolidoTipo: \"\",\n      noduloSolidoContorno: \"\",\n      noduloSolidoHMM: 0,\n      noduloSolidoVMM: 0,\n      noduloSolidoSit: \"\",\n\n      calcificacaoGrosseira: false,\n      calcificacaoGrosseiraMM: 0,\n      calcificacaoGrosseiraSit: \"\",\n\n      \n    });\n  }\n\n  render() {\n\n  \n    return (\n      <div className=\"mainDivGF p-5 mt-5\">\n        <form onSubmit={this.handleSubmit}>\n          <table className=\"marginBottom\">\n            <thead>\n              <tr>\n                <td>\n                  <h2>Laudo de Figado</h2>\n                </td>\n              </tr>\n            </thead>\n            <br />\n            <tbody>\n              {/* ---------------------------------------- */}\n              <tr>\n                <td>\n                  <VoiceRecognition\n                    prevState={this.state}\n                    handleChangeVR={this.handleChangeBySpeech}\n                  />\n                </td>\n              </tr>\n              <br />\n              <tr>\n                <td>\n                  <FormControlLabel \n                    control={\n                      <Checkbox\n                        checked={this.state.homogeneo}\n                        onChange={this.handleChange(\"homogeneo\")}\n                        value={this.state.homogeneo}\n                      />\n                    }\n                    \n                    label=\"Esteatótico (C1)\"\n                  \n                  \n                  />\n                </td>\n                <td style={{fontWeight:\"400\"}}>Quais são as dimensões apresentadas ? </td>\n                <td>\n                  <FormControl variant=\"\">\n                    <InputLabel htmlFor=\"outlined-age-simple\"></InputLabel>\n                    <Select\n                      required  \n                      value={this.state.dimensao}\n                      onChange={this.handleChangeSelect(\"dimensao\")}\n                      // labelWidth={this.labelWidth}\n                      name=\"dimensao\"\n                      inputProps={{\n                        name: \"dimensao\",\n                        id: \"outlined-age-simple\"\n                      }}\n                      margin=\"dense\"\n                    >\n                      <MenuItem value=\"\">\n                        <em>None</em>\n                      </MenuItem>\n                      <MenuItem value={\"Normais\"}>Normais </MenuItem>\n                      <MenuItem value={\"Reduzidas\"}>Reduzidas </MenuItem>\n                      <MenuItem value={\"Aumentadas\"}>Aumentadas </MenuItem>\n                    </Select>\n                  </FormControl>\n                </td>\n                {/* <td>\n                  <VoiceRecognition\n                    prevState={this.state}\n                    handleChangeVR={this.handleChangeBySpeech}\n                  />\n                </td> */}\n              </tr>\n              {/* -------------------------------------- */}\n              <tr>\n                <td>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={this.state.esteatotico}\n                        onChange={this.handleChange(\"esteatotico\")}\n                        value={this.state.esteatotico}\n                      />\n                    }\n                    label=\"Homogêneo (C2)\"\n                  />\n                </td>\n                <td>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={this.state.hepatopiaCronica}\n                        onChange={this.handleChange(\"hepatopiaCronica\")}\n                        value={this.state.hepatopiaCronica}\n                      />\n                    }\n                    label=\"Hepatopatia Crônica (C7)\"\n                  />\n                </td>\n              </tr>\n              {/* --------------------------------------- */}\n              <tr>\n                <td>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={this.state.ciscoSimples}\n                        onChange={this.handleChange(\"ciscoSimples\")}\n                        value={this.state.ciscoSimples}\n                      />\n                    }\n                    label=\"Cisco Simples (C3)\"\n                  />\n                </td>\n                <td>\n                  {\" \"}\n                  <TextField\n                    required\n                    id=\"outlined-number\"\n                    label=\"Tamanho(mm)\"\n                    value={this.state.cistoSimplesMM}\n                    onChange={this.handleChange(\"cistoSimplesMM\")}\n                    type=\"number\"\n                    InputLabelProps={{\n                      shrink: true\n                    }}\n                    margin=\"dense\"\n                    // variant=\"outlined\"\n                  />\n                </td>\n                <td style={{fontWeight:\"400\"}}>Qual o segmento hepático do cisto ?</td>\n                <td>\n                  <FormControl variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-age-simple\"></InputLabel>\n                    <Select\n                      value={this.state.ciscoSimplesSit}\n                      onChange={this.handleChangeSelect(\"ciscoSimplesSit\")}\n                      // labelWidth={this.labelWidth}\n                      name=\"ciscoSimplesSit\"\n                      inputProps={{\n                        name: \"ciscoSimplesSit\",\n                        id: \"outlined-age-simple\"\n                      }}\n                      margin=\"dense\"\n                    >\n                      <MenuItem value=\"\">\n                        <em>None</em>\n                      </MenuItem>\n                      <MenuItem value={\"Segmento hepático I\"}>I </MenuItem>\n                      <MenuItem value={\"Segmento hepático II\"}>II </MenuItem>\n                      <MenuItem value={\"Segmento hepático III\"}>III </MenuItem>\n                      <MenuItem value={\"Segmento hepático IV\"}>IV </MenuItem>\n                      <MenuItem value={\"Segmento hepático V\"}>V </MenuItem>\n                      <MenuItem value={\"Segmento hepático VI\"}>VI </MenuItem>\n                      <MenuItem value={\"Segmento hepático VII\"}>VII </MenuItem>\n                      <MenuItem value={\"Segmento hepático VIII\"}>\n                        VIII{\" \"}\n                      </MenuItem>\n                    </Select>\n                  </FormControl>\n                </td>\n              </tr>\n              {/* --------------------------------------- */}\n              <tr>\n                <td>\n                  {\" \"}\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={this.state.variosCiscos}\n                        onChange={this.handleChange(\"variosCiscos\")}\n                        value={this.state.variosCiscos}\n                      />\n                    }\n                    label=\"Varios Ciscos (C4)\"\n                  />\n                </td>\n                <td>\n                  <TextField\n                    required\n                    id=\"outlined-number\"\n                    label=\"Tamanho do maior(mm)\"\n                    value={this.state.variosCiscosMM}\n                    onChange={this.handleChange(\"variosCiscosMM\")}\n                    type=\"number\"\n                    InputLabelProps={{\n                      shrink: true\n                    }}\n                    margin=\"dense\"\n                    // variant=\"outlined\"\n                  />\n                </td>\n                <td style={{fontWeight:\"400\"}} >Qual o segmento hepático do cisto ?</td>\n                <td>\n                  <FormControl variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-age-simple\"></InputLabel>\n                    <Select\n                      value={this.state.variosCiscosSit}\n                      onChange={this.handleChangeSelect(\"variosCiscosSit\")}\n                      // labelWidth={this.labelWidth}\n                      name=\"variosCiscosSit\"\n                      inputProps={{\n                        name: \"variosCiscosSit\",\n                        id: \"outlined-age-simple\"\n                      }}\n                      margin=\"dense\"\n                    >\n                      <MenuItem value=\"\">\n                        <em>None</em>\n                      </MenuItem>\n                      <MenuItem value={\"Segmento hepático I\"}>I </MenuItem>\n                      <MenuItem value={\"Segmento hepático II\"}>II </MenuItem>\n                      <MenuItem value={\"Segmento hepático III\"}>III </MenuItem>\n                      <MenuItem value={\"Segmento hepático IV\"}>IV </MenuItem>\n                      <MenuItem value={\"Segmento hepático V\"}>V </MenuItem>\n                      <MenuItem value={\"Segmento hepático VI\"}>VI </MenuItem>\n                      <MenuItem value={\"Segmento hepático VII\"}>VII </MenuItem>\n                      <MenuItem value={\"Segmento hepático VIII\"}>\n                        VIII{\" \"}\n                      </MenuItem>\n                    </Select>\n                  </FormControl>\n                </td>\n              </tr>\n              {/* --------------------------------------- */}\n              <tr>\n                <td>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={this.state.noduloSolido}\n                        onChange={this.handleChange(\"noduloSolido\")}\n                        value={this.state.noduloSolido}\n                      />\n                    }\n                    label=\"Nódulo Sólido (C4)\"\n                  />\n                </td>\n                <td>\n                  <FormControl variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-age-simple\"></InputLabel>\n                    <Select\n                      value={this.state.noduloSolidoTipo}\n                      onChange={this.handleChangeSelect(\"noduloSolidoTipo\")}\n                      // labelWidth={this.labelWidth}\n                      name=\"noduloSolidoTipo\"\n                      inputProps={{\n                        name: \"noduloSolidoTipo\",\n                        id: \"outlined-age-simple\"\n                      }}\n                      margin=\"dense\"\n                    >\n                      <MenuItem value=\"\">\n                        <em>None</em>\n                      </MenuItem>\n                      <MenuItem value={\"Hiperecogênico \"}>\n                        Hiperecogênico{\" \"}\n                      </MenuItem>\n                      <MenuItem value={\"Hipoecogênico\"}>\n                        Hipoecogênico{\" \"}\n                      </MenuItem>\n                      <MenuItem value={\"Isoecogênico\"}>Isoecogênico </MenuItem>\n                    </Select>\n                  </FormControl>\n                </td>\n                <td>\n                  {\" \"}\n                  <TextField\n                    required\n                    // id=\"outlined-with-placeholder\"\n                    label=\"Contorno\"\n                    margin=\"dense\"\n                    // variant=\"outlined\"\n                    onChange={this.handleChange(\"noduloSolidoContorno\")}\n                    value={this.state.noduloSolidoContorno}\n                  />\n                </td>\n                <td>\n                  <TextField\n                    required\n                    id=\"outlined-number\"\n                    label=\"Tamanho Horizontal(mm)\"\n                    value={this.state.noduloSolidoHMM}\n                    onChange={this.handleChange(\"noduloSolidoHMM\")}\n                    type=\"number\"\n                    InputLabelProps={{\n                      shrink: true\n                    }}\n                    margin=\"dense\"\n                    // variant=\"outlined\"\n                  />\n                </td>\n                \n                <td>\n                  {\" \"}\n                  <TextField\n                    required\n                    id=\"outlined-number\"\n                    label=\"Tamanho Vertical(mm)\"\n                    value={this.state.noduloSolidoVMM}\n                    onChange={this.handleChange(\"noduloSolidoVMM\")}\n                    type=\"number\"\n                    InputLabelProps={{\n                      shrink: true\n                    }}\n                    margin=\"dense\"\n                    // variant=\"outlined\"\n                  />\n                </td>\n                <td style={{fontWeight:\"400\"}} >Qual o segmento hepático do Nódulo ?</td>\n                <td>\n                  <FormControl variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-age-simple\"></InputLabel>\n                    <Select\n                      value={this.state.noduloSolidoSit}\n                      onChange={this.handleChangeSelect(\"noduloSolidoSit\")}\n                      // labelWidth={this.labelWidth}\n                      name=\"noduloSolidoSit\"\n                      inputProps={{\n                        name: \"noduloSolidoSit\",\n                        id: \"outlined-age-simple\"\n                      }}\n                      margin=\"dense\"\n                    >\n                      <MenuItem value=\"\">\n                        <em>None</em>\n                      </MenuItem>\n                      <MenuItem value={\"Segmento hepático I\"}>I </MenuItem>\n                      <MenuItem value={\"Segmento hepático II\"}>II </MenuItem>\n                      <MenuItem value={\"Segmento hepático III\"}>III </MenuItem>\n                      <MenuItem value={\"Segmento hepático IV\"}>IV </MenuItem>\n                      <MenuItem value={\"Segmento hepático V\"}>V </MenuItem>\n                      <MenuItem value={\"Segmento hepático VI\"}>VI </MenuItem>\n                      <MenuItem value={\"Segmento hepático VII\"}>VII </MenuItem>\n                      <MenuItem value={\"Segmento hepático VIII\"}>\n                        VIII{\" \"}\n                      </MenuItem>\n                    </Select>\n                  </FormControl>\n                </td>\n              </tr>\n              {/* ---------------------------------------- */}\n              <tr>\n                <td>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={this.state.calcificacaoGrosseira}\n                        onChange={this.handleChange(\"calcificacaoGrosseira\")}\n                        value=\"calcificacaoGrosseira\"\n                      />\n                    }\n                    label=\"Calcificação Grosseira (C5)\"\n                  />\n                </td>\n                <td>\n                  <TextField\n                    required\n                    id=\"outlined-number\"\n                    label=\"Tamanho(mm)\"\n                    value={this.state.calcificacaoGrosseiraMM}\n                    onChange={this.handleChange(\"calcificacaoGrosseiraMM\")}\n                    type=\"number\"\n                    InputLabelProps={{\n                      shrink: true\n                    }}\n                    margin=\"dense\"\n                    // variant=\"outlined\"\n                  />\n                </td>\n                <td style={{fontWeight:\"400\"}} >Qual o segmento hepático da Calcificação ?</td>\n                <td>\n                  <FormControl variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-age-simple\"></InputLabel>\n                    <Select\n                      value={this.state.calcificacaoGrosseiraSit}\n                      onChange={this.handleChangeSelect(\n                        \"calcificacaoGrosseiraSit\"\n                      )}\n                      // labelWidth={this.labelWidth}\n                      name=\"calcificacaoGrosseiraSit\"\n                      inputProps={{\n                        name: \"calcificacaoGrosseiraSit\",\n                        id: \"outlined-age-simple\"\n                      }}\n                      margin=\"dense\"\n                    >\n                      <MenuItem value=\"\">\n                        <em>None</em>\n                      </MenuItem>\n                      <MenuItem value={\"Segmento hepático I\"}>I </MenuItem>\n                      <MenuItem value={\"Segmento hepático II\"}>II </MenuItem>\n                      <MenuItem value={\"Segmento hepático III\"}>III </MenuItem>\n                      <MenuItem value={\"Segmento hepático IV\"}>IV </MenuItem>\n                      <MenuItem value={\"Segmento hepático V\"}>V </MenuItem>\n                      <MenuItem value={\"Segmento hepático VI\"}>VI </MenuItem>\n                      <MenuItem value={\"Segmento hepático VII\"}>VII </MenuItem>\n                      <MenuItem value={\"Segmento hepático VIII\"}>\n                        VIII{\" \"}\n                      </MenuItem>\n                    </Select>\n                  </FormControl>\n                </td>\n              </tr>\n              <br />\n              {/* ----------------------------------------- */}\n              <tr>\n                <td>\n                  <Button onClick={()=> this.updateUser()} variant=\"contained\" color=\"primary\" type=\"submit\">\n                    Enviar\n                  </Button>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  {/* <Button\n                    variant=\"contained\"\n                    href=\"/preview\"\n                    color=\"primary\"\n                    type=\"submit\"\n                  >\n                    Preview\n                  </Button> */}\n                </td>\n              </tr>\n              {/* ------------------------------------------ */}\n            </tbody>\n          </table>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default FigadoForm;\n","import React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\n// import MenuItem from \"@material-ui/core/MenuItem\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport \"./App.css\";\nimport ApiService from \"./Services/ApiService\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Link from \"@material-ui/core/Link\";\nimport { Redirect } from 'react-router-dom'\nimport Paper from \"@material-ui/core/Paper\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nexport default function GeneralForm(props) {\n  useEffect(() => function addUser(onclick) {});\n\n  useEffect(onClick => function handleSubmit(onClick) {});\n\n  \n  // const useStyles = makeStyles(theme => ({\n  //   root: {\n  //     height: \"100vh\"\n  //   },\n  //   image: {\n  //     backgroundImage: \"url(/img/medical5.jpeg)\",\n  //     backgroundRepeat: \"no-repeat\",\n  //     backgroundSize: \"cover\",\n  //     backgroundPosition: \"center\"\n  //   },\n  // }));\n\n  const classes = useStyles();\n\n  const [state, setState] = React.useState({\n    data: new Date(),\n    clinica: \"\",\n    medico: \"\",\n    convenio: \"\",\n    medicoSolicitante: \"\",\n\n    dataDeNasc: new Date(),\n    nome: \"\",\n    idade: \"\",\n    telefone: \"\",\n    email: \"\",\n    selecionarExame: \"\",\n    hrefExam: \"/abc\"\n  });\n\n  const inputLabel = React.useRef(null);\n  const [labelWidth, setLabelWidth] = React.useState(0);\n  React.useEffect(() => {\n    setLabelWidth(inputLabel.current.offsetWidth);\n  }, []);\n  const completePacient = objPacient => {\n    console.log(objPacient);\n  };\n  //   const [selectedDate, setSelectedDate] = React.useState(\n  //     new Date(\"2014-08-18T21:11:54\")\n  //   );\n\n  const handleDateChange = dateName => date => {\n    setState({\n      ...state,\n      [dateName]: date\n    });\n  };\n\n  const handleChange = name => event => {\n    console.log(props);\n    if (name === \"selecionarExame\") {\n      console.log(event.target);\n      setState({\n        ...state,\n        [name]: event.target.value\n      });\n    } else {\n      setState({\n        ...state,\n        [name]: event.target.value\n      });\n    }\n  };\n\n  const handleSubmit = event => {\n  \n    event.preventDefault();\n    //axios\n    setState({\n      data: undefined,\n      clinica: \"\",\n      medico: \"\",\n      convenio: \"\",\n      medicoSolicitante: \"\",\n\n      dataDeNasc: undefined,\n      nome: \"\",\n      idade: \"\",\n      telefone: \"\",\n      email: \"\"\n    });\n  };\n  const addUser = event => {\n    const apiHandler = new ApiService();\n\n    const {\n      nome,\n      idade,\n      telefone,\n      email,\n      convenio,\n      clinica,\n      medico,\n      medicoSolicitante,\n      data,\n      selecionarExame\n    } = state;\n\n    apiHandler\n      .newPacient(nome, idade, telefone, email, convenio)\n      .then(function(itemResponse) {\n        const pacient = itemResponse._id;\n        console.log(pacient);\n        if (selecionarExame === \"/newprostataview\") {\n          console.log(\"i\");\n          apiHandler\n            .newProstate(clinica, medico, medicoSolicitante, data, pacient)\n            .then(function(response) {\n              console.log(\"PROSTATA!!!!!!!!!!!!!\", props.rest);\n              props.rest.history.push(`${selecionarExame}/${response._id}`);\n              //return <Redirect to={`${selecionarExame}/${response._id}`}/>\n            });\n        }\n        if (selecionarExame === \"/newfigadoview\") {\n          console.log(pacient);\n          apiHandler\n            .newLiver(clinica, medico, medicoSolicitante, data, pacient)\n            .then(function(response) {\n              console.log(\"figado!!!!!!!!!!!!\", response, pacient);\n              props.rest.history.push(`${selecionarExame}/${response._id}`);\n            });\n        }\n      });\n  }\n\n  return (\n    // <Grid container component=\"main\" className={classes.root}>\n    //   <CssBaseline />\n      \n    //   <Grid item xs={false} sm={3} md={6} className={classes.image} />\n    //   <Grid item xs={12} sm={9} md={6} component={Paper} elevation={6} square>\n    //     <div className={classes.paper}></div>\n\n    <div className=\"mainDivGF\">\n      <form className=\"box-shadow rounded p-4 marginBottom mt-5 \"  onSubmit={handleSubmit}>\n        <h3>Novo Laudo</h3>\n        <table>\n          <thead>\n            <tr>\n              <td>\n                <h3>Exame</h3>\n              </td>\n              <td className=\"pacienteTd\">\n                <h3 className=\"mt=5\" >Paciente</h3>\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Data:</label>\n                  </td>\n                  <td>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                      <Grid container justify=\"space-around\">\n                        <KeyboardDatePicker\n                        required\n                          margin=\"normal\"\n                          id=\"date-picker-dialog\"\n                          format=\"dd/MM/yyyy\"\n                          value={state.data}\n                          onChange={handleDateChange(\"data\")}\n                          KeyboardButtonProps={{\n                            \"aria-label\": \"change date\"\n                          }}\n                        />\n                      </Grid>\n                    </MuiPickersUtilsProvider>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <label  htmlFor=\"\">Clinica:</label>\n                  </td>\n\n                  <td>\n                    <FormControl\n                      // variant=\"outlined\"\n                      className={classes.formControl}\n                    >\n                      <InputLabel\n                      \n                        ref={inputLabel}\n                        htmlFor=\"outlined-age-simple\"\n                      ></InputLabel>\n                      <Select\n                      required\n                        native\n                        margin=\"dense\"\n                        value={state.clinica}\n                        onChange={handleChange(\"clinica\")}\n                        labelWidth={labelWidth}\n                        inputProps={{\n                          name: \"clinica\",\n                          id: \"outlined-clinica\"\n                        }}\n                      >\n                        <option value=\"\" />\n                        <option value={\"Femme - Laboratório da Mulher\"}>\n                          Femme - Laboratório da Mulher\n                        </option>\n                        <option value={\"Clínica Popular Cuidar Mais\"}>\n                          Clínica Popular Cuidar Mais\n                        </option>\n                        <option value={\"Centro Diagnostico\"}>\n                          Centro Diagnóstico\n                        </option>\n                      </Select>\n                    </FormControl>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Médico:</label>\n                  </td>\n                  <td>\n                    <FormControl\n                      // variant=\"outlined\"\n                      className={classes.formControl}\n                    >\n                      {/* <InputLabel ref={inputLabel} htmlFor=\"outlined-age-simple\">\n                  Medico\n                </InputLabel> */}\n                      <Select\n                      required\n                        native\n                        value={state.medico}\n                        onChange={handleChange(\"medico\")}\n                        name=\"medico\"\n                        margin=\"dense\"\n                        labelWidth={labelWidth}\n                        inputProps={{\n                          name: \"medico\",\n                          id: \"outlined-medico\"\n                        }}\n                      >\n                        <option value=\"\" />\n                        <option value={\"Roberto Sangalo\"}>\n                          Roberto Sangalo\n                        </option>\n                        <option value={\"Pablo Vasconcellos\"}>\n                          Pablo Vasconcellos\n                        </option>\n                        <option value={\"Aretuza Grande\"}>Aretuza Grande</option>\n                        <option value={\"Katrina Swift\"}>Katrina Swift</option>\n                        <option value={\"Gloria Maria\"}>Gloria Maria</option>\n                        <option value={\"Vitor Carlos\"}>Vitor Carlos</option>\n                      </Select>\n                    </FormControl>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Convênio:</label>\n                  </td>\n                  <td>\n                    <FormControl\n                      // variant=\"outlined\"\n                      className={classes.formControl}\n                    >\n                      {/* <InputLabel ref={inputLabel} htmlFor=\"outlined-age-simple\">\n                  Convenio\n                </InputLabel> */}\n                      <Select\n                        required\n                        native\n                        value={state.convenio}\n                        onChange={handleChange(\"convenio\")}\n                        name=\"convenio\"\n                        margin=\"dense\"\n                        labelWidth={labelWidth}\n                        inputProps={{\n                          name: \"convenio\",\n                          id: \"outlined-convenio\"\n                        }}\n                      >\n                        <option value=\"\" />\n                        <option value={\"Unimed\"}>Unimed</option>\n                        <option value={\"Bradesco\"}>Bradesco</option>\n                        <option value={\"Sul Americano\"}>Sul Americano</option>\n                        <option value={\"Notre Dame\"}>Notre Dame</option>\n                        <option value={\"Amil\"}>Amil</option>\n                      </Select>\n                    </FormControl>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Médico Solicitante:</label>\n                  </td>\n                  <td>\n                    <FormControl\n                      // variant=\"outlined\"\n                      className={classes.formControl}\n                    >\n                      {/* <InputLabel ref={inputLabel} htmlFor=\"outlined-age-simple\">\n                  Convenio\n                </InputLabel> */}\n                      <Select\n                        required\n                        native\n                        name=\"medicoSolicitante\"\n                        value={state.medicoSolicitante}\n                        onChange={handleChange(\"medicoSolicitante\")}\n                        margin=\"dense\"\n                        labelWidth={labelWidth}\n                        inputProps={{\n                          name: \"medicoSolicitante\",\n                          id: \"outlined-medicoSolicitante\"\n                        }}\n                      >\n                        <option value=\"\" />\n                        <option value={\"Albert Scharle\"}>Albert Scharle</option>\n                        <option value={\"Stuart David\"}>Stuart David</option>\n                        <option value={\"Lucas Viena\"}>Lucas Viena</option>\n                        <option value={\"Maria Antonieta\"}>\n                          Maria Antonieta\n                        </option>\n                        <option value={\"David Junior\"}>David Junior</option>\n                      </Select>\n                    </FormControl>\n                  </td>\n                </tr>\n              </td>\n              {/* --------------------------------------------------------------------------------------------- */}\n              <td className=\"mainTd\">\n                <tr>\n                  <td>\n                    <label className=\"mt-4\" htmlFor=\"\">Data de Nasc: </label>\n                  </td>\n                  <td>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                      <Grid container justify=\"space-around\">\n                        <KeyboardDatePicker\n                          required\n                          margin=\"normal\"\n                          id=\"date-picker-dialog\"\n                          format=\"dd/MM/yyyy\"\n                          value={state.dataDeNasc}\n                          onChange={handleDateChange(\"dataDeNasc\")}\n                          KeyboardButtonProps={{\n                            \"aria-label\": \"change date\"\n                          }}\n                        />\n                      </Grid>\n                    </MuiPickersUtilsProvider>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <label className=\"mt-2\" htmlFor=\"\">Nome:</label>\n                  </td>\n                  <td>\n                    <TextField\n                      required\n                      id=\"outlined-dense\"\n                      margin=\"dense\"\n                      // variant=\"outlined\"\n                      name=\"nome\"\n                      type=\"text\"\n                      value={state.nome}\n                      onChange={handleChange(\"nome\")}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Idade:</label>\n                  </td>\n                  <td>\n                    <TextField\n                      required\n                      id=\"outlined-number\"\n                      name=\"idade\"\n                      margin=\"dense\"\n                      value={state.idade}\n                      onChange={handleChange(\"idade\")}\n                      type=\"number\"\n                      InputLabelProps={{\n                        shrink: true\n                      }}\n                      // variant=\"outlined\"\n                    />\n                  </td>\n                </tr>\n\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Telefone:</label>\n                  </td>\n                  <td>\n                    <TextField\n                      required\n                      id=\"outlined-tel\"\n                      margin=\"dense\"\n                      // label=\"Telefone\"\n                      // variant=\"outlined\"\n                      name=\"telefone\"\n                      type=\"tel\"\n                      value={state.telefone}\n                      onChange={handleChange(\"telefone\")}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">E-mail:</label>\n                  </td>\n                  <td>\n                    <TextField\n                      required\n                      id=\"outlined-email-input\"\n                      name=\"email\"\n                      autoComplete=\"email\"\n                      margin=\"dense\"\n                      // variant=\"outlin  ed\"\n                      onChange={handleChange(\"email\")}\n                      value={state.email}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Exame: </label>\n                  </td>\n                  <td>\n                    <FormControl\n                      // variant=\"outlined\"\n                      className={classes.formControl}\n                    >\n                      <Select\n                        required\n                        native\n                        value={state.selecionarExame}\n                        onChange={handleChange(\"selecionarExame\")}\n                        name=\"selecionarExame\"\n                        margin=\"dense\"\n                        labelWidth={labelWidth}\n                        inputProps={{\n                          name: \"convenio\",\n                          id: \"outlined-convenio\"\n                        }}\n                      >\n                        <option value=\"\" />\n                        <option value={\"/newfigadoview\"}>Figado</option>\n                        <option value={\"/newprostataview\"}>Prostata</option>\n                      </Select>\n                    </FormControl>\n                  </td>\n                </tr>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <br />\n\n        <br />\n        <Button\n          type=\"submit\"\n          onClick={() => addUser(onclick)}\n          // fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n        >\n          novo laudo\n        </Button>\n      </form>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\n// import Input from \"@material-ui/core/Input\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Button from \"@material-ui/core/Button\";\nimport VoiceRecognition from \"./Components/VoiceRecognition\";\nimport \"./App.css\";\nimport ApiService from './Services/ApiService'\n\nclass ProstataForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n      size1: 0,\n      size2: 0,\n      size3: 0,\n      contornos: \"\",\n      residuo: false,\n      residuoML: 0,\n      exameViaTransretal: false,\n      noduloPeriferica: false,\n      noduloPerifericaTipo: \"\",\n      noduloSize1: 0,\n      noduloSize2: 0,\n      noduloSize3: 0,\n      noduloLocal: \"\",\n      biopsia: false,\n      fragmentos: 0\n    };\n    this.typeControl = {\n      checkBox: [\"exameViaTransretal\"],\n      text: [\"size1\", \"size2\", \"size3\"],\n      select: [\"contornos\"]\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeSelect = this.handleChangeSelect.bind(this);\n    this.handleChangeBySpeech = this.handleChangeBySpeech.bind(this);\n  }\n\n  handleChange = name => event => {\n    console.log(event.target);\n    \n    if (event.target.type === \"checkbox\") {\n      this.setState({ ...this.state, [name]: event.target.checked });\n    } else {\n      this.setState({ ...this.state, [name]: event.target.value });\n    }\n  };\n\n  handleChangeBySpeech = name => {\n    let checkBoxes = this.typeControl.checkBox;\n    let texts = this.typeControl.text;\n    let selects = this.typeControl.selects;\n    if (checkBoxes.includes(name)) {\n      this.setState({ ...this.state, [name]: !this.state.name });\n    }\n  };\n\n  handleChangeSelect = name => event => {\n    console.log(event.target);\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n    console.log(this.state);\n  };\n\n  updateUser = async () =>  {\n    console.log(this.props)\n    try{\n      const apiHandler = new ApiService()\n      const id = this.props.rest.match.params.id;\n      const { homogenio,size1,size2,size3,contornos,residuo,residuoML,exameViaTransretal,noduloPeriferica,noduloPerifericaTipo,noduloSize1,noduloSize2,noduloSize3,noduloLocal,biopsia,fragmentos} = this.state;\n      const response = await apiHandler.updateProstate(homogenio,size1,size2,size3,contornos,residuo,residuoML,exameViaTransretal,noduloPeriferica,noduloPerifericaTipo,noduloSize1,noduloSize2,noduloSize3,noduloLocal,biopsia,fragmentos,id)\n      console.log(\"worked\")\n      this.props.rest.history.push(`/laudofinal/${response.response._id}`)\n      console.log(response)\n    }catch(err){\n      console.log(err,\"=>\")\n    }\n    //.then(function(itemResponse) {\n    //  console.log(this.props)\n      //this.props.history.push(`newprostataview/${itemResponse._id}`)\n   \n    //})\n  }\n\n  handleSubmit(event) {\n    console.log(this.state);\n    event.preventDefault();\n    \n  }\n\n  //   showExameTransversal() {\n  //     const { show } = this.state;\n  //     this.setState({\n  //       show: !show\n  //     });\n  //   }\n\n  render() {\n \n    console.log('PROPS!!!!!',this.props.rest.match.params)\n    return (\n      <div className=\"mainDivGF\">\n        <form className=\"box-shadow p-4 mt-5  marginBottom\"   onSubmit={this.handleSubmit}>\n          <table className=\"\">\n            <thead>\n              <tr>\n                <td colspan=\"2\">\n                  <h2>Laudo da Prostata</h2>\n                </td>\n              </tr>\n            </thead>\n            <br />\n            <tbody>\n              <tr>\n                <td>\n                  <VoiceRecognition\n                    prevState={this.state}\n                    handleChangeVR={this.handleChangeBySpeech}\n                  />\n                </td>\n              </tr>\n              <br />\n              {/* ---------------------------------------- */}\n              <tr>\n                <td style={{fontWeight:\"400\"}}>Quais suas dimensões ? (C1)</td>\n                <td>\n                  <TextField\n                    required\n                    id=\"outlined-number\"\n                    label=\"Largura prostata\"\n                    value={this.state.size1}\n                    onChange={this.handleChange(\"size1\")}\n                    type=\"number\"\n                    InputLabelProps={{\n                      shrink: true\n                    }}\n                    margin=\"dense\"\n                    // variant=\"outlined\"\n                  />\n                </td>\n                <td>\n                  <TextField\n                    required\n                    id=\"outlined-number\"\n                    label=\"Altura prostata\"\n                    value={this.state.size2}\n                    onChange={this.handleChange(\"size2\")}\n                    type=\"number\"\n                    InputLabelProps={{\n                      shrink: true\n                    }}\n                    margin=\"dense\"\n                    // variant=\"outlined\"\n                  />\n                </td>\n                <td>\n                  <TextField\n                    required  \n                    id=\"outlined-number\"\n                    label=\"Espessura prostata\"\n                    value={this.state.size3}\n                    onChange={this.handleChange(\"size3\")}\n                    type=\"number\"\n                    InputLabelProps={{\n                      shrink: true\n                    }}\n                    margin=\"dense\"\n                    // variant=\"outlined\"\n                  />\n                </td>\n              </tr>\n              {/* -------------------------------------- */}\n              <tr>\n                <td style={{fontWeight:\"400\"}}>Qual o tipo do contorno ? (C2) </td>\n                <td>\n                  <FormControl variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-age-simple\"></InputLabel>\n                    <Select\n                      value={this.state.contornos}\n                      onChange={this.handleChangeSelect(\"contornos\")}\n                      // labelWidth={this.labelWidth}\n                      name=\"contornos\"\n                      inputProps={{\n                        name: \"contornos\",\n                        id: \"outlined-age-simple\"\n                      }}\n                      margin=\"dense\"\n                    >\n                      <MenuItem value=\"\">\n                        <em>None</em>\n                      </MenuItem>\n                      <MenuItem value={\"Normais\"}>Normais</MenuItem>\n                      <MenuItem value={\"Regulares\"}>Regulares</MenuItem>\n                      <MenuItem value={\"Irregulares\"}>Irregulares</MenuItem>\n                      <MenuItem value={\"Lobulados\"}>Lobulados</MenuItem>\n                    </Select>\n                  </FormControl>\n                </td>\n              </tr>\n              {/* --------------------------------------- */}\n              <tr>\n                <td>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={this.state.residuo}\n                        onChange={this.handleChange(\"residuo\")}\n                        value={this.state.residuo}\n                      />\n                    }\n                    label=\"Possui resíduo ? (C3) \"\n                  />\n                </td>\n                <td>\n                  {\" \"}\n                  <TextField\n                    required\n                    id=\"outlined-number\"\n                    label=\"Quantidade(ml)\"\n                    value={this.state.residuoML}\n                    onChange={this.handleChange(\"residuoML\")}\n                    type=\"number\"\n                    InputLabelProps={{\n                      shrink: true\n                    }}\n                    margin=\"dense\"\n                    // variant=\"outlined\"\n                  />\n                </td>\n              </tr>\n              {/* --------------------------------------- */}\n              <tr>\n                <td>\n                  {\" \"}\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={this.state.exameViaTransretal}\n                        onChange={this.handleChange(\"exameViaTransretal\")}\n                        value={this.state.exameViaTransretal}\n                      />\n                    }\n                    label=\"Exame via transretal ? (C4)\"\n                  />\n                </td>\n              </tr>\n              {/* ------------------------------------------ */}\n            </tbody>\n          </table>\n          {this.state.exameViaTransretal && (\n            <ExameTransversal\n              {...this.state}\n              handleChangeByToggle={this.handleChange}\n              handleChangeSelectByToggle={this.handleChangeSelect}\n            />\n          )}\n          <br />\n          <Button onClick={() => this.updateUser()} variant=\"contained\" color=\"primary\" >\n            Enviar\n          </Button>\n        </form>\n      </div>\n    );\n  }\n}\n\nclass ExameTransversal extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <form className=\"exameTransDiv\">\n        <table>\n          <thead></thead>\n          <tbody>\n            <tr>\n              <td colSpan=\"3\">\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={this.props.noduloPeriferica}\n                      onChange={this.props.handleChangeByToggle(\n                        \"noduloPeriferica\"\n                      )}\n                      value={this.props.noduloPeriferica}\n                    />\n                  }\n                  label=\"Possui nódulo na zona periférica?               Qual o seu tipo ? (C5) \"\n                />\n\n                <FormControl variant=\"outlined\">\n                  <InputLabel htmlFor=\"outlined-age-simple\"></InputLabel>\n                  <Select\n                    value={this.props.noduloPerifericaTipo}\n                    onChange={this.props.handleChangeSelectByToggle(\n                      \"noduloPerifericaTipo\"\n                    )}\n                    // labelWidth={this.labelWidth}\n                    name=\"noduloPerifericaTipo\"\n                    inputProps={{\n                      name: \"noduloPerifericaTipo\",\n                      id: \"outlined-age-simple\"\n                    }}\n                    margin=\"dense\"\n                  >\n                    <MenuItem value=\"\">\n                      <em>None</em>\n                    </MenuItem>\n                    Hiperecogenico , Isoecogenico ou Hipoecogenico\n                    <MenuItem value={\"Hiperecogenico\"}>Hiperecogenico</MenuItem>\n                    <MenuItem value={\"Hipoecogenico\"}>Hipoecogenico</MenuItem>\n                    <MenuItem value={\"Isoecogenico\"}>Isoecogenico</MenuItem>\n                  </Select>\n                </FormControl>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <TextField \n                  required\n                  id=\"outlined-number\"\n                  label=\"Largura nódulo\"\n                  value={this.props.noduloSize1}\n                  onChange={this.props.handleChangeByToggle(\"noduloSize1\")}\n                  type=\"number\"\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                />\n              </td>\n              <td>\n                <TextField\n                  required\n                  id=\"outlined-number\"\n                  label=\"Altura nódulo\"\n                  value={this.props.noduloSize2}\n                  onChange={this.props.handleChangeByToggle(\"noduloSize2\")}\n                  type=\"number\"\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                />\n              </td>\n              <td>\n                <TextField\n                  required\n                  id=\"outlined-number\"\n                  label=\"Espessura nódulo(mm)\"\n                  value={this.props.noduloSize3}\n                  onChange={this.props.handleChangeByToggle(\"noduloSize3\")}\n                  type=\"number\"\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                />\n              </td>\n            </tr>\n            <tr>\n              <td style={{fontWeight:\"400\"}}> Aonde está o nódulo?  (C6)</td>\n              <td>\n                <FormControl variant=\"outlined\">\n                  <InputLabel htmlFor=\"outlined-age-simple\"></InputLabel>\n                  <Select\n                    value={this.props.noduloLocal}\n                    onChange={this.props.handleChangeSelectByToggle(\n                      \"noduloLocal\"\n                    )}\n                    // labelWidth={this.labelWidth}\n                    name=\"noduloLocal\"\n                    inputProps={{\n                      name: \"noduloLocal\",\n                      id: \"outlined-age-simple\"\n                    }}\n                    margin=\"dense\"\n                  >\n                    <MenuItem value=\"\">\n                      <em>None</em>\n                    </MenuItem>\n                    <MenuItem value={\"Zona Periférica\"}>\n                      Zona Periférica\n                    </MenuItem>\n                    <MenuItem value={\"Zona Central\"}>Zona Central</MenuItem>\n                    <MenuItem value={\"Zona de Transição\"}>\n                      Zona de Transição\n                    </MenuItem>\n                  </Select>\n                </FormControl>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={this.props.biopsia}\n                      onChange={this.props.handleChangeByToggle(\"biopsia\")}\n                      value={this.props.biopsia}\n                    />\n                  }\n                  label=\"Realizada a Biopsia? (C7)\"\n                />\n              </td>\n              <td>\n                <TextField\n                  required\n                  id=\"outlined-number\"\n                  label=\"Fragmentos\"\n                  value={this.props.fragmentos}\n                  onChange={this.props.handleChangeByToggle(\"fragmentos\")}\n                  type=\"number\"\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </form>\n    );\n  }\n}\n\nexport default ProstataForm;\n","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport './FinalForm.css';\n// import Button from \"@material-ui/core/Button\";\nimport ApiService from './Services/ApiService';\nimport Button from 'react-bootstrap-button-loader';\n\nclass FinalForm extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tobservacoes: '',\n\t\t\tconclusoes: '',\n\t\t\tconcluir: false,\n\t\t\temail: false,\n\t\t\tpdf: false,\n\t\t\tphrases: {}\n\t\t};\n\t\tthis.typeControl = {\n\t\t\ttext: [ 'observacoes', 'conclusoes' ]\n    };\n    this.data = {}\n\t\tthis.apiHandler = new ApiService();\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\n\t}\n\n\thandleChange = (name) => (event) => {\n\t\t\n\t\t\tthis.setState({\n\t\t\t\t...this.state,\n\t\t\t\t[name]: event.target.value\n\t\t\t});\n\t};\n\n\n\n\thandleSubmit(event) {\n\t\tevent.preventDefault();\n\t\tthis.setState({\n\t\t\tobservacoes: '',\n\t\t\tconclusoes: ''\n\t\t});\n\t}\n\n\tpopulateFields(data, phrases) {\n    console.log(data)\n\t\tconst {\n\t\t\thomogeneo,\n\t\t\testeatotico,\n\t\t\tdimensao,\n\t\t\thepatopiaCronica,\n\t\t\tciscoSimples,\n\t\t\tcistoSimplesMM,\n\t\t\tciscoSimplesSit,\n\t\t\tvariosCiscos,\n\t\t\tvariosCiscosMM,\n\t\t\tvariosCiscosSit,\n\t\t\tnoduloSolido,\n\t\t\tnoduloSolidoContorno,\n\t\t\tnoduloSolidoHMM,\n\t\t\tnoduloSolidoVMM,\n\t\t\tnoduloSolidoTipo,\n\t\t\tcalcificacaoGrosseira,\n\t\t\tcalcificacaoGrosseiraMM,\n\t\t\tcalcificacaoGrosseiraSit\n\t\t} = data;\n\t\n\t\tlet campoObservasoes = '';\n\t\tlet campoConclusoes = '';\n\t\tlet { observations, conclusions } = phrases;\n\t\tlet auxString = '';\n\t\tif (homogeneo) {\n\t\t\tif (dimensao != null && dimensao != '') {\n\t\t\t\tcampoObservasoes += observations.homogeneo.text.replace(/especificad@/g, dimensao.toLowerCase());\n\t\t\t}\n\t\t\tcampoConclusoes += conclusions.homogeneo.text;\n\t\t}\n\t\tif (esteatotico) {\n\t\t\tif (dimensao != null && dimensao != '') {\n\t\t\t\tcampoObservasoes += observations.esteatotico.text.replace(/especificad@/g, dimensao.toLowerCase());\n\t\t\t\tcampoConclusoes += conclusions.esteatotico.text.replace(/especificad@/g, dimensao.toLowerCase());\n\t\t\t}\n\t\t}\n\t\tif (hepatopiaCronica) {\n\t\t\tcampoObservasoes += observations.hepatopatiaCronica.text;\n\t\t\tcampoConclusoes += conclusions.hepatopariaCronica.text;\n\t\t}\n\t\tif (ciscoSimples) {\n\t\t\tauxString = observations.cistoSimples.text.replace(/especificad@/, cistoSimplesMM);\n\t\t\tcampoObservasoes += auxString.replace(/especificad@/, ciscoSimplesSit.toLowerCase());\n\t\t\tcampoConclusoes += conclusions.cistoSimples.text.replace(/especificad@/, ciscoSimplesSit.toLowerCase());\n\t\t}\n\t\tif (noduloSolido) {\n\t\t\tauxString = observations.noduloSolido.text.replace(\n\t\t\t\t/especificad@/,\n\t\t\t\t`${noduloSolidoHMM} x ${noduloSolidoVMM}`\n\t\t\t);\n\t\t\tcampoObservasoes += auxString.replace(/especificad@/, noduloSolidoTipo);\n\t\t\tcampoConclusoes += conclusions.noduloSolido.text;\n\t\t}\n\t\tif (calcificacaoGrosseira) {\n\t\t\tauxString = observations.calcificacaoGrosseira.text.replace(/especificad@/, calcificacaoGrosseiraMM);\n\t\t\tcampoObservasoes += auxString.replace(/especificad@/, calcificacaoGrosseiraSit.toLowerCase());\n\t\t\tcampoConclusoes += conclusions.calcificacaoGrosseira.text.replace(\n\t\t\t\t/especificad@/,\n\t\t\t\tcalcificacaoGrosseiraSit.toLowerCase()\n\t\t\t);\n\t\t}\n\t\tthis.setState({\n\t\t\tobservacoes: campoObservasoes,\n\t\t\tconclusoes: campoConclusoes\n\t\t});\n\t}\n\thandleClick(e) {\n    console.log(this.data, \"DATAA\")\n\t\tconst { name } = e.target;\n\t\tthis.setState({\n\t\t\t[name]: true\n    });\n    let data = { \n      observacoes: this.state.observacoes,\n      conclusoes: this.state.conclusoes,\n      paciente: this.data.pacient.nome,\n      idade: this.data.pacient.idade,\n      convenio: this.data.pacient.convenio,\n      email: this.data.pacient.email,\n      medico: this.data.medico,\n      medicoSolicitante: this.data.medicoSolicitante,\n      data: this.data.data\n\n    }\n\t\tswitch (name) {\n\t\t\tcase 'pdf':\n\t\t\t\tthis.apiHandler\n\t\t\t\t\t.downloadPdf(data)\n\t\t\t\t\t.then((response) => {\n\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t[name]: false\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t[name]: false\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'email':\n\t\t\t\tthis.apiHandler\n\t\t\t\t\t.sendEmail(data)\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t[name]: false\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t[name]: false\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'concluir':\n        console.log(this.props)\n        this.props.history.push(\"/laudos\")\n        break;\n\t\t}\n\t}\n\tcomponentDidMount() {\n\t\tconst apiHandler = new ApiService();\n\t\tconst id = this.props.match.params.id;\n\t\tapiHandler\n\t\t\t.getOneLiver(id)\n\t\t\t.then((data) => {\n        this.data = data\n\t\t\t\tapiHandler\n\t\t\t\t\t.getPhrases('liver')\n\t\t\t\t\t.then((phrases) => {\n\t\t\t\t\t\tthis.populateFields(data, phrases);\n\t\t\t\t\t})\n\t\t\t\t\t.catch((err) => console.log(err));\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t}\n\n\trender() {\n\t\tconsole.log(this.props);\n\t\treturn (\n\t\t\t<div className=\"mainDivGF\">\n\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t<table className=\"tableSize\">\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<h2> Resultado do exame </h2>{' '}\n\t\t\t\t\t\t\t\t</td>{' '}\n\t\t\t\t\t\t\t</tr>{' '}\n\t\t\t\t\t\t</thead>{' '}\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"\"> Observações: </label>{' '}\n\t\t\t\t\t\t\t\t</td>{' '}\n\t\t\t\t\t\t\t</tr>{' '}\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t {' '}\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tid=\"outlined-full-width\"\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tmargin: 8\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.observacoes}\n\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange('observacoes')}\n\t\t\t\t\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\t\t\t\t\tshrink: true\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>{' '}\n\t\t\t\t\t\t\t\t</td>{' '}\n\t\t\t\t\t\t\t</tr>{' '}\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"\"> Conclusões: </label>{' '}\n\t\t\t\t\t\t\t\t</td>{' '}\n\t\t\t\t\t\t\t</tr>{' '}\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t {' '}\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tid=\"outlined-full-width\"\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tmargin: 8\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.conclusoes}\n\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange('conclusoes')}\n\t\t\t\t\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\t\t\t\t\tshrink: true\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>{' '}\n\t\t\t\t\t\t\t\t</td>{' '}\n\t\t\t\t\t\t\t</tr>{' '}\n\t\t\t\t\t\t</tbody>{' '}\n\t\t\t\t\t</table>{' '}\n\t\t\t\t\t<div className=\"container container-buttons\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tloading={this.state.concluir}\n\t\t\t\t\t\t\tspinColor=\"black\"\n\t\t\t\t\t\t\tname=\"concluir\"\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tcolor: 'rgb(121,86,249)',\n\t\t\t\t\t\t\t\tbackgroundColor: 'rgb(240,240,240)',\n\t\t\t\t\t\t\t\tmargin: '10px'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonClick={(e) => this.handleClick(e)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tConcluir{' '}\n\t\t\t\t\t\t</Button>{' '}\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tloading={this.state.pdf}\n\t\t\t\t\t\t\tspinColor=\"black\"\n\t\t\t\t\t\t\tname=\"pdf\"\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tcolor: 'rgb(121,86,249)',\n\t\t\t\t\t\t\t\tbackgroundColor: 'rgb(240,240,240)',\n\t\t\t\t\t\t\t\tmargin: '10px'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonClick={(e) => this.handleClick(e)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tBaixar em PDF{' '}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tloading={this.state.email}\n\t\t\t\t\t\t\tspinColor=\"black\"\n\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tcolor: 'rgb(121,86,249)',\n\t\t\t\t\t\t\t\tbackgroundColor: 'rgb(240,240,240)',\n\t\t\t\t\t\t\t\tmargin: '10px'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonClick={(e) => this.handleClick(e)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tEnviar laudo por email{' '}\n\t\t\t\t\t\t</Button>{' '}\n\t\t\t\t\t</div>{' '}\n\t\t\t\t</form>{' '}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default FinalForm;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FigadoForm from \"./FigadoForm\";\nimport General from \"./GeneralForm\";\nimport ProstataForm from \"./ProstataForm\";\nimport FinalForm from \"./FinalForm\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\"\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular\n  }\n}));\n\nexport default function SimpleExpansionPanel() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel>\n        <ExpansionPanelSummary\n          //   expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography className={classes.heading}>General Info</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <General />\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n      {/* --------------------------------------------------------------------------------------- */}\n      <ExpansionPanel>\n        <ExpansionPanelSummary\n          //   expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2a-content\"\n          id=\"panel2a-header\"\n        >\n          <Typography className={classes.heading}>Laudo Figado</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <FigadoForm />\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n      {/* --------------------------------------------------------------------------------------- */}\n\n      <ExpansionPanel>\n        <ExpansionPanelSummary\n          //   expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2a-content\"\n          id=\"panel2a-header\"\n        >\n          <Typography className={classes.heading}>Laudo Prostata</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <ProstataForm />\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n\n      <ExpansionPanel>\n        <ExpansionPanelSummary\n          //   expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2a-content\"\n          id=\"panel2a-header\"\n        >\n          <Typography className={classes.heading}>Final</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <FinalForm />\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </div>\n  );\n}\n","import React, { Fragment } from 'react';\nimport Container from '@material-ui/core/Container';\nimport MaterialTable, { MTableToolbar } from 'material-table';\nimport ApiService from './Services/ApiService';\nimport SimpleExpansionPanel from './Expansion';\nimport Button from '@material-ui/core/Button';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\nexport default function MainTable(props) {\n\tconst [state,setState] = React.useState({\n\t\tbg: {\n\t\t\t// backgroundColor: \"#f0f0f0\",\n\t\t\t// color: 'red  '\n\t\t},\n\t\tcolumns: [\n\t\t\t{\n\t\t\t\ttitle: 'Ações',\n\t\t\t\tfield: 'acoes',\n\t\t\t\trender: (rowData) =>\n\t\t\t\t\trowData.status === 'Aberto' ? (\n\t\t\t\t\t\t<Link href=\"/newlaudoview\">\n\t\t\t\t\t\t\t<EditIcon />\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Link href=\"/newlaudoview\">\n\t\t\t\t\t\t\t<AssignmentIcon />\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t)\n\t\t\t},\n\t\t\t{ title: 'Exame', field: 'exam' },\n\t\t\t{ title: 'Paciente', field: 'pacient' },\n\t\t\t{\n\t\t\t\ttitle: 'Status',\n\t\t\t\tfield: 'status',\n\t\t\t\trender: (rowData) =>\n\t\t\t\t\trowData.status === 'Aberto' ? (\n\t\t\t\t\t\t<p style={{ color: 'green' }}>{rowData.status}</p>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<p style={{ color: 'red' }}>{rowData.status}</p>\n\t\t\t\t\t)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Delete',\n\t\t\t\tfield: 'delete',\n\t\t\t\trender: (rowData) => (\n\t\t\t\t\t<Button onClick={() => deleteExam(rowData.id)}>\n\t\t\t\t\t\t<DeleteIcon/>\n\t\t\t\t\t</Button>\n\t\t\t\t)\n\t\t\t}\n\t\t],\n\t\t\n  });\n  const [data, setData] = React.useState([]);\n\n\tconst apiHandler = new ApiService();\n\n\tReact.useEffect(\n\t\t() => {\n\t\t\tapiHandler.getAllExams().then(\n\t\t\t\tfunction(itemResponse) {\n\t\t\t\t\tconsole.log(itemResponse);\n\t\t\t\t\tsetData({\n\t\t\t\t\t\tdata: itemResponse.map((item) => ({\n\t\t\t\t\t\t\texam: item.examId,\n\t\t\t\t\t\t\tpacient: item.pacient.nome,\n\t\t\t\t\t\t\tstatus: item.state === 'done' ? 'Fechado' : 'Aberto',\n\t\t\t\t\t\t\tid: item._id\n\t\t\t\t\t\t}))\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tfunction(error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n  );\n\n\tconst deleteExam = (id) => {\n\t\t// await apiHandler.deleteExam(id);\n\t\t// const itemResponse = await apiHandler.getAllExams()\n\t\t// console.log('djalksjlkasjdlaksjdlasjdsa')\n\t\t// setData({\n\t\t// \t\tdata: itemResponse.map((item) => ({\n\t\t// \t\t\texam: item.examId,\n\t\t// \t\t\tpacient: item.pacient.nome,\n\t\t// \t\t\tstatus: item.state === 'done' ? 'Fechado' : 'Aberto',\n\t\t// \t\t\tid: item._id\n\t\t// \t\t}))\n\t\t// \t});\n\n\t\tapiHandler.deleteExam(id).then((response) => {\n\t\t\tapiHandler.getAllExams()\n\t\t\t.then((itemResponse) => {\n\t\t\t\tsetData({\n\t\t\t\t\tdata: itemResponse.map((item) => ({\n\t\t\t\t\t\texam: item.examId,\n\t\t\t\t\t\tpacient: item.pacient.nome,\n\t\t\t\t\t\tstatus: item.state === 'done' ? 'Fechado' : 'Aberto',\n\t\t\t\t\t\tid: item._id\n\t\t\t\t\t}))\n\t\t\t\t});\n\t\t\t}).catch((err) => console.log(err))\n\t\t})\n\t\t.catch((err) => console.log(err));\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Grid className=\"\">\n\t\t\t\t<MaterialTable\n\t\t\t\t\tstyle={state.bg}\n\t\t\t\t\tcolumn={{\n\t\t\t\t\t\tcellStyle: (cell) => ({\n\t\t\t\t\t\t\tbackgroundColor: 'red'\n\t\t\t\t\t\t})\n\t\t\t\t\t}}\n\t\t\t\t\ttitle=\"Procurar laudos\"\n\t\t\t\t\tcolumns={state.columns}\n\t\t\t\t\tdata={data.data}\n\t\t\t\t\tonRowClick={(evt, selectedRow) => {\n\t\t\t\t\t\treturn setState({ ...state, selectedRow });\n\t\t\t\t\t}}\n\t\t\t\t\toptions={{\n\t\t\t\t\t\trowStyle: (rowData) => ({\n\t\t\t\t\t\t\tbackgroundColor:\n\t\t\t\t\t\t\t\tstate.selectedRow && state.selectedRow.tableData.id === rowData.tableData.id\n\t\t\t\t\t\t\t\t\t? '#f0f5f5'\n\t\t\t\t\t\t\t\t\t: '#FFF'\n\t\t\t\t\t\t\t// color: (rowData.status === \"Aberto\" ? '#00b300' : '#ff3300')\n\t\t\t\t\t\t})\n\t\t\t\t\t}}\n\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Fragment>\n\t);\n}\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Link from '@material-ui/core/Link';\n\nconst options = [\n  <Link href=\"/\">Home</Link>,\n  <Link href=\"/laudos\">Laudos</Link>\n];\n\nconst ITEM_HEIGHT = 48;\n\nexport default function LongMenu() {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <IconButton\n        aria-label=\"more\"\n        aria-controls=\"long-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n        <MoreVertIcon />\n      </IconButton>\n      <Menu\n        id=\"long-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={open}\n        onClose={handleClose}\n        PaperProps={{\n          style: {\n            maxHeight: ITEM_HEIGHT * 4.5,\n            width: 200,\n          },\n        }}\n      >\n        {options.map(option => (\n          <MenuItem key={option} selected={option === 'Pyxis'} onClick={handleClose}>\n            {option}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Link from '@material-ui/core/Link';\n// import { Link } from 'react-router-dom'\nimport Button from '@material-ui/core/Button';\nimport PostAddOutlinedIcon from '@material-ui/icons/PostAddOutlined';\n\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Menubar from './Menubar.js';\nimport BuildIcon from '@material-ui/icons/Build';\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tflexGrow: 1\n\t},\n\tmenuButton: {\n\t\tmarginRight: theme.spacing(2)\n\t},\n\ttitle: {\n\t\tflexGrow: 1\n\t},\n\tlogo: {\n\t\tmarginBottom: '35px',\n\t\tbackgroundImage: 'url(/img/Logo.svg)',\n\t\tbackgroundRepeat: 'no-repeat',\n\t\tbackgroundPosition: 'center',\n\t\theight: '6vh',\n\t\twidth: '50vh',\n\t\tbackgroundSize: '150px',\n\t\tposition: 'absolute',\n\t\ttop: '50%',\n\t\tmarginLeft: '90px',\n\t\ttransform: 'translate(-50%, -50%)'\n\t},\n\tjustify: {\n\t\talignItems: 'center'\n\t}\n}));\n\nexport default function NavBar() {\n\tconst classes = useStyles();\n\tconst [ anchorEl, setAnchorEl ] = React.useState(null);\n\n\tconst handleMenu = (event) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClick = (event) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\treturn (\n\t\t<div className={classes.root && 'fixed-top'}>\n\t\t\t<FormGroup />\n\t\t\t<AppBar position=\"static\">\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<Link href=\"/\" className={classes.logo} />\n\t\t\t\t\t<Typography variant=\"h6\" className={classes.title} />\n\t\t\t\t\t{/* <Tooltip disableFocusListener title=\"Home\">\n            <Button href=\"/\">Home</Button>\n          </Tooltip>\n          <Tooltip disableFocusListener title=\"Laudos\">\n            <Button href=\"Laudos\">Laudos</Button>\n          </Tooltip> */}\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" href=\"/newlaudoview\">\n\t\t\t\t\t\t\t<PostAddOutlinedIcon />\n\t\t\t\t\t\t\tNovo Exame\n\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t<Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n\t\t\t\t\t\t\t<BuildIcon />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Menu\n\t\t\t\t\t\t\tid=\"simple-menu\"\n\t\t\t\t\t\t\tanchorEl={anchorEl}\n\t\t\t\t\t\t\tkeepMounted\n\t\t\t\t\t\t\topen={Boolean(anchorEl)}\n\t\t\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Link href=\"/Medicos\">\n\t\t\t\t\t\t\t\t<MenuItem onClick={handleClose}>Médicos</MenuItem>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<Link href=\"/MedicosSolicitante\">\n\t\t\t\t\t\t\t\t<MenuItem onClick={handleClose}>Médicos Solitantes</MenuItem>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<Link href=\"/Convenios\">\n\t\t\t\t\t\t\t\t<MenuItem onClick={handleClose}>Convênios</MenuItem>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<Link href=\"/Clinicas\">\n\t\t\t\t\t\t\t\t<MenuItem onClick={handleClose}>Clinicas</MenuItem>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t\t<Link href=\"/dashboard\">\n\t\t\t\t\t\t\t\t<MenuItem onClick={handleClose}>Dashboard</MenuItem>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Menu>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Router>\n\t\t\t\t\t\t\t<Menubar />\n\t\t\t\t\t\t</Router>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\taria-label=\"account of current user\"\n\t\t\t\t\t\t\taria-controls=\"menu-appbar\"\n\t\t\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\t\t\tonCl\n\t\t\t\t\t\t\tick={handleMenu}\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\thref=\"/Cadastro\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<AccountCircle />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</div>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</div>\n\t);\n}\n","import React, {Component} from 'react'\n\n\n\nclass Footer extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n    \n    }\n  }\n\n  \n  render() {\n    return (\n      <div>\n<footer className=\"bg-dark text-white\">\n    <div className=\"container py-4 mx--74 \">\n      <div className=\"row\">\n        <div className=\"col\">\n          \n          <ul className=\"list-unstyled\">\n          </ul>\n          <h4 className=\"h6\">DADOS DE CONTATO</h4>\n          <ul className=\"list-unstyled text-secondary\">\n             <strong style={{color: 'white'}}>email:</strong> contato@onreport.com.br <strong style={{color: 'white'}}>contato:</strong> 11 99999-9999 <strong style={{color: \"white\"}}>aberto:</strong> de seg. à Sexta das 8hrs às 18hrs\n          <p style={{color: \"white\"}}>Copyright © OnReport 2019</p>\n          </ul>\n        </div>\n       \n  \n      </div>\n    </div>\n  </footer>\n  </div>\n    )\n  };\n}\n\nexport default Footer \n\n\n\n\n","import React, {Component} from 'react'\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport MainTable from './MainTable'\nimport Navbar from './Navbar'\nimport Footer from './Footer'\nimport {Link} from 'react-router-dom'\n\nclass Laudos extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n    \n    }\n  }\n\n  render(){\n    return (\n          <div>\n            <Router>\n              <div id=\"main\"></div>\n              <Navbar/>\n                <MainTable/>\n                <Footer/>\n            </Router> \n      </div>\n    )\n  }\n}\n\n  export default Laudos","import React from 'react';\nimport MaterialTable from 'material-table';\nimport { Container } from '@material-ui/core';\nimport Grid from \"@material-ui/core/Grid\";\n\n\n\n  export default function MainTable() {\n    const [state, setState] = React.useState({\n      // bg: {\n      //   backgroundColor: \"#f0f0f0\",\n      //   color: 'red'\n      // },  \n      columns: [\n        { title: 'Medico', field: 'medico' },\n        { title: 'CRM', field: 'crm' },\n        { title: 'Estado', field: 'estado' },\n      ],\n      data: [\n        { medico: 'João Lisboa Campos', crm: '33345223', 'estado': 'São Paulo' },\n        {\n          medico: 'Leticia Pardo',crm: '333353', 'estado': 'Bahia '\n        },\n        \n      ],\n    });\n\n    \n    return (\n      <Grid className=\"mt-5 pt-4\">\n      <MaterialTable \n        style={state.bg}\n        title=\"Cadastro Medicos\"\n        columns={state.columns}\n        data={state.data}\n        onRowClick={((evt, selectedRow) =>{\n          \n          return setState( {...state }, { selectedRow })\n          }) }\n        options={{\n          rowStyle: rowData => ({\n            backgroundColor: (state.selectedRow && state.selectedRow.tableData.id === rowData.tableData.id) ? 'red' : '#FFF'\n          })\n        }}\n        editable={{\n          onRowAdd: newData =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                const data = [...state.data];\n                data.push(newData);\n                setState({ ...state, data });\n              }, 600);\n            }),\n          onRowUpdate: (newData, oldData) =>\n            new Promise(resolve => {\n              // setTimeout(() => {\n                resolve();\n                const data = [...state.data];\n                data[data.indexOf(oldData)] = newData;\n                setState({ ...state, data });\n              // }, 600);\n            }),\n          onRowDelete: oldData =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                const data = [...state.data];\n                data.splice(data.indexOf(oldData), 1);\n                setState({ ...state, data });\n              }, 600);\n            }),\n        }}\n      />\n      </Grid>\n      \n    );\n  }\n\n\n\n  ","import React, {Component} from 'react'\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport MainTableMedicos from './MainTableMedicos'\nimport Navbar from './Navbar'\nimport Footer from './Footer'\n\nclass Medicos extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n    \n    }\n  }\n\n  render(){\n    return (\n          <div>\n            <Router>\n              <div id=\"main\"></div>\n              <Navbar/>\n                <MainTableMedicos/>\n              <Footer/>\n            </Router> \n      </div>\n    )\n  }\n}\n\nexport default Medicos","import React from 'react';\nimport MaterialTable from 'material-table';\nimport Grid from \"@material-ui/core/Grid\";\n\n\n  export default function MainTable() {\n    const [state, setState] = React.useState({\n      // bg: {\n      //   backgroundColor: \"#f0f0f0\",\n      //   color: 'red'\n      // },  \n      columns: [\n        { title: 'Medico', field: 'medico' },\n        { title: 'CRM', field: 'crm' },\n        { title: 'Estado', field: 'estado' },\n      ],\n      data: [\n        { medico: 'Patricia Campos', crm: '33345223', 'estado': 'Rio de Janeiro' },\n        {\n          medico: 'Sandra Bullock',crm: '333353', 'estado': 'Maranhão '\n        },\n        \n      ],\n    });\n\n    \n    return (\n      <Grid className=\"mt-5 pt-4\">\n      <MaterialTable \n        style={state.bg}\n        title=\"Cadastro Medicos Solicitante\"\n        columns={state.columns}\n        data={state.data}\n        onRowClick={((evt, selectedRow) =>{\n          \n          return setState( {...state }, { selectedRow })\n          }) }\n        options={{\n          rowStyle: rowData => ({\n            backgroundColor: (state.selectedRow && state.selectedRow.tableData.id === rowData.tableData.id) ? 'red' : '#FFF'\n          })\n        }}\n        editable={{\n          onRowAdd: newData =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                const data = [...state.data];\n                data.push(newData);\n                setState({ ...state, data });\n              }, 600);\n            }),\n          onRowUpdate: (newData, oldData) =>\n            new Promise(resolve => {\n              // setTimeout(() => {\n                resolve();\n                const data = [...state.data];\n                data[data.indexOf(oldData)] = newData;\n                setState({ ...state, data });\n              // }, 600);\n            }),\n          onRowDelete: oldData =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                const data = [...state.data];\n                data.splice(data.indexOf(oldData), 1);\n                setState({ ...state, data });\n              }, 600);\n            }),\n        }}\n      />\n      </Grid>\n      \n    );\n  }\n\n\n\n  ","import React, {Component} from 'react'\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport MainTableMedicosSolicitante from './MainTableMedicosSolicitante'\nimport Navbar from './Navbar'\nimport Footer from './Footer'\n\nclass MedicosSolicitante extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n    \n    }\n  }\n\n  render(){\n    return (\n          <div>\n            <Router>\n              <div id=\"main\"></div>\n              <Navbar/>\n                <MainTableMedicosSolicitante/>\n              <Footer/>\n            </Router> \n      </div>\n    )\n  }\n}\n\nexport default MedicosSolicitante","import React from 'react';\nimport MaterialTable from 'material-table';\nimport Grid from \"@material-ui/core/Grid\";\n\n\n\n  export default function MainTable() {\n    const [state, setState] = React.useState({\n      // bg: {\n      //   backgroundColor: \"#f0f0f0\",\n      //   color: 'red'\n      // },  \n      columns: [\n        { title: 'Clinicas', field: 'clinica' },\n      ],\n      data: [\n        { clinica: 'Albert Einstein' },\n        { clinica: 'São Domingos' },\n        { clinica: 'UDI' },\n      ],\n    });\n\n    \n    return (\n      <Grid className=\"mt-5 pt-4\">\n\n      <MaterialTable \n        style={state.bg}\n        title=\"Cadastro Clinicas\"\n        columns={state.columns}\n        data={state.data}\n        onRowClick={((evt, selectedRow) =>{\n          \n          return setState( {...state }, { selectedRow })\n          }) }\n        options={{\n          rowStyle: rowData => ({\n            backgroundColor: (state.selectedRow && state.selectedRow.tableData.id === rowData.tableData.id) ? 'red' : '#FFF'\n          })\n        }}\n        editable={{\n          onRowAdd: newData =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                const data = [...state.data];\n                data.push(newData);\n                setState({ ...state, data });\n              }, 600);\n            }),\n          onRowUpdate: (newData, oldData) =>\n            new Promise(resolve => {\n              // setTimeout(() => {\n                resolve();\n                const data = [...state.data];\n                data[data.indexOf(oldData)] = newData;\n                setState({ ...state, data });\n              // }, 600);\n            }),\n          onRowDelete: oldData =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                const data = [...state.data];\n                data.splice(data.indexOf(oldData), 1);\n                setState({ ...state, data });\n              }, 600);\n            }),\n        }}\n      />\n      </Grid>\n      \n    );\n  }\n\n\n\n  ","import React, {Component} from 'react'\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport MainTableClinicas from './MainTableClinicas'\nimport Navbar from './Navbar'\nimport Footer from './Footer'\n\nclass Clinicas extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n    \n    }\n  }\n\n  render(){\n    return (\n          <div>\n            <Router>\n              <div id=\"main\"></div>\n              <Navbar/>\n                <MainTableClinicas/>\n              <Footer/>\n            </Router> \n      </div>\n    )\n  }\n}\n\nexport default Clinicas","import React, {Component} from 'react'\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Navbar from './Navbar'\nimport Footer from './Footer'\nimport GeneralForm from './GeneralForm';\n\nclass NewLaudoView extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n    \n    }\n  }\n\n  render(){\n    return (\n          <div>\n            <Router>\n              <div id=\"main\"></div>\n              <Navbar/>\n                <GeneralForm rest={this.props}/>\n                <Footer/>\n            </Router> \n      </div>\n    )\n  }\n}\n\n  export default NewLaudoView\n","import React, {Component} from 'react'\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Navbar from './Navbar'\nimport Footer from './Footer'\nimport ProstataForm from './ProstataForm';\n\nclass NewProstataView extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n    \n    }\n  }\n\n  render(){\n    console.log(this.props)\n    return (\n          <div>\n            <Router>\n              <div id=\"main\"></div>\n              <Navbar/>\n                <ProstataForm rest={this.props}/>\n                <Footer/>\n            </Router> \n      </div>\n    )\n  }\n}\n\n  export default NewProstataView\n","import React from 'react';\nimport MaterialTable from 'material-table';\nimport Grid from \"@material-ui/core/Grid\";\n\n\n\n  export default function MainTable() {\n    const [state, setState] = React.useState({\n      // bg: {\n      //   backgroundColor: \"#f0f0f0\",\n      //   color: 'red'\n      // },  \n      columns: [\n        { title: 'Convênio', field: 'convenio' },\n      ],\n      data: [\n        { convenio: 'Unimed' },\n        { convenio: 'Cassi'},\n        { convenio: 'Bradesco'},\n        { convenio: 'Hapvida'}\n      ],\n    });\n\n    \n    return (\n      <Grid className=\"mt-5 pt-4\">\n      <MaterialTable \n        style={state.bg}\n        title=\"Cadastro Convênios\"\n        columns={state.columns}\n        data={state.data}\n        onRowClick={((evt, selectedRow) =>{\n          \n          return setState( {...state }, { selectedRow })\n          }) }\n        options={{\n          rowStyle: rowData => ({\n            backgroundColor: (state.selectedRow && state.selectedRow.tableData.id === rowData.tableData.id) ? 'red' : '#FFF'\n          })\n        }}\n        editable={{\n          onRowAdd: newData =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                const data = [...state.data];\n                data.push(newData);\n                setState({ ...state, data });\n              }, 600);\n            }),\n          onRowUpdate: (newData, oldData) =>\n            new Promise(resolve => {\n              // setTimeout(() => {\n                resolve();\n                const data = [...state.data];\n                data[data.indexOf(oldData)] = newData;\n                setState({ ...state, data });\n              // }, 600);\n            }),\n          onRowDelete: oldData =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                const data = [...state.data];\n                data.splice(data.indexOf(oldData), 1);\n                setState({ ...state, data });\n              }, 600);\n            }),\n        }}\n      />\n      </Grid>\n      \n      \n    );\n  }\n\n\n\n  ","import React, {Component} from 'react'\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport MainTableConvenios from './MainTableConvenios.js'\nimport Navbar from './Navbar'\nimport Footer from './Footer'\n\nclass Convenios extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n    \n    }\n  }\n\n  render(){\n    return (\n          <div>\n            <Router>\n              <div id=\"main\"></div>\n              <Navbar/>\n              <MainTableConvenios/>\n              <Footer/>\n            </Router> \n      </div>\n    )\n  }\n}\n\nexport default Convenios","import React, {Component} from 'react'\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Navbar from './Navbar'\nimport Footer from './Footer'\nimport FigadoForm from './FigadoForm';\n\nclass NewFigadoView extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n    \n    }\n  }\n\n  render(){\n    return (\n          <div>\n            <Router>\n              <div id=\"main\"></div>\n              <Navbar/>\n              <FigadoForm rest={this.props}/>\n                <Footer/>\n            </Router> \n      </div>\n    )\n  }\n}\n\n  export default NewFigadoView\n","\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst protectedRoute  = ({component: Component, user, ...rest}) => {\n  console.log({component: Component, user, ...rest})\n    return (\n      <Route\n        {...rest}\n        render={ props  => {\n            if(user){\n              console.log(\"entrou\")\n              return <Component {...props} loggedInUser={user}/>\n            } else {\n              return <Redirect to={{pathname: '/', state: {from: props.location}}} />\n            }\n          }\n        }\n      />\n    )\n}\nexport default protectedRoute;","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport Link from '@material-ui/core/Link';\nimport AccountBoxOutlinedIcon from '@material-ui/icons/AccountBoxOutlined';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport HomeWorkOutlinedIcon from '@material-ui/icons/HomeWorkOutlined';\nimport ReceiptOutlinedIcon from '@material-ui/icons/ReceiptOutlined';\n\nexport const mainListItems = (\n  <div>\n    <ListItem button>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n    <Link href=\"/laudos \">\n      <ListItemText primary=\"Home\" />\n      </Link>\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n      <AssignmentIcon />  \n      </ListItemIcon>\n      <Link href=\"/Laudos\">\n      <ListItemText primary=\"Laudos\" />\n      </Link>\n    </ListItem>\n  </div>\n);\n\nexport const secondaryListItems = (\n  <div>\n    <ListSubheader inset>Configurações</ListSubheader>\n    <ListItem button>\n      <ListItemIcon>\n        <AccountCircleOutlinedIcon />\n      </ListItemIcon>\n      <Link href=\"/medicos\">\n      <ListItemText primary=\"Medicos\" />\n      </Link>\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AccountBoxOutlinedIcon />\n      </ListItemIcon>\n      <Link href=\"/medicossolicitante\"> \n      <ListItemText primary=\"Medico Auxiliar\" />\n      </Link>\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <HomeWorkOutlinedIcon />\n      </ListItemIcon>\n      <Link href=\"clinicas\">\n      <ListItemText primary=\"Clinicas\" />\n      </Link>\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <ReceiptOutlinedIcon />\n      </ListItemIcon>\n      <Link href=\"/convenios\">\n      <ListItemText primary=\"Convenios\" />\n      </Link>\n    </ListItem>\n  </div>\n);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","import React from 'react';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\nconst data = [\n  createData('Semana 1', 300),\n  createData('Semana 2', 600),\n  createData('Semana 3', 800),\n  createData('Semana 4', 1000),\n];\n\nexport default function ChartSemana() {\n  return (\n    <React.Fragment>\n      <Title>Mês</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"time\" />\n          <YAxis>\n            <Label angle={270} position=\"left\" style={{ textAnchor: 'middle' }}>\n              Reais (R$)\n            </Label>\n          </YAxis>\n          <Line type=\"monotone\" dataKey=\"amount\" stroke=\"#556CD6\" dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\nconst data = [\n  createData('1', 300),\n  createData('2', 600),\n  createData('3', 700),\n  createData('4', 1000),\n  createData('5', 1200),\n  createData('6', 1400),\n  createData('7', 2000),\n  createData('8', 1900),\n  createData('9', 1000),\n  createData('10', 1300),\n  createData('11', 1500),\n  createData('12', 1800),\n  createData('13', 1900),\n  createData('14', 2000),\n  createData('15', 2500),\n  createData('16', 2300),\n  createData('17', 2400),\n  createData('18', 2600),\n  createData('19', 2600),\n  createData('20', 2700),\n  createData('21', 3000),\n  createData('22', 3400),\n  createData('23', 3500),\n  createData('24', 3900),\n  createData('25', 4000),\n  createData('26', 4300),\n  createData('27', 4100),\n  createData('28', 4300),\n  createData('29', 4400),\n  createData('20', 4500),\n\n\n];\n\nexport default function ChartDias() {\n  return (\n    <React.Fragment>\n      <Title>Ultimos 30 dias</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"time\" />\n          <YAxis>\n            <Label angle={270} position=\"left\" style={{ textAnchor: 'middle' }}>\n              Reais (R$)\n            </Label>\n          </YAxis>\n          <Line type=\"monotone\" dataKey=\"amount\" stroke=\"#556CD6\" dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { mainListItems, secondaryListItems } from './listItems';\nimport ChartSemana from './ChartSemana'\nimport ChartDias from './ChartDias'\nimport Link from '@material-ui/core/Link';\n\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n\t\tcolor: 'black',\n    paddingRight: 24, // keep right padding when drawer closed\n\t},\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n\t\t\t\t\t\tDashboard\n          </Typography>\n          {/* <IconButton color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton> */}\n\t\t\t\t\t\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n        <List>{secondaryListItems}</List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            {/* Chart */}\n            <Grid item xs={12} md={8} lg={12}>\n              <Paper className={fixedHeightPaper}>\n                <ChartSemana />\n              </Paper>\n            </Grid>\n\t\t\t\t\t\t<Grid item xs={12} md={8} lg={12}>\n              <Paper className={fixedHeightPaper}>\n                <ChartDias />\n              </Paper>\n            </Grid>\n            {/* Recent Deposits */}\n            {/* <Grid item xs={12} md={4} lg={3}>\n              <Paper className={fixedHeightPaper}>\n                <Deposits />\n              </Paper>\n            </Grid> */}\n\t\t\t\t\t\t\n            {/* Recent Orders */}\n            {/* <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <Orders />\n              </Paper>\n            </Grid> */}\n          </Grid>\n        </Container>\n      </main>\n    </div>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\n// import MenuItem from \"@material-ui/core/MenuItem\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport \"./App.css\";\nimport ApiService from './Services/ApiService'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Link from \"@material-ui/core/Link\";\nimport { Redirect } from 'react-router-dom'\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nexport default function GeneralForm(props) {\n\n  useEffect(()=> function addUser(onclick){\n\n  })\n    \n \n\n  useEffect((onClick)=> function handleSubmit(onClick) {\n  \n  });\n\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    data: new Date(),\n    clinica: \"\",\n    medico: \"\",\n    convenio: \"\",\n    medicoSolicitante: \"\",\n\n    dataDeNasc: new Date(),\n    nome: \"\",\n    idade: \"\",\n    telefone: \"\",\n    email: \"\",\n    selecionarExame: \"\",\n    hrefExam: \"/abc\"\n  });\n  \n  const inputLabel = React.useRef(null);\n  const [labelWidth, setLabelWidth] = React.useState(0);\n  React.useEffect(() => {\n    setLabelWidth(inputLabel.current.offsetWidth);\n  }, []);\n  const completePacient = objPacient =>{\n      console.log(objPacient)\n\n  }\n  //   const [selectedDate, setSelectedDate] = React.useState(\n  //     new Date(\"2014-08-18T21:11:54\")\n  //   );\n\n  const handleDateChange = dateName => date => {\n    setState({\n      ...state,\n      [dateName]: date\n    });\n  };\n\n  const handleChange = name => event => {\n   console.log(props)\n    if(name === \"selecionarExame\"){\n      console.log(event.target)\n      setState({\n        ...state,\n        [name]: event.target.value,\n      });\n    }else {\n      setState({\n        ...state,\n        [name]: event.target.value\n      });\n    }\n  };\n  \n\n  const handleSubmit = event => {\n  \n    event.preventDefault();\n    //axios\n    setState({\n      data: undefined,\n      clinica: \"\",\n      medico: \"\",\n      convenio: \"\",\n      medicoSolicitante: \"\",\n\n      dataDeNasc: undefined,\n      nome: \"\",\n      idade: \"\",\n      telefone: \"\",\n      email: \"\"\n    });\n  };\n  const addUser = event => {\n   \n    const apiHandler = new ApiService()\n   \n    const { dataDeNasc,nome,idade,telefone,email,convenio,clinica,medico,medicoSolicitante,data,selecionarExame} = state\n    \n  \n      apiHandler.newPacient(dataDeNasc,nome,idade,telefone,email,convenio)\n      .then(function(itemResponse) {\n        console.log('PACIENT!!!!!!!!',itemResponse)\n        console.log(selecionarExame)\n        if(selecionarExame===\"/newprostataview\"){\n          apiHandler.newProstate(clinica,medico,medicoSolicitante,data)\n        .then(function(response) {\n          console.log('PROSTATA!!!!!!!!!!!!!',response)\n        props.rest.history.push(`${selecionarExame}`)\n          \n        })\n        }\n        if(selecionarExame===\"figado\"){\n          apiHandler.newLiver(clinica,medico,medicoSolicitante,data)\n        }\n      \n        \n       \n      });\n  }\n\n  return (\n\n    <div className=\"mainDivGF\">\n      <form className=\"box-shadow p-4 marginBottom mt-5 \"  onSubmit={handleSubmit}>\n        <h3>Historico do Laudo Figado</h3>\n        <table>\n          <thead>\n            <tr>\n              <td>\n                <h3>Exame</h3>\n              </td>\n              <td className=\"pacienteTd\">\n                <h3>Paciente</h3>\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Data:</label>\n                  </td>\n                  <td>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                      <Grid container justify=\"space-around\">\n                        <KeyboardDatePicker\n                          disabled\n                          margin=\"normal\"\n                          id=\"date-picker-dialog\"\n                          format=\"dd/MM/yyyy\"\n                          value={state.data}\n                          onChange={handleDateChange(\"data\")}\n                          KeyboardButtonProps={{\n                            \"aria-label\": \"change date\"\n                          }}\n                        />\n                      </Grid>\n                    </MuiPickersUtilsProvider>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Clinica:</label>\n                  </td>\n\n                  <td>\n                    <FormControl\n                      // variant=\"outlined\"\n                      className={classes.formControl}\n                    >\n                      <InputLabel\n                        ref={inputLabel}\n                        htmlFor=\"outlined-age-simple\"\n                      ></InputLabel>\n                      <Select\n                      disabled\n                        native\n                        margin=\"dense\"\n                        value={state.clinica}\n                        onChange={handleChange(\"clinica\")}\n                        labelWidth={labelWidth}\n                        inputProps={{\n                          name: \"clinica\",\n                          id: \"outlined-clinica\"\n                        }}\n                      >\n                        <option value=\"\" />\n                        <option value={\"ten\"}>Ten</option>\n                        <option value={\"two\"}>Twenty</option>\n                        <option value={\"tree\"}>Thirty</option>\n                      </Select>\n                    </FormControl>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Medico:</label>\n                  </td>\n                  <td>\n                    <FormControl\n                      // variant=\"outlined\"\n                      className={classes.formControl}\n                    >\n                      {/* <InputLabel ref={inputLabel} htmlFor=\"outlined-age-simple\">\n                  Medico\n                </InputLabel> */}\n                      <Select\n                        disabled\n                        native\n                        value={state.medico}\n                        onChange={handleChange(\"medico\")}\n                        name=\"medico\"\n                        margin=\"dense\"\n                        labelWidth={labelWidth}\n                        inputProps={{\n                          name: \"medico\",\n                          id: \"outlined-medico\"\n                        }}\n                      >\n                        <option value=\"\" />\n                        <option value={\"ten\"}>Ten</option>\n                        <option value={20}>Twenty</option>\n                        <option value={30}>Thirty</option>\n                      </Select>\n                    </FormControl>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Convenio:</label>\n                  </td>\n                  <td>\n                    <FormControl\n                      // variant=\"outlined\"\n                      className={classes.formControl}\n                    >\n                      {/* <InputLabel ref={inputLabel} htmlFor=\"outlined-age-simple\">\n                  Convenio\n                </InputLabel> */}\n                      <Select\n                        disabled\n                        native\n                        value={state.convenio}\n                        onChange={handleChange(\"convenio\")}\n                        name=\"convenio\"\n                        margin=\"dense\"\n                        labelWidth={labelWidth}\n                        inputProps={{\n                          name: \"convenio\",\n                          id: \"outlined-convenio\"\n                        }}\n                      >\n                        <option value=\"\" />\n                        <option value={\"unimed\"}>Ten</option>\n                        <option value={20}>Twenty</option>\n                        <option value={30}>Thirty</option>\n                      </Select>\n                    </FormControl>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Medico Solicitante:</label>\n                  </td>\n                  <td>\n                    <FormControl\n                      // variant=\"outlined\"\n                      className={classes.formControl}\n                    >\n                      {/* <InputLabel ref={inputLabel} htmlFor=\"outlined-age-simple\">\n                  Convenio\n                </InputLabel> */}\n                      <Select\n                        disabled\n                        native\n                        name=\"medicoSolicitante\"\n                        value={state.medicoSolicitante}\n                        onChange={handleChange(\"medicoSolicitante\")}\n                        margin=\"dense\"\n                        labelWidth={labelWidth}\n                        inputProps={{\n                          name: \"medicoSolicitante\",\n                          id: \"outlined-medicoSolicitante\"\n                        }}\n                      >\n                        <option value=\"\" />\n                        <option value={\"ten\"}>Ten</option>\n                        <option value={20}>Twenty</option>\n                        <option value={30}>Thirty</option>\n                      </Select>\n                    </FormControl>\n                  </td>\n                </tr>\n              </td>\n              {/* --------------------------------------------------------------------------------------------- */}\n              <td className=\"mainTd\">\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Data de Nasc: </label>\n                  </td>\n                  <td>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                      <Grid container justify=\"space-around\">\n                        <KeyboardDatePicker\n                          disabled\n                          margin=\"normal\"\n                          id=\"date-picker-dialog\"\n                          format=\"dd/MM/yyyy\"\n                          value={state.dataDeNasc}\n                          onChange={handleDateChange(\"dataDeNasc\")}\n                          KeyboardButtonProps={{\n                            \"aria-label\": \"change date\"\n                          }}\n                        />\n                      </Grid>\n                    </MuiPickersUtilsProvider>\n                  </td>\n                </tr>\n\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Nome:</label>\n                  </td>\n                  <td>\n                    <TextField\n                      disabled\n                      id=\"outlined-dense\"\n                      margin=\"dense\"\n                      // variant=\"outlined\"\n                      name=\"nome\"\n                      type=\"text\"\n                      value={state.nome}\n                      onChange={handleChange(\"nome\")}\n                    />\n                  </td>\n                </tr>\n\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Idade:</label>\n                  </td>\n                  <td>\n                    <TextField\n                      disabled\n                      id=\"outlined-number\"\n                      name=\"idade\"\n                      margin=\"dense\"\n                      value={state.idade}\n                      onChange={handleChange(\"idade\")}\n                      type=\"number\"\n                      InputLabelProps={{\n                        shrink: true\n                      }}\n                      // variant=\"outlined\"\n                    />\n                  </td>\n                </tr>\n\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Telefone:</label>\n                  </td>\n                  <td>\n                    <TextField\n                      disabled\n                      id=\"outlined-tel\"\n                      margin=\"dense\"\n                      // label=\"Telefone\"\n                      // variant=\"outlined\"\n                      name=\"telefone\"\n                      type=\"tel\"\n                      value={state.telefone}\n                      onChange={handleChange(\"telefone\")}\n                    />\n                  </td>\n                </tr>\n\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">E-mail:</label>\n                  </td>\n                  <td>\n                    <TextField\n                      disabled\n                      id=\"outlined-email-input\"\n                   \n                      name=\"email\"\n                      autoComplete=\"email\"\n                      margin=\"dense\"\n                      // variant=\"outlin  ed\"\n                      onChange={handleChange(\"email\")}\n                      value={state.email}\n                    />\n                  </td>\n                </tr>\n               \n                <tr>\n                  <td>\n                    <label htmlFor=\"\">selecionar exame</label>\n                  </td>\n                  <td>\n                    <FormControl\n                      // variant=\"outlined\"\n                      className={classes.formControl}\n                    >\n                    \n                      <Select\n                        disabled\n                        native\n                        value={state.selecionarExame}\n                        onChange={handleChange(\"selecionarExame\")}\n                        name=\"selecionarExame\"\n                        margin=\"dense\"\n                        labelWidth={labelWidth}\n                        inputProps={{\n                          name: \"convenio\",\n                          id: \"outlined-convenio\"\n                        }}\n                      >\n                        <option value=\"\" />\n                        <option value={\"/newfigadoview\"}>figado</option>\n                        <option value={\"/newprostataview\"}>prostata</option>\n                        \n                      </Select>\n                    </FormControl>\n                  </td>\n                </tr>\n             \n               \n              </td>\n              \n              \n            </tr>\n          </tbody>\n        </table>\n        <br />\n        <p>Observações: </p>\n        <br/>\n        <p className=\"mb-4\">Conclusão: </p>\n\n  <br/>\n      </form>\n    </div>  \n  );\n}\n\n\n\n\n\n\n","import React, {Component} from 'react'\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport HistoricoFigadoForm from './HistoricoFigadoForm'\nimport Navbar from './Navbar'\nimport Footer from './Footer'\n\nclass Historico extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n    \n    }\n  }\n\n  render(){\n    return (\n          <div>\n            <Router>\n              <div id=\"main\"></div>\n              <Navbar/>\n                <HistoricoFigadoForm/>\n                <Footer/>\n            </Router> \n      </div>\n    )\n  }\n}\n\n  export default Historico","import React, { useState, useEffect } from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\n// import MenuItem from \"@material-ui/core/MenuItem\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport \"./App.css\";\nimport ApiService from './Services/ApiService'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Link from \"@material-ui/core/Link\";\nimport { Redirect } from 'react-router-dom'\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\n\n\nexport default function GeneralForm(props) {\n\n  useEffect(()=> function addUser(onclick){\n\n  })\n    \n \n\n  useEffect((onClick)=> function handleSubmit(onClick) {\n  \n      \n    \n\n   \n  });\n\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    data: new Date(),\n    clinica: \"\",\n    medico: \"\",\n    convenio: \"\",\n    medicoSolicitante: \"\",\n\n    dataDeNasc: new Date(),\n    nome: \"\",\n    idade: \"\",\n    telefone: \"\",\n    email: \"\",\n    selecionarExame: \"\",\n    hrefExam: \"/abc\"\n  });\n  \n  const inputLabel = React.useRef(null);\n  const [labelWidth, setLabelWidth] = React.useState(0);\n  React.useEffect(() => {\n    setLabelWidth(inputLabel.current.offsetWidth);\n  }, []);\n  const completePacient = objPacient =>{\n      console.log(objPacient)\n\n  }\n  //   const [selectedDate, setSelectedDate] = React.useState(\n  //     new Date(\"2014-08-18T21:11:54\")\n  //   );\n\n  const handleDateChange = dateName => date => {\n    setState({\n      ...state,\n      [dateName]: date\n    });\n  };\n\n  const handleChange = name => event => {\n   console.log(props)\n    if(name === \"selecionarExame\"){\n      console.log(event.target)\n      setState({\n        ...state,\n        [name]: event.target.value,\n      });\n    }else {\n      setState({\n        ...state,\n        [name]: event.target.value\n      });\n    }\n  };\n  \n\n  const handleSubmit = event => {\n  \n  \n \n    event.preventDefault();\n    //axios\n    setState({\n      data: undefined,\n      clinica: \"\",\n      medico: \"\",\n      convenio: \"\",\n      medicoSolicitante: \"\",\n\n      dataDeNasc: undefined,\n      nome: \"\",\n      idade: \"\",\n      telefone: \"\",\n      email: \"\"\n    });\n  };\n  const addUser = event => {\n   \n    const apiHandler = new ApiService()\n   \n    const { dataDeNasc,nome,idade,telefone,email,convenio,clinica,medico,medicoSolicitante,data,selecionarExame} = state\n    \n  \n      apiHandler.newPacient(dataDeNasc,nome,idade,telefone,email,convenio)\n      .then(function(itemResponse) {\n        console.log('PACIENT!!!!!!!!',itemResponse)\n        console.log(selecionarExame)\n        if(selecionarExame===\"/newprostataview\"){\n          apiHandler.newProstate(clinica,medico,medicoSolicitante,data)\n        .then(function(response) {\n          console.log('PROSTATA!!!!!!!!!!!!!',response)\n        props.rest.history.push(`${selecionarExame}`)\n          \n        })\n        }\n        if(selecionarExame===\"figado\"){\n          apiHandler.newLiver(clinica,medico,medicoSolicitante,data)\n        }\n      \n        \n       \n      });\n     \n  \n\n    \n  \n  }\n\n\n\n\n\n  return (\n\n    <div className=\"mainDivGF\">\n      <form className=\"box-shadow p-4 marginBottom mt-5\"  onSubmit={handleSubmit}>\n        <h3>Historico do Laudo Prostata</h3>\n        <table>\n          <thead>\n            <tr>\n              <td>\n                <h3>Exame</h3>\n              </td>\n              <td className=\"pacienteTd\">\n                <h3>Paciente</h3>\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Data:</label>\n                  </td>\n                  <td>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                      <Grid container justify=\"space-around\">\n                        <KeyboardDatePicker\n                          disabled\n                          margin=\"normal\"\n                          id=\"date-picker-dialog\"\n                          format=\"dd/MM/yyyy\"\n                          value={state.data}\n                          onChange={handleDateChange(\"data\")}\n                          KeyboardButtonProps={{\n                            \"aria-label\": \"change date\"\n                          }}\n                        />\n                      </Grid>\n                    </MuiPickersUtilsProvider>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Clinica:</label>\n                  </td>\n\n                  <td>\n                    <FormControl\n                      // variant=\"outlined\"\n                      className={classes.formControl}\n                    >\n                      <InputLabel\n                        ref={inputLabel}\n                        htmlFor=\"outlined-age-simple\"\n                      ></InputLabel>\n                      <Select\n                      disabled\n                        native\n                        margin=\"dense\"\n                        value={state.clinica}\n                        onChange={handleChange(\"clinica\")}\n                        labelWidth={labelWidth}\n                        inputProps={{\n                          name: \"clinica\",\n                          id: \"outlined-clinica\"\n                        }}\n                      >\n                        <option value=\"\" />\n                        <option value={\"ten\"}>Ten</option>\n                        <option value={\"two\"}>Twenty</option>\n                        <option value={\"tree\"}>Thirty</option>\n                      </Select>\n                    </FormControl>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Medico:</label>\n                  </td>\n                  <td>\n                    <FormControl\n                      // variant=\"outlined\"\n                      className={classes.formControl}\n                    >\n                      {/* <InputLabel ref={inputLabel} htmlFor=\"outlined-age-simple\">\n                  Medico\n                </InputLabel> */}\n                      <Select\n                        disabled\n                        native\n                        value={state.medico}\n                        onChange={handleChange(\"medico\")}\n                        name=\"medico\"\n                        margin=\"dense\"\n                        labelWidth={labelWidth}\n                        inputProps={{\n                          name: \"medico\",\n                          id: \"outlined-medico\"\n                        }}\n                      >\n                        <option value=\"\" />\n                        <option value={\"ten\"}>Ten</option>\n                        <option value={20}>Twenty</option>\n                        <option value={30}>Thirty</option>\n                      </Select>\n                    </FormControl>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Convenio:</label>\n                  </td>\n                  <td>\n                    <FormControl\n                      // variant=\"outlined\"\n                      className={classes.formControl}\n                    >\n                      {/* <InputLabel ref={inputLabel} htmlFor=\"outlined-age-simple\">\n                  Convenio\n                </InputLabel> */}\n                      <Select\n                        disabled\n                        native\n                        value={state.convenio}\n                        onChange={handleChange(\"convenio\")}\n                        name=\"convenio\"\n                        margin=\"dense\"\n                        labelWidth={labelWidth}\n                        inputProps={{\n                          name: \"convenio\",\n                          id: \"outlined-convenio\"\n                        }}\n                      >\n                        <option value=\"\" />\n                        <option value={\"unimed\"}>Ten</option>\n                        <option value={20}>Twenty</option>\n                        <option value={30}>Thirty</option>\n                      </Select>\n                    </FormControl>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Medico Solicitante:</label>\n                  </td>\n                  <td>\n                    <FormControl\n                      // variant=\"outlined\"\n                      className={classes.formControl}\n                    >\n                      {/* <InputLabel ref={inputLabel} htmlFor=\"outlined-age-simple\">\n                  Convenio\n                </InputLabel> */}\n                      <Select\n                        disabled\n                        native\n                        name=\"medicoSolicitante\"\n                        value={state.medicoSolicitante}\n                        onChange={handleChange(\"medicoSolicitante\")}\n                        margin=\"dense\"\n                        labelWidth={labelWidth}\n                        inputProps={{\n                          name: \"medicoSolicitante\",\n                          id: \"outlined-medicoSolicitante\"\n                        }}\n                      >\n                        <option value=\"\" />\n                        <option value={\"ten\"}>Ten</option>\n                        <option value={20}>Twenty</option>\n                        <option value={30}>Thirty</option>\n                      </Select>\n                    </FormControl>\n                  </td>\n                </tr>\n              </td>\n              {/* --------------------------------------------------------------------------------------------- */}\n              <td className=\"mainTd\">\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Data de Nasc: </label>\n                  </td>\n                  <td>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                      <Grid container justify=\"space-around\">\n                        <KeyboardDatePicker\n                          disabled\n                          margin=\"normal\"\n                          id=\"date-picker-dialog\"\n                          format=\"dd/MM/yyyy\"\n                          value={state.dataDeNasc}\n                          onChange={handleDateChange(\"dataDeNasc\")}\n                          KeyboardButtonProps={{\n                            \"aria-label\": \"change date\"\n                          }}\n                        />\n                      </Grid>\n                    </MuiPickersUtilsProvider>\n                  </td>\n                </tr>\n\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Nome:</label>\n                  </td>\n                  <td>\n                    <TextField\n                      disabled\n                      id=\"outlined-dense\"\n                      margin=\"dense\"\n                      // variant=\"outlined\"\n                      name=\"nome\"\n                      type=\"text\"\n                      value={state.nome}\n                      onChange={handleChange(\"nome\")}\n                    />\n                  </td>\n                </tr>\n\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Idade:</label>\n                  </td>\n                  <td>\n                    <TextField\n                      disabled\n                      id=\"outlined-number\"\n                      name=\"idade\"\n                      margin=\"dense\"\n                      value={state.idade}\n                      onChange={handleChange(\"idade\")}\n                      type=\"number\"\n                      InputLabelProps={{\n                        shrink: true\n                      }}\n                      // variant=\"outlined\"\n                    />\n                  </td>\n                </tr>\n\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Telefone:</label>\n                  </td>\n                  <td>\n                    <TextField\n                      disabled\n                      id=\"outlined-tel\"\n                      margin=\"dense\"\n                      // label=\"Telefone\"\n                      // variant=\"outlined\"\n                      name=\"telefone\"\n                      type=\"tel\"\n                      value={state.telefone}\n                      onChange={handleChange(\"telefone\")}\n                    />\n                  </td>\n                </tr>\n\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">E-mail:</label>\n                  </td>\n                  <td>\n                    <TextField\n                      disabled\n                      id=\"outlined-email-input\"\n                   \n                      name=\"email\"\n                      autoComplete=\"email\"\n                      margin=\"dense\"\n                      // variant=\"outlin  ed\"\n                      onChange={handleChange(\"email\")}\n                      value={state.email}\n                    />\n                  </td>\n                </tr>\n               \n                <tr>\n                  <td>\n                    <label htmlFor=\"\">selecionar exame</label>\n                  </td>\n                  <td>\n                    <FormControl\n                      // variant=\"outlined\"\n                      className={classes.formControl}\n                    >\n                    \n                      <Select\n                        disabled\n                        native\n                        value={state.selecionarExame}\n                        onChange={handleChange(\"selecionarExame\")}\n                        name=\"selecionarExame\"\n                        margin=\"dense\"\n                        labelWidth={labelWidth}\n                        inputProps={{\n                          name: \"convenio\",\n                          id: \"outlined-convenio\"\n                        }}\n                      >\n                        <option value=\"\" />\n                        <option value={\"/newfigadoview\"}>figado</option>\n                        <option value={\"/newprostataview\"}>prostata</option>\n                        \n                      </Select>\n                    </FormControl>\n                  </td>\n                </tr>\n             \n               \n              </td>\n              \n              \n            </tr>\n          </tbody>\n        </table>\n        <br />\n        <p>Observações:</p>\n        <br/>\n        <p className=\"mb-4\">Conclusão:</p>\n     \n  \n  <br/>\n  \n\n\n       \n      </form>\n    </div>  \n  );\n}\n\n\n\n\n\n\n","import React, {Component} from 'react'\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport HistoricoProstataForm from './HistoricoProstataForm'\nimport Navbar from './Navbar'\nimport Footer from './Footer'\n\nclass Historico extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n    \n    }\n  }\n\n  render(){\n    return (\n          <div>\n            <Router>\n              <div id=\"main\"></div>\n              <Navbar/>\n                <HistoricoProstataForm/>\n                <Footer/>\n            </Router> \n      </div>\n    )\n  }\n}\n\n  export default Historico","import React, { Component } from \"react\";\nimport skrollr from \"skrollr\";\nimport \"./LandingPageCover.css\";\nimport Button from \"@material-ui/core/Button\";\n\nclass LandingPageCover extends Component {\n  componentDidMount() {\n    skrollr.init();\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <div className=\"menu\">\n            <nav className=\"navigation navbar navbar-default navbar-fixed-top\">\n              <div className=\"container-fluid\">\n                <div className=\"navbar-header\">\n                  <a className=\"navbar-brand\" href=\"/landingPage\">\n                    <img\n                      id=\"brand\"\n                      className=\"img-responsive\"\n                      alt=\"Brand\"\n                      src=\"/img/OnReport_roxo.svg\"\n                    />\n                  </a>\n                </div>\n                {/* ------------------------------------------------- */}\n                <div>\n                  <a href=\"/login\">\n                    <button\n                      href=\"/login\"\n                      id=\"navButton\"\n                      className=\"navbar-text navbar-right btn btn-info\"\n                    >\n                      Login\n                    </button>\n                  </a>\n\n                  <a href=\"/signup\">\n                    <button\n                      href=\"/signup\"\n                      id=\"navButton\"\n                      className=\"navbar-text navbar-right btn btn-info\"\n                    >\n                      SignUp\n                    </button>\n                  </a>\n                </div>\n                {/* -------------------------------------------------- */}\n              </div>\n            </nav>\n          </div>\n        </div>\n        <div id=\"skrollr-body\">\n          <div\n            className=\"logocon\"\n            data-0=\"opacity: 1; display: flex\"\n            data-99=\"opacity: 0; display: none\"\n            data-100=\"display: none\"\n          >\n            <div className=\"logo\">\n              <img src=\"/img/OnReport_roxo.svg\" alt=\"\" id=\"imageLaudos\" />\n            </div>\n          </div>\n          <div\n            className=\"hint\"\n            data-0=\"bottom: 10vh\"\n            data-50=\"bottom:10vh\"\n            data-100=\"bottom: -85px\"\n          >\n            <img src=\"/img/arrow-down.png\" alt=\"\" />\n          </div>\n\n          <div className=\"content\">\n            <div>\n              {/* <!-- Header Banner --> */}\n              <div className=\"intro-header\">\n                <div className=\"container\">\n                  <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                      <div className=\"intro-message\">\n                        <h1 className=\"animated bounceInDown\">\n                          Crie e tenha total controle sobre seus laudos de\n                          exames.\n                        </h1>\n\n                        <ul\n                          className=\"list-inline intro-social-buttons\"\n                          id=\"headerButton\"\n                        ></ul>\n                        <div id=\"empty\"> </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                {/* <!-- /.container --> */}\n              </div>\n\n              {/* <!-- Page Content --> */}\n\n              {/* <!-- /.content-section-a --> --------------------------------------------------*/}\n\n              <div className=\"content-section-a\">\n                <div className=\"container\">\n                  <div className=\"row\">\n                    <div className=\"col-lg-5 col-lg-offset-1 col-sm-push-6  col-sm-6\">\n                      <div className=\"clearfix\"></div>\n                      <h2 className=\"section-heading\">Agilidade</h2>\n                      <hr className=\"section-heading-spacer\" />\n                      <div className=\"clearfix\"></div>\n                      <p className=\"lead\">\n                        O sistema OnReport permite laudar de forma extremamente\n                        rápida e ao mesmo tempo segura, encurtando o tempo de\n                        entrega dos resultados sem prejuízo da qualidade do\n                        laudo.\n                      </p>\n                    </div>\n                    <div className=\"col-lg-5 col-sm-pull-6  col-sm-6\">\n                      {/* <!-- /.image credit: simple.com --> */}\n\n                      <img\n                        className=\" img-responsive\"\n                        src=\"/img/lukas-blazek-UAvYasdkzq8-unsplash.jpg\"\n                        id=\"responsive\"\n                        alt=\"\"\n                      />\n                    </div>\n                  </div>\n                </div>\n                {/* <!-- /.container --> */}\n              </div>\n              {/* <!-- /.content-section-b --> */}\n\n              <div className=\"content-section-b\">\n                <div className=\"container\">\n                  <div className=\"row secb\">\n                    <div className=\"col-lg-5 col-sm-6\">\n                      <h2 className=\"section-heading\">Rentabilidade</h2>\n                      <hr className=\"section-heading-spacer\" />\n                      <div className=\"clearfix\"></div>\n\n                      <p className=\"lead\">\n                        O OnReport auxilia na agilidade da liberação, assim, sua\n                        clínica não só terá um grande diferencial em relação à\n                        concorrência, como terá um aumento significativo de\n                        renda.\n                      </p>\n                    </div>\n                    <div className=\"col-lg-5 col-lg-offset-2 col-sm-6\">\n                      <img\n                        className=\"img-responsive\"\n                        src=\"/img/pepi-stojanovski-MJSFNZ8BAXw-unsplash.jpg\"\n                        alt=\"\"\n                        id=\"responsive\"\n                      />\n                    </div>\n                  </div>\n                </div>\n                {/* <!-- /.container --> */}\n              </div>\n              {/* <!-- /.content-section-c --> */}\n\n              <div className=\"content-section-c\">\n                <div className=\"container\">\n                  <div className=\"row\">\n                    <div className=\"col-lg-5 col-lg-offset-1 col-sm-push-6  col-sm-6\">\n                      <h2 className=\"section-heading\">Speech to Text</h2>\n\n                      <hr className=\"section-heading-spacer\" />\n                      <div className=\"clearfix\"></div>\n                      <p className=\"lead\">\n                        O recurso mais renomado do OnReport é a funcionalidade\n                        <strong> Speech to Text</strong> ,no qual o médico dita\n                        para o sistema como o laudo deve ser preenchido. Assim o\n                        profissional pode realizar a consulta e o laudo ao mesmo\n                        tempo.\n                      </p>\n                    </div>\n                    <div className=\"col-lg-5 col-sm-pull-6  col-sm-6\">\n                      <img\n                        className=\"img-responsive\"\n                        id=\"responsive\"\n                        src=\"https://static.pexels.com/photos/57825/pexels-photo-57825-medium.jpeg\"\n                        alt=\"\"\n                      />\n                    </div>\n                  </div>\n                </div>\n                {/* <!-- /.container --> */}\n              </div>\n\n              {/* <!-- /.content-section-d --> */}\n\n              <div className=\"content-section-d\">\n                <div className=\"container\">\n                  <div className=\"row secb\">\n                    <div className=\"col-lg-5 col-sm-6\">\n                      <h2 className=\"section-heading-white\">Facilidade</h2>\n\n                      <hr className=\"section-heading-spacer-white\" />\n                      <div className=\"clearfix\"></div>\n                      <p className=\"lead-white\">\n                        O sistema é preparado para o dia a dia dos médicos,\n                        tornando-o imperativo e de fácil adaptação. Além de\n                        permitir novas customizações.\n                      </p>\n\n                      {/* <button\n                  href=\"#\"\n                  id=\"button-white\"\n                  className=\"animated bounceInUp btn btn-info btn-lg\"\n                >\n                  {\" \"}\n                  <span className=\"network-name\">CRUNCH DEBT TODAY</span>\n                </button> */}\n                    </div>\n                    <div className=\"col-lg-5 col-lg-offset-2 col-sm-6\">\n                      <img\n                        className=\"phone img-responsive\"\n                        id=\"responsive\"\n                        src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/827672/crunch_phone_%26_computer.png\"\n                        alt=\"\"\n                      />\n                    </div>\n                  </div>\n                </div>\n                {/* <!-- /.container --> */}\n              </div>\n\n              {/* <!-- Footer --> */}\n              <footer>\n                <div className=\"container\">\n                  <div className=\"row\">\n                    <p className=\"copyright text-muted small\">\n                      Copyright &copy; OnReport 2019. All Rights Reserved\n                    </p>\n                  </div>\n                </div>\n              </footer>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LandingPageCover;\n","import React, {Component} from 'react'\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Navbar from './Navbar'\nimport Footer from './Footer'\nimport FinalForm from './FinalForm';\n\nclass FinalView extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n    \n    }\n  }\n\n  render(){\n    return (\n          <div>\n            <Router>\n              <div id=\"main\"></div>\n              <Navbar/>\n                <FinalForm {...this.props}/>\n                <Footer/>\n            </Router> \n      </div>\n    )\n  }\n}\n\n  export default FinalView\n","import React, { Component } from \"react\";\n// import \"./LandingPage.css\";\nimport LandingPageCover from \"./LandingPageCover\";\n\nclass LandingPage extends Component {\n  render() {\n    return (\n      <div>\n        <LandingPageCover />\n      </div>\n    );\n  }\n}\n\nexport default LandingPage;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport VoiceRecognition from \"./Components/VoiceRecognition\";\nimport \"./App.css\";\nimport Login from \"./Components/auth/Login\";\nimport SignUp from \"./Components/auth/SignUp\";\nimport Laudos from \"./Laudos\";\nimport MainTable from \"./MainTable\";\nimport Medicos from \"./Medicos\";\nimport MedicosSolicitante from \"./MedicosSolicitante\";\nimport Clinicas from \"./Clinicas\";\nimport NewLaudoView from \"./NewLaudoView\";\nimport FinalForm from \"./FinalForm\";\nimport NewProstataView from \"./NewProstataView\";\nimport Convenios from \"./Convenios\";\nimport NewFigadoView from \"./NewFigadoView\";\nimport SimpleExpansionPanel from \"./Expansion\";\nimport AuthService from \"./Components/auth/auth-service\";\nimport ProtectedRoute from \"./Components/auth/protected-route\";\nimport Preview from \"./Components/Preview\";\nimport Dashboard from './Dashboard' \nimport HistoricoFigado from './HistoricoFigado' \nimport HistoricoProstata from './HistoricoProstata' \n\n\n// import { Switch } from? '@material-ui/core';\nimport LandingPage from \"./LandingPage\";\nimport FinalView from \"./FinalView\";\nimport LandingPageCover from \"./LandingPageCover\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedInUser: null\n    };\n    this.service = new AuthService();\n  }\n  fetchUser() {\n    if (this.state.loggedInUser === null) {\n      this.service\n        .loggedin()\n        .then(response => {\n          this.setState({ loggedInUser: response });\n        })\n        .catch(err => {\n          this.setState({ loggedInUser: false });\n        });\n    }\n  }\n\n  getTheUser = userObj => {\n    this.setState({ loggedInUser: userObj });\n  };\n  \n    render() {\n        if (this.state.loggedInUser) {\n            console.log(\"logado\")\n            return (\n\n                <div className=\"App\">\n                    <Switch>\n                        <Route exact path=\"/\" component={LandingPageCover} />\n                        <Route\n                            exact\n                            path=\"/login\"\n                            render={(props) => <Login {...props} getUser={this.getTheUser}/>}/>\n                        <Route path=\"/signup\" component={SignUp}/>\n                        <ProtectedRoute\n                            exact\n                            path=\"/laudos\"\n                            user={this.state.loggedInUser}\n                            component={Laudos}/>\n                        <Route path=\"/maintable\" component={MainTable}/>\n                        <Route path=\"/medicos\" component={Medicos}/>\n                        <Route path=\"/medicossolicitante\" component={MedicosSolicitante}/>\n                        <Route path=\"/convenios\" component={Convenios}/>\n                        <Route path=\"/clinicas\" component={Clinicas}/>\n                        <Route \n                        exact \n                        path=\"/newfigadoview/:id\" \n                        render={(props) => <NewFigadoView {...props}/>}/>\n                        <Route\n                            exact\n                            path=\"/finalLiver/:id\"\n                            render={(props) => <FinalView {...props}/>}/>\n                        <Route\n                            exact\n                            path=\"/newprostataview/:id\"\n                            render={(props) => <NewProstataView {...props}/>}/>\n                        <Route path=\"/newlaudoview\" render={(props) => <NewLaudoView {...props}/>}/>\n                        <Route path=\"/simpleexpansion\" component={SimpleExpansionPanel}/>\n                        <Route path=\"/dashboard\" component={Dashboard} />\n                        <Route path=\"/historicoprostata\" component={HistoricoProstata} />\n                        <Route path=\"/historicofigado\" component={HistoricoFigado} />\n\n                    </Switch>\n                </div>\n            )\n        } else {\n            console.log(\"n logado\")\n            return (\n                <div className=\"App\">\n                    <Switch>\n                        <Route exact path=\"/\" component={LandingPageCover} />\n                        <Route\n                            exact\n                            path=\"/login\"\n                            render={(props) => <Login {...props} getUser={this.getTheUser}/>}/>\n                        <Route path=\"/signup\" component={SignUp}/>\n                        <ProtectedRoute\n                            user={this.state.loggedInUser}\n                            exact\n                            path=\"/laudos\"\n                            component={Laudos}/>\n                        <Route path=\"/laudos\" component={Laudos}/>\n                        <Route path=\"/simpleexpansion\" component={SimpleExpansionPanel}/>\n                        <Route\n                         exact \n                         path=\"/newfigadoview/:id\" \n                         render={(props) => <NewFigadoView {...props}/>}/>\n                        <Route path=\"/medicos\" component={Medicos}/>\n                        <Route path=\"/convenios\" component={Convenios}/>\n                        <Route path=\"/clinicas\" component={Clinicas}/>\n                        <Route path=\"/medicossolicitante\" component={MedicosSolicitante}/>\n                        <Route path=\"/newlaudoview\" render={(props) => <NewLaudoView {...props}/>}/>\n                        <Route path=\"/newlaudoview\" render={(props)=> <NewLaudoView {...props}/>} />\n                        <Route path=\"/newprostataview\" component={NewProstataView} />\n                        <Route path=\"/dashboard\" component={Dashboard} />\n                        <Route path=\"/historicoprostata\" component={HistoricoProstata} />\n                        <Route path=\"/historicofigado\" component={HistoricoFigado} />\n                        <Route\n                            exact\n                            path=\"/finalLiver/:id\"\n                            render={(props) => <FinalView {...props}/>}/>\n                        <Route\n                            exact\n                            path=\"/newprostataview/:id\"\n                            render={(props) => <NewProstataView {...props}/>}/>\n                    </Switch>\n                </div>\n            )\n        }\n      }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n\n// export const registerServiceWorker = () => {\n//   if (\"serviceWorker\" in navigator) {\n//     window.addEventListener(\"load\", function() {\n//       navigator.serviceWorker\n//         .register(\"/sw.js\")\n//         .then(function(registration) {\n//           // Registration was successful\n//           console.log(\n//             \"ServiceWorker registration successful with scope: \",\n//             registration.scope\n//           );\n//         })\n//         .catch(function(err) {\n//           // registration failed :(\n//           console.log(\"ServiceWorker registration failed: \", err);\n//         });\n//     });\n//   }\n// };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}
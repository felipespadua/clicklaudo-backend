{"version":3,"sources":["Components/VoiceRecognition.js","Components/auth/auth-service.js","Components/auth/Login.js","Components/auth/SignUp.js","Services/ApiService.js","Components/Preview.js","FigadoForm.js","GeneralForm.js","ProstataForm.js","FinalForm.js","Expansion.js","MainTable.js","Menubar.js","Navbar.js","Footer.js","Laudos.js","MainTableMedicos.js","Medicos.js","MainTableMedicosSolicitante.js","MedicosSolicitante.js","MainTableClinicas.js","Clinicas.js","NewLaudoView.js","NewProstataView.js","MainTableConvenios.js","Convenios.js","NewFigadoView.js","Components/auth/protected-route.js","listItems.js","Title.js","ChartSemana.js","ChartDias.js","Dashboard.js","HistoricoFigadoForm.js","HistoricoFigado.js","HistoricoProstataForm.js","HistoricoProstata.js","LandingPageCover.js","App.js","LandingPage.js","FinalView.js","serviceWorker.js","index.js"],"names":["globalStream","undefined","input","context","processor","VoiceRecognition","props","socket","socketIOClient","bufferSize","AudioContext","finalWord","removeLastSetence","wordControl","state","response","streamStreaming","constraints","audio","video","classOn","initRecording","bind","startRecording","stopRecording","microphoneProcess","fillForm","this","emit","setState","window","webkitAudioContext","latencyHint","createScriptProcessor","connect","destination","resume","onAudioProcess","e","navigator","mediaDevices","getUserMedia","then","stream","createMediaStreamSource","onaudioprocess","left","inputBuffer","getChannelData","left16","downsampleBuffer","getTracks","stop","disconnect","close","buffer","sampleRate","outSampleRate","Error","sampleRateRatio","newLength","Math","round","length","result","Int16Array","offsetResult","offsetBuffer","nextOffsetBuffer","accum","count","i","min","s","charAt","toUpperCase","slice","on","data","console","log","results","isFinal","words","alternatives","map","alternative","normalizeText","transcript","replace","forEach","word","handleChangeVR","index","Object","keys","prevState","key","indexOf","text","toLowerCase","RegExp","className","Button","variant","type","onClick","changeClass","id","color","Component","AuthService","signup","username","password","name","service","post","login","loggedin","get","logout","axios","create","baseURL","process","withCredentials","useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","logo","marginBottom","width","paper","margin","spacing","display","flexDirection","alignItems","avatar","backgroundColor","palette","primary","main","form","marginTop","submit","Login","classes","React","useState","handleChange","event","target","value","Grid","container","component","item","xs","sm","md","Paper","elevation","square","Link","href","Avatar","Typography","onSubmit","preventDefault","getUser","history","push","catch","error","noValidate","TextField","required","label","textField","fullWidth","autoComplete","onChange","SignUp","CssBaseline","justify","ApiService","getAllExams","err","getOneLiver","newLiver","clinica","medico","medicoSolicitante","pacient","newProstate","newPacient","nome","idade","telefone","email","convenio","updateLiver","dimensao","homogeneo","esteatotico","hepatopiaCronica","ciscoSimples","cistoSimplesMM","ciscoSimplesSit","variosCiscos","variosCiscosMM","variosCiscosSit","noduloSolido","noduloSolidoTipo","noduloSolidoContorno","noduloSolidoHMM","noduloSolidoVMM","noduloSolidoSi","calcificacaoGrosseira","calcificacaoGrosseiraMM","calcificacaoGrosseiraSit","put","updateProstate","homogenio","size1","size2","size3","contornos","residuo","residuoML","exameViaTransretal","noduloPeriferica","noduloPerifericaTipo","noduloSize1","noduloSize2","noduloSize3","noduloLocal","biopsia","fragmentos","deleteExam","delete","getPhrases","examType","FigadoForm","checked","handleChangeBySpeech","checkBoxes","typeControl","checkBox","selects","includes","handleChangeSelect","updateUser","onclick","a","apiHandler","rest","match","params","_id","noduloSolidoSit","age","select","handleSubmit","FormControlLabel","control","Checkbox","FormControl","InputLabel","htmlFor","Select","inputProps","MenuItem","InputLabelProps","shrink","flexWrap","formControl","minWidth","selectEmpty","GeneralForm","useEffect","Date","dataDeNasc","selecionarExame","hrefExam","inputLabel","useRef","labelWidth","setLabelWidth","current","offsetWidth","handleDateChange","dateName","date","utils","DateFnsUtils","format","KeyboardButtonProps","ref","native","itemResponse","addUser","ProstataForm","show","colspan","handleChangeByToggle","handleChangeSelectByToggle","ExameTransversal","colSpan","FinalForm","observacoes","conclusoes","phrases","campoObservasoes","campoConclusoes","observations","conclusions","hepatopatiaCronica","hepatopariaCronica","cistoSimples","populateFields","style","multiline","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","SimpleExpansionPanel","ExpansionPanel","ExpansionPanelSummary","aria-controls","ExpansionPanelDetails","MainTable","bg","columns","title","field","render","rowData","status","setData","exam","examId","column","cellStyle","cell","onRowClick","evt","selectedRow","options","rowStyle","tableData","ITEM_HEIGHT","LongMenu","anchorEl","setAnchorEl","open","Boolean","handleClose","IconButton","aria-label","aria-haspopup","currentTarget","Menu","keepMounted","onClose","PaperProps","maxHeight","option","selected","flexGrow","menuButton","marginRight","position","top","marginLeft","transform","NavBar","FormGroup","AppBar","Toolbar","Divider","onCl","ick","Footer","Laudos","crm","editable","onRowAdd","newData","Promise","resolve","setTimeout","onRowUpdate","oldData","onRowDelete","splice","Medicos","MedicosSolicitante","Clinicas","NewLaudoView","NewProstataView","Convenios","NewFigadoView","protectedRoute","user","loggedInUser","to","pathname","from","location","mainListItems","ListItem","button","ListItemIcon","ListItemText","secondaryListItems","ListSubheader","inset","Title","gutterBottom","children","createData","time","amount","ChartSemana","Fragment","right","bottom","dataKey","angle","textAnchor","stroke","dot","ChartDias","toolbar","paddingRight","toolbarIcon","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButtonHidden","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","overflow","paddingTop","paddingBottom","fixedHeight","Dashboard","setOpen","fixedHeightPaper","clsx","edge","noWrap","Drawer","List","Container","maxWidth","lg","disabled","Historico","LandingPageCover","skrollr","init","data-0","data-99","data-100","src","alt","data-50","App","getTheUser","userObj","exact","path","HistoricoProstata","HistoricoFigado","isLocalhost","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","document","getElementById","URL","origin","addEventListener","fetch","contentType","headers","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e2bf4966.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport React from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport { ReactMic } from \"react-mic\";\n// import { isThisHour } from 'date-fns/esm';\n// import { nominalTypeHack } from 'prop-types';\nimport \"../../src/VR.css\";\nimport { isThisHour } from \"date-fns/esm\";\nimport { nominalTypeHack } from \"prop-types\";\nimport \"./VoiceRecognition.css\";\nimport Button from \"@material-ui/core/Button\";\n// import io from \"socket.io\"\nlet globalStream = undefined;\nlet input = undefined;\nlet context = undefined;\nlet processor = undefined;\n\nclass VoiceRecognition extends Component {\n  constructor(props) {\n    super(props);\n    this.socket = socketIOClient(\"http://localhost:5000\");\n    this.bufferSize = 2048;\n    this.AudioContext = undefined;\n    this.finalWord = false;\n    this.removeLastSetence = true;\n    this.wordControl = [];\n    this.state = {\n      response: false,\n      streamStreaming: false,\n      constraints: {\n        audio: true,\n        video: false\n      },\n      classOn: false\n    };\n    this.initRecording = this.initRecording.bind(this);\n    this.startRecording = this.startRecording.bind(this);\n    this.stopRecording = this.stopRecording.bind(this);\n    this.microphoneProcess = this.microphoneProcess.bind(this);\n    this.fillForm = this.fillForm.bind(this);\n  }\n\n  initRecording() {\n    this.socket.emit(\"startGoogleCloudStream\", \"\"); //init socket Google Speech Connection\n    this.setState({\n      streamStreaming: true\n    });\n    this.AudioContext = window.AudioContext || window.webkitAudioContext;\n    context = new AudioContext({\n      // if Non-interactive, use 'playback' or 'balanced' // https://developer.mozilla.org/en-US/docs/Web/API/AudioContextLatencyCategory\n      latencyHint: \"interactive\"\n    });\n    processor = context.createScriptProcessor(this.bufferSize, 1, 1);\n    processor.connect(context.destination);\n    context.resume();\n\n    let onAudioProcess = e => {\n      this.microphoneProcess(e);\n    };\n    let handleSuccess = function(stream) {\n      globalStream = stream;\n      input = context.createMediaStreamSource(stream);\n      input.connect(processor);\n\n      processor.onaudioprocess = onAudioProcess;\n    };\n\n    navigator.mediaDevices\n      .getUserMedia(this.state.constraints)\n      .then(handleSuccess);\n  }\n\n  microphoneProcess(e) {\n    var left = e.inputBuffer.getChannelData(0);\n    // var left16 = convertFloat32ToInt16(left); // old 32 to 16 function\n    var left16 = this.downsampleBuffer(left, 44100, 16000);\n    this.socket.emit(\"binaryData\", left16);\n  }\n  startRecording(e) {\n    // startButton.disabled = true;\n    // endButton.disabled = false;\n    // recordingStatus.style.visibility = \"visible\";\n    this.initRecording();\n  }\n  stopRecording(e) {\n    // waited for FinalWord\n    // startButton.disabled = false;\n    // endButton.disabled = true;\n    // recordingStatus.style.visibility = \"hidden\";\n    // streamStreaming = false;\n    this.socket.emit(\"endGoogleCloudStream\", \"\");\n    if (globalStream !== undefined) {\n      let track = globalStream.getTracks()[0];\n      track.stop();\n\n      input.disconnect(processor);\n      processor.disconnect(context.destination);\n      let closeContext = () => {\n        input = null;\n        processor = null;\n        context = null;\n        this.AudioContext = null;\n      };\n      context.close().then(closeContext);\n    }\n  }\n  downsampleBuffer(buffer, sampleRate, outSampleRate) {\n    if (outSampleRate == sampleRate) {\n      return buffer;\n    }\n    if (outSampleRate > sampleRate) {\n      throw new Error(\n        \"downsampling rate show be smaller than original sample rate\"\n      );\n    }\n    var sampleRateRatio = sampleRate / outSampleRate;\n    var newLength = Math.round(buffer.length / sampleRateRatio);\n    var result = new Int16Array(newLength);\n    var offsetResult = 0;\n    var offsetBuffer = 0;\n    while (offsetResult < result.length) {\n      var nextOffsetBuffer = Math.round((offsetResult + 1) * sampleRateRatio);\n      var accum = 0,\n        count = 0;\n      for (\n        var i = offsetBuffer;\n        i < nextOffsetBuffer && i < buffer.length;\n        i++\n      ) {\n        accum += buffer[i];\n        count++;\n      }\n\n      result[offsetResult] = Math.min(1, accum / count) * 0x7fff;\n      offsetResult++;\n      offsetBuffer = nextOffsetBuffer;\n    }\n    return result.buffer;\n  }\n\n  capitalize(s) {\n    if (s.length < 1) {\n      return s;\n    }\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  componentDidMount() {\n    // const { endpoint } = this.state;\n    // const socket = socketIOClient(endpoint);\n    // socket.on(\"FromAPI\", data => this.setState({ response: data }));\n\n    this.socket.on(\"connect\", function(data) {\n      // this.socket.emit('join', 'Server Connected to Client');\n      console.log(\"Server Connected to Client\", data);\n    });\n\n    this.socket.on(\"messages\", function(data) {\n      console.log(\"messages\", data);\n    });\n\n    this.socket.on(\"speechData\", this.fillForm);\n  }\n  fillForm(data) {\n    // console.log(data.results[0].alternatives[0])\n    //    console.log(data.results[0])\n    if (data.results[0].isFinal === false) {\n      //    console.log(data.results[0])\n      let alternatives = data.results[0].alternatives;\n      //    let words = alternatives.map(alternative => {\n      //        return alternative.words\n\n      //    })\n\n      let words = alternatives.map(alternative => {\n        return this.normalizeText(alternative.transcript).replace(\" \", \"\");\n      });\n      console.log(words);\n\n      words.forEach(word => {\n        if (word === \"C1\" || word === \"c1\" || word === \"ser um\") {\n          this.props.handleChangeVR(\"homogeneo\");\n        }\n\n        let normalizedKeys = Object.keys(this.props.prevState).map(key => {\n          return this.normalizeText(key);\n        });\n        let index = normalizedKeys.indexOf(this.normalizeText(word));\n        if (index !== -1) {\n          this.props.handleChangeVR(Object.keys(this.props.prevState)[index]);\n        }\n      });\n    }\n\n    //    for( let key in this.props.prevState){\n    //         if(!this.wordControl.includes(key)){\n    //             // console.log(transcripts, \"A\")\n    //             if(transcripts.includes(this.normalizeText(key))){\n    //                 this.props.handleChangeVR(key)\n    //                 this.wordControl.push(key)\n    //             }\n    //         }else{\n    //             // console.log(transcripts, \"B\")\n    //             let count = this.wordControl.filter(word => word === key).length\n    //             for(let i = 0; i < count; i++){\n    //                 let index = transcripts.indexOf(key)\n    //                 transcripts = transcripts.splice(index)\n    //             }\n    //             if(transcripts.includes(this.normalizeText(key))){\n    //                 this.props.handleChangeVR(key)\n    //                 this.wordControl.push(key)\n    //             }\n    //        }\n    //    }\n\n    //    }\n    // console.log(\"AAA\")\n  }\n\n  normalizeText(text) {\n    text = text.toLowerCase();\n    text = text.replace(new RegExp(\"[ÁÀÂÃ]\", \"gi\"), \"a\");\n    text = text.replace(new RegExp(\"[ÉÈÊ]\", \"gi\"), \"e\");\n    text = text.replace(new RegExp(\"[ÍÌÎ]\", \"gi\"), \"i\");\n    text = text.replace(new RegExp(\"[ÓÒÔÕ]\", \"gi\"), \"o\");\n    text = text.replace(new RegExp(\"[ÚÙÛ]\", \"gi\"), \"u\");\n    text = text.replace(new RegExp(\"[Ç]\", \"gi\"), \"c\");\n    return text;\n  }\n\n  componentWillUnmount() {\n    if (this.state.streamStreaming) {\n      this.socket.emit(\"endGoogleCloudStream\", \"\");\n    }\n  }\n\n  changeClass() {\n    this.setState({\n      classOn: !this.state.classOn\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <audio></audio>\n\n        {/* <div id=\"soundEffect\">\n          <span className=\"soundSpan\"></span>\n          <span className=\"soundSpan\"></span>\n          <span className=\"soundSpan\"></span>\n          <span className=\"soundSpan\"></span>\n          <span className=\"soundSpan\"></span>\n        </div> */}\n\n        <Button\n          variant=\"contained\"\n          type=\"submit\"\n          onClick={e => {\n            this.startRecording(e);\n            this.changeClass();\n          }}\n          id={this.state.classOn ? \"startRecButtonOn\" : \"startRecButton\"}\n        >\n          Gravar\n        </Button>\n\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          id=\"stopRecButton\"\n          onClick={e => {\n            this.stopRecording(e);\n            this.changeClass();\n          }}\n        >\n          Encerrar\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default VoiceRecognition;\n","import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    let service = axios.create({\n      baseURL: process.env.REACT_APP_API_URL,\n      //baseURL: 'http://localhost:5000/api',\n      withCredentials: true\n    });\n    this.service = service;\n  }\n  signup = (username, password,name) => {\n    return this.service.post('/signup', {username, password,name})\n    .then(response => response.data)\n  }\n  login = (username, password) => {\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n  }\n  loggedin = () => {\n    return this.service.get('/loggedin')\n    .then(response => response.data)\n  }\n  \n  logout = () => {\n    return this.service.post('/logout', {})\n    .then(response => response.data)\n  }\n\n}\n\nexport default AuthService;","import React, {Component} from 'react';\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AuthService from './auth-service';\n\n// import MainTable from './MainTable'\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: \"100vh\"\n  },\n  image: {\n    backgroundImage: \"url(/img/medical5.jpeg)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\"\n  },\n\n  logo: {\n    marginBottom  : '35px',\n    backgroundImage: 'url(/img/Logo.svg)',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    height: '11vh',\n    width: '43vh',\n    backgroundSize: '280px'\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nexport default function Login (props) {\n \n  const classes = useStyles();\n\n  const [state,setState]=React.useState({\n     username: '', password: ''\n\n  })\n const service = new AuthService()\n\n  const handleFormSubmit = (event) => {\n    console.log(props, \"===>\")\n    event.preventDefault();\n    const username = state.username;\n    const password = state.password;\n    service.login(username, password)\n    .then( response => {\n        setState({ username: \"\", password: \"\" });\n        console.log(response)\n        props.getUser(response)\n        props.history.push(\"/laudos\")\n        \n    })\n    .catch( error => console.log(error) )\n  }\n  const handleChange = (event) => {  \n    const {name, value} = event.target;\n    setState({ ...state , [name]: value});\n  }\n  \n  \n  \n    return (\n      <Grid container component=\"main\" className={classes.root}>\n      {/* <CssBaseline /> */}\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n        <Link href=\"/\" className={classes.logo}></Link>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form onSubmit={handleFormSubmit} className={classes.form} noValidate>\n            <TextField\n              required\n              id=\"username\"\n              label=\"Username\"\n              className={classes.textField}\n              fullWidth\n              type=\"text\"\n              name=\"username\"\n              autoComplete=\"username\"\n              margin=\"normal\"\n              value={state.username} \n              onChange={ e => handleChange(e)}\n              input=\"submit\"\n              // variant=\"filled\"\n            />\n            <TextField\n              required\n              id=\"password\"\n              label=\"Password\"\n              className={classes.textField}\n              fullWidth\n              type=\"password\"\n              name=\"password\"\n              autoComplete=\"password\"\n              margin=\"normal\"\n              value={state.password} \n              onChange={ e => handleChange(e)}\n              // variant=\"filled\"\n            />\n            \n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item>\n                <Link href=\"/signup\" variant=\"body2\">\n                  {\"Não possui uma conta? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n    )\n  \n}\n\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AuthService from './auth-service';\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: \"100vh\"\n  },\n  image: {\n    backgroundImage: \"url(/img/medical5.jpeg)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\"\n  },\n\n  logo: {\n    marginBottom: \"35px\",\n    backgroundImage: \"url(/img/Logo.svg)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"center\",\n    height: \"15vh\",\n    width: \"70vh\",\n    backgroundSize: \"350px\"\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nexport default function SignUp(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useState({\n    username: \"\",\n    password: \"\",\n    name: \"\"\n  });\n  const service = new AuthService();\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    const { username, password, name } = state;\n    service\n      .signup(username, password, name)\n      .then(response => {\n        setState({ username: \"\", password: \"\", name: \"\" });\n\n        props.history.push(\"/login\");\n      })\n      .catch(error => console.log(error, \"ERRO\"));\n  };\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setState({ ...state, [name]: value });\n  };\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n        <Link href=\"/\" className={classes.logo}></Link>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign Up\n          </Typography>\n        <form onSubmit={handleFormSubmit} className={classes.form} noValidate>\n            <TextField\n              id=\"Nome\"\n              label=\"Nome\"\n              className={classes.textField}\n              required\n              fullWidth\n              type=\"text\"\n              name=\"name\"\n              autoComplete=\"nome\"\n              margin=\"normal\"\n              value={state.name} \n              onChange={ e => handleChange(e)}\n              // variant=\"filled\"\n            />\n            <TextField\n              id=\"username\"\n              label=\"username\"\n              className={classes.textField}\n              required\n              fullWidth\n              type=\"username\"\n              name=\"username\"\n              autoComplete=\"username\"\n              margin=\"normal\"\n              value={state.username} \n              onChange={ e => handleChange(e)}\n              // variant=\"filled\"\n            />\n            <TextField\n              id=\"password\"\n              label=\"Password\"\n              className={classes.textField}\n              required\n              fullWidth\n              type=\"password\"\n              name=\"password\"\n              autoComplete=\"password\"\n              margin=\"normal\"\n              value={state.password} \n              onChange={ e => handleChange(e)}\n              // variant=\"filled\"\n            />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item xs>\n              <Link href=\"/\" variant=\"body2\">\n                Já possui uma conta? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      </Grid>\n    </Grid>\n  );\n}","import axios from 'axios';\n\nclass ApiService {\n  constructor() {\n    let service = axios.create({\n       baseURL: process.env.REACT_APP_API_URL,\n     // baseURL: 'http://localhost:5000/api',\n      withCredentials: true\n    });\n    this.service = service;\n  }\n  getAllExams = () => {\n    return this.service.get('/allexams')\n    .then(response => response.data)\n    .catch(err => console.log(\"Ocorreu um erro ao consultar todos os exames\", err))\n  }\n\n  getOneLiver = (id) =>{\n    return this.service.get(`/getoneliver/${id}`)\n    .then(response => response.data)\n    .catch(err => console.log(\"Ocorreu um erro ao consultar todos os exames\", err))\n  }\n    newLiver = (clinica,medico,medicoSolicitante,data,pacient) => {\n    \n    return this.service.post('/newliver', {clinica,medico,medicoSolicitante,data,pacient})\n    .then(response => response.data)\n    .catch(err => console.log(\"Ocorreu um erro ao consultar todos os exames\", err))\n  }\n  newProstate = (clinica,medico,medicoSolicitante,data,pacient) => {\n   \n    return this.service.post('/newprostate', {clinica,medico,medicoSolicitante,data,pacient})\n    .then(response =>\n      \n      response.data)\n    .catch(err => console.log(\"Ocorreu um erro ao consultar todos os exames\", err))\n  }\n\n\n  newPacient = (nome,idade,telefone,email,convenio) => {\n    \n    return this.service.post('/newpacient',{nome,idade,telefone,email,convenio})\n    .then(response => response.data)\n    .catch(err => console.log(\"Ocorreu um erro ao consultar todos os exames\", err))\n  }\n  updateLiver = (dimensao,homogeneo,esteatotico,hepatopiaCronica,ciscoSimples,cistoSimplesMM,ciscoSimplesSit,variosCiscos,variosCiscosMM,variosCiscosSit,noduloSolido,noduloSolidoTipo,noduloSolidoContorno,noduloSolidoHMM,noduloSolidoVMM,noduloSolidoSi,calcificacaoGrosseira,calcificacaoGrosseiraMM,calcificacaoGrosseiraSit,id)=>{\n    return this.service.put(`/newfigadoview/${id}`,{dimensao,homogeneo,esteatotico,hepatopiaCronica,ciscoSimples,cistoSimplesMM,ciscoSimplesSit,variosCiscos,variosCiscosMM,variosCiscosSit,noduloSolido,noduloSolidoTipo,noduloSolidoContorno,noduloSolidoHMM,noduloSolidoVMM,noduloSolidoSi,calcificacaoGrosseira,calcificacaoGrosseiraMM,calcificacaoGrosseiraSit} )\n    .then(response => response.data)\n    .catch(err => console.log(\"Ocorreu um erro ao consultar todos os exames\", err))\n  }\n  updateProstate = (homogenio,size1,size2,size3,contornos,residuo,residuoML,exameViaTransretal,noduloPeriferica,noduloPerifericaTipo,noduloSize1,noduloSize2,noduloSize3,noduloLocal,biopsia,fragmentos,id)=>{\n    return this.service.put(`/newprostataview/${id}`,{homogenio,size1,size2,size3,contornos,residuo,residuoML,exameViaTransretal,noduloPeriferica,noduloPerifericaTipo,noduloSize1,noduloSize2,noduloSize3,noduloLocal,biopsia,fragmentos} )\n    .then(response => response.data)\n    .catch(err => console.log(\"Ocorreu um erro ao consultar todos os exames\", err))\n  }\n \n  deleteExam = id => {\n    return this.service.delete(`/exam/${id}`)\n    .then(response => response.data)\n    .catch(err => console.log(err))\n  }\n  getPhrases = examType => {\n    return this.service.post(`/getphrases/${examType}`)\n    .then(response => response.data)\n    .catch(err => console.log(err))\n  }\n\n}\n\nexport default ApiService;","import React, {\n  Component\n} from 'react';\nimport FileViewer from 'react-file-viewer';\n\n\n\nclass Preview extends Component {\n  constructor(props) {\n    super(props)\n  }\n  render() {\n    return (\n        <FileViewer\n          fileType=\"docx\"\n          filePath=\"http://localhost:5000/reports/teste.docx\"\n          \n          onError={this.onError}/>\n      \n    );\n  }\n\n  onError(e) {\n    console.log(e)\n  }\n}\n\nexport default Preview","import React, { Component } from \"react\";\n// import Input from \"@material-ui/core/Input\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Button from \"@material-ui/core/Button\";\nimport VoiceRecognition from \"./Components/VoiceRecognition\";\nimport Preview from \"./Components/Preview\";\nimport NewWindow from \"react-new-window\";\nimport ApiService from './Services/ApiService'\n\n\nclass FigadoForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dimensao: \"\",\n      homogeneo: false,\n      esteatotico: false,\n      hepatopiaCronica: false,\n      ciscoSimples: false,\n      cistoSimplesMM: 0,\n      ciscoSimplesSit: \"\",\n      variosCiscos: false,\n      variosCiscosMM: 0,\n      variosCiscosSit: \"\",\n      noduloSolido: false,\n      noduloSolidoTipo: \"\",\n      noduloSolidoContorno: \"\",\n      noduloSolidoHMM: 0,\n      noduloSolidoVMM: 0,\n      noduloSolidoSit: \"\",\n      calcificacaoGrosseira: false,\n      calcificacaoGrosseiraMM: 0,\n      calcificacaoGrosseiraSit: \"\",\n      age: \"\"\n    };\n    this.typeControl = {\n      checkBox: [\n        \"homogeneo\",\n        \"esteatotico\",\n        \"hepatopiaCronica\",\n        \"ciscoSimples\",\n        \"variosCiscos\",\n        \"noduloSolido\",\n        \"calcificacaoGrosseira\"\n      ],\n      text: [\n        \"dimensao\",\n        \"ciscoSimplesSit\",\n        \"variosCiscosSit\",\n        \"noduloSolidoContorno\",\n        \"noduloSolidoTipo\",\n        \"noduloSolidoSit\",\n        \"calcificacaoGrosseiraSit\",\n        \"age\"\n      ],\n      select: []\n    };\n    \n    \n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeSelect = this.handleChangeSelect.bind(this);\n    this.handleChangeBySpeech = this.handleChangeBySpeech.bind(this);\n  }\n\n  handleChange = name => event => {\n   \n    if (event.target.type === \"checkbox\") {\n      this.setState({ ...this.state, [name]: event.target.checked });\n    } else {\n      this.setState({ ...this.state, [name]: event.target.value });\n    }\n  };\n\n  handleChangeBySpeech = name => {\n    console.log(name);\n    let checkBoxes = this.typeControl.checkBox;\n    let texts = this.typeControl.text;\n    let selects = this.typeControl.selects;\n    if (checkBoxes.includes(name)) {\n      this.setState({ ...this.state, [name]: !this.state.name });\n    }\n  };\n\n\n  handleChangeSelect = name => event => {\n    console.log(event.target);\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n    console.log(this.state);\n  };\n\n     updateUser = async (onclick) =>  {\n      try{\n      const apiHandler = new ApiService()\n      const id = this.props.rest.match.params.id;\n       const {dimensao,homogeneo,esteatotico,hepatopiaCronica,ciscoSimples,cistoSimplesMM,ciscoSimplesSit,variosCiscos,variosCiscosMM,variosCiscosSit,noduloSolido,noduloSolidoTipo,noduloSolidoContorno,noduloSolidoHMM,noduloSolidoVMM,noduloSolidoSi,calcificacaoGrosseira,calcificacaoGrosseiraMM,calcificacaoGrosseiraSit} = this.state;\n     const response = await apiHandler.updateLiver(dimensao,homogeneo,esteatotico,hepatopiaCronica,ciscoSimples,cistoSimplesMM,ciscoSimplesSit,variosCiscos,variosCiscosMM,variosCiscosSit,noduloSolido,noduloSolidoTipo,noduloSolidoContorno,noduloSolidoHMM,noduloSolidoVMM,noduloSolidoSi,calcificacaoGrosseira,calcificacaoGrosseiraMM,calcificacaoGrosseiraSit,id)\n     console.log(response)\n     this.props.rest.history.push(`/finalLiver/${response.response._id}`)\n    }catch(err){\n      console.log(err)\n    }\n  }\n\n  handleSubmit(event) {\n    \n    console.log(this.state);\n    event.preventDefault();\n    this.setState({\n      dimensao: \"\",\n      homogeneo: false,\n\n      esteatotico: false,\n      hepatopiaCronica: false,\n\n      ciscoSimples: false,\n      cistoSimplesMM: 0,\n      ciscoSimplesSit: \"\",\n\n      variosCiscos: false,\n      variosCiscosMM: 0,\n      variosCiscosSit: \"\",\n\n      noduloSolido: false,\n      noduloSolidoTipo: \"\",\n      noduloSolidoContorno: \"\",\n      noduloSolidoHMM: 0,\n      noduloSolidoVMM: 0,\n      noduloSolidoSit: \"\",\n\n      calcificacaoGrosseira: false,\n      calcificacaoGrosseiraMM: 0,\n      calcificacaoGrosseiraSit: \"\",\n\n      \n    });\n  }\n\n  render() {\n\n  \n    return (\n      <div className=\"mainDivGF p-5 mt-5\">\n        <form onSubmit={this.handleSubmit}>\n          <table className=\"marginBottom\">\n            <thead>\n              <tr>\n                <td>\n                  <h2>Laudo de Figado</h2>\n                </td>\n              </tr>\n            </thead>\n            <br />\n            <tbody>\n              {/* ---------------------------------------- */}\n              <tr>\n                <td>\n                  <VoiceRecognition\n                    prevState={this.state}\n                    handleChangeVR={this.handleChangeBySpeech}\n                  />\n                </td>\n              </tr>\n              <br />\n              <tr>\n                <td>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={this.state.esteatotico}\n                        onChange={this.handleChange(\"esteatotico\")}\n                        value={this.state.esteatotico}\n                      />\n                    }\n                    label=\"Esteatótico\"\n                  />\n                </td>\n                <td>Quais são as dimensões apresentadas ?</td>\n                <td>\n                  <FormControl variant=\"\">\n                    <InputLabel htmlFor=\"outlined-age-simple\"></InputLabel>\n                    <Select\n                      required  \n                      value={this.state.dimensao}\n                      onChange={this.handleChangeSelect(\"dimensao\")}\n                      // labelWidth={this.labelWidth}\n                      name=\"dimensao\"\n                      inputProps={{\n                        name: \"dimensao\",\n                        id: \"outlined-age-simple\"\n                      }}\n                      margin=\"dense\"\n                    >\n                      <MenuItem value=\"\">\n                        <em>None</em>\n                      </MenuItem>\n                      <MenuItem value={\"Normais\"}>Normais </MenuItem>\n                      <MenuItem value={\"Reduzidas\"}>Reduzidas </MenuItem>\n                      <MenuItem value={\"Aumentadas\"}>Aumentadas </MenuItem>\n                    </Select>\n                  </FormControl>\n                </td>\n                {/* <td>\n                  <VoiceRecognition\n                    prevState={this.state}\n                    handleChangeVR={this.handleChangeBySpeech}\n                  />\n                </td> */}\n              </tr>\n              {/* -------------------------------------- */}\n              <tr>\n                <td>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={this.state.homogeneo}\n                        onChange={this.handleChange(\"homogeneo\")}\n                        value={this.state.homogeneo}\n                      />\n                    }\n                    label=\"Homogêneo\"\n                  />\n                </td>\n                <td>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={this.state.hepatopiaCronica}\n                        onChange={this.handleChange(\"hepatopiaCronica\")}\n                        value={this.state.hepatopiaCronica}\n                      />\n                    }\n                    label=\"Hepatopatia Crônica\"\n                  />\n                </td>\n              </tr>\n              {/* --------------------------------------- */}\n              <tr>\n                <td>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={this.state.ciscoSimples}\n                        onChange={this.handleChange(\"ciscoSimples\")}\n                        value={this.state.ciscoSimples}\n                      />\n                    }\n                    label=\"Cisco Simples\"\n                  />\n                </td>\n                <td>\n                  {\" \"}\n                  <TextField\n                    required\n                    id=\"outlined-number\"\n                    label=\"Tamanho(mm)\"\n                    value={this.state.cistoSimplesMM}\n                    onChange={this.handleChange(\"cistoSimplesMM\")}\n                    type=\"number\"\n                    InputLabelProps={{\n                      shrink: true\n                    }}\n                    margin=\"dense\"\n                    // variant=\"outlined\"\n                  />\n                </td>\n                <td>Qual o segmento hepático do cisto ?</td>\n                <td>\n                  <FormControl variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-age-simple\"></InputLabel>\n                    <Select\n                      value={this.state.ciscoSimplesSit}\n                      onChange={this.handleChangeSelect(\"ciscoSimplesSit\")}\n                      // labelWidth={this.labelWidth}\n                      name=\"ciscoSimplesSit\"\n                      inputProps={{\n                        name: \"ciscoSimplesSit\",\n                        id: \"outlined-age-simple\"\n                      }}\n                      margin=\"dense\"\n                    >\n                      <MenuItem value=\"\">\n                        <em>None</em>\n                      </MenuItem>\n                      <MenuItem value={\"Segmento hepático I\"}>I </MenuItem>\n                      <MenuItem value={\"Segmento hepático II\"}>II </MenuItem>\n                      <MenuItem value={\"Segmento hepático III\"}>III </MenuItem>\n                      <MenuItem value={\"Segmento hepático IV\"}>IV </MenuItem>\n                      <MenuItem value={\"Segmento hepático V\"}>V </MenuItem>\n                      <MenuItem value={\"Segmento hepático VI\"}>VI </MenuItem>\n                      <MenuItem value={\"Segmento hepático VII\"}>VII </MenuItem>\n                      <MenuItem value={\"Segmento hepático VIII\"}>\n                        VIII{\" \"}\n                      </MenuItem>\n                    </Select>\n                  </FormControl>\n                </td>\n              </tr>\n              {/* --------------------------------------- */}\n              <tr>\n                <td>\n                  {\" \"}\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={this.state.variosCiscos}\n                        onChange={this.handleChange(\"variosCiscos\")}\n                        value={this.state.variosCiscos}\n                      />\n                    }\n                    label=\"Varios Ciscos\"\n                  />\n                </td>\n                <td>\n                  <TextField\n                    required\n                    id=\"outlined-number\"\n                    label=\"Tamanho do maior(mm)\"\n                    value={this.state.variosCiscosMM}\n                    onChange={this.handleChange(\"variosCiscosMM\")}\n                    type=\"number\"\n                    InputLabelProps={{\n                      shrink: true\n                    }}\n                    margin=\"dense\"\n                    // variant=\"outlined\"\n                  />\n                </td>\n                <td>Qual o segmento hepático do cisto ?</td>\n                <td>\n                  <FormControl variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-age-simple\"></InputLabel>\n                    <Select\n                      value={this.state.variosCiscosSit}\n                      onChange={this.handleChangeSelect(\"variosCiscosSit\")}\n                      // labelWidth={this.labelWidth}\n                      name=\"variosCiscosSit\"\n                      inputProps={{\n                        name: \"variosCiscosSit\",\n                        id: \"outlined-age-simple\"\n                      }}\n                      margin=\"dense\"\n                    >\n                      <MenuItem value=\"\">\n                        <em>None</em>\n                      </MenuItem>\n                      <MenuItem value={\"Segmento hepático I\"}>I </MenuItem>\n                      <MenuItem value={\"Segmento hepático II\"}>II </MenuItem>\n                      <MenuItem value={\"Segmento hepático III\"}>III </MenuItem>\n                      <MenuItem value={\"Segmento hepático IV\"}>IV </MenuItem>\n                      <MenuItem value={\"Segmento hepático V\"}>V </MenuItem>\n                      <MenuItem value={\"Segmento hepático VI\"}>VI </MenuItem>\n                      <MenuItem value={\"Segmento hepático VII\"}>VII </MenuItem>\n                      <MenuItem value={\"Segmento hepático VIII\"}>\n                        VIII{\" \"}\n                      </MenuItem>\n                    </Select>\n                  </FormControl>\n                </td>\n              </tr>\n              {/* --------------------------------------- */}\n              <tr>\n                <td>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={this.state.noduloSolido}\n                        onChange={this.handleChange(\"noduloSolido\")}\n                        value={this.state.noduloSolido}\n                      />\n                    }\n                    label=\"Nódulo Sólido\"\n                  />\n                </td>\n                <td>\n                  <FormControl variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-age-simple\"></InputLabel>\n                    <Select\n                      value={this.state.noduloSolidoTipo}\n                      onChange={this.handleChangeSelect(\"noduloSolidoTipo\")}\n                      // labelWidth={this.labelWidth}\n                      name=\"noduloSolidoTipo\"\n                      inputProps={{\n                        name: \"noduloSolidoTipo\",\n                        id: \"outlined-age-simple\"\n                      }}\n                      margin=\"dense\"\n                    >\n                      <MenuItem value=\"\">\n                        <em>None</em>\n                      </MenuItem>\n                      <MenuItem value={\"Hiperecogênico \"}>\n                        Hiperecogênico{\" \"}\n                      </MenuItem>\n                      <MenuItem value={\"Hipoecogênico\"}>\n                        Hipoecogênico{\" \"}\n                      </MenuItem>\n                      <MenuItem value={\"Isoecogênico\"}>Isoecogênico </MenuItem>\n                    </Select>\n                  </FormControl>\n                </td>\n                <td>\n                  {\" \"}\n                  <TextField\n                    required\n                    // id=\"outlined-with-placeholder\"\n                    label=\"Contorno\"\n                    margin=\"dense\"\n                    // variant=\"outlined\"\n                    onChange={this.handleChange(\"noduloSolidoContorno\")}\n                    value={this.state.noduloSolidoContorno}\n                  />\n                </td>\n                <td>\n                  <TextField\n                    required\n                    id=\"outlined-number\"\n                    label=\"Tamanho Horizontal(mm)\"\n                    value={this.state.noduloSolidoHMM}\n                    onChange={this.handleChange(\"noduloSolidoHMM\")}\n                    type=\"number\"\n                    InputLabelProps={{\n                      shrink: true\n                    }}\n                    margin=\"dense\"\n                    // variant=\"outlined\"\n                  />\n                </td>\n                <td>X</td>\n                <td>\n                  {\" \"}\n                  <TextField\n                    required\n                    id=\"outlined-number\"\n                    label=\"Tamanho Vertical(mm)\"\n                    value={this.state.noduloSolidoVMM}\n                    onChange={this.handleChange(\"noduloSolidoVMM\")}\n                    type=\"number\"\n                    InputLabelProps={{\n                      shrink: true\n                    }}\n                    margin=\"dense\"\n                    // variant=\"outlined\"\n                  />\n                </td>\n                <td>Qual o segmento hepático do Nódulo ?</td>\n                <td>\n                  <FormControl variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-age-simple\"></InputLabel>\n                    <Select\n                      value={this.state.noduloSolidoSit}\n                      onChange={this.handleChangeSelect(\"noduloSolidoSit\")}\n                      // labelWidth={this.labelWidth}\n                      name=\"noduloSolidoSit\"\n                      inputProps={{\n                        name: \"noduloSolidoSit\",\n                        id: \"outlined-age-simple\"\n                      }}\n                      margin=\"dense\"\n                    >\n                      <MenuItem value=\"\">\n                        <em>None</em>\n                      </MenuItem>\n                      <MenuItem value={\"Segmento hepático I\"}>I </MenuItem>\n                      <MenuItem value={\"Segmento hepático II\"}>II </MenuItem>\n                      <MenuItem value={\"Segmento hepático III\"}>III </MenuItem>\n                      <MenuItem value={\"Segmento hepático IV\"}>IV </MenuItem>\n                      <MenuItem value={\"Segmento hepático V\"}>V </MenuItem>\n                      <MenuItem value={\"Segmento hepático VI\"}>VI </MenuItem>\n                      <MenuItem value={\"Segmento hepático VII\"}>VII </MenuItem>\n                      <MenuItem value={\"Segmento hepático VIII\"}>\n                        VIII{\" \"}\n                      </MenuItem>\n                    </Select>\n                  </FormControl>\n                </td>\n              </tr>\n              {/* ---------------------------------------- */}\n              <tr>\n                <td>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={this.state.calcificacaoGrosseira}\n                        onChange={this.handleChange(\"calcificacaoGrosseira\")}\n                        value=\"calcificacaoGrosseira\"\n                      />\n                    }\n                    label=\"Calcificação Grosseira\"\n                  />\n                </td>\n                <td>\n                  <TextField\n                    required\n                    id=\"outlined-number\"\n                    label=\"Tamanho(mm)\"\n                    value={this.state.calcificacaoGrosseiraMM}\n                    onChange={this.handleChange(\"calcificacaoGrosseiraMM\")}\n                    type=\"number\"\n                    InputLabelProps={{\n                      shrink: true\n                    }}\n                    margin=\"dense\"\n                    // variant=\"outlined\"\n                  />\n                </td>\n                <td>Qual o segmento hepático da Calcificação ?</td>\n                <td>\n                  <FormControl variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-age-simple\"></InputLabel>\n                    <Select\n                      value={this.state.calcificacaoGrosseiraSit}\n                      onChange={this.handleChangeSelect(\n                        \"calcificacaoGrosseiraSit\"\n                      )}\n                      // labelWidth={this.labelWidth}\n                      name=\"calcificacaoGrosseiraSit\"\n                      inputProps={{\n                        name: \"calcificacaoGrosseiraSit\",\n                        id: \"outlined-age-simple\"\n                      }}\n                      margin=\"dense\"\n                    >\n                      <MenuItem value=\"\">\n                        <em>None</em>\n                      </MenuItem>\n                      <MenuItem value={\"Segmento hepático I\"}>I </MenuItem>\n                      <MenuItem value={\"Segmento hepático II\"}>II </MenuItem>\n                      <MenuItem value={\"Segmento hepático III\"}>III </MenuItem>\n                      <MenuItem value={\"Segmento hepático IV\"}>IV </MenuItem>\n                      <MenuItem value={\"Segmento hepático V\"}>V </MenuItem>\n                      <MenuItem value={\"Segmento hepático VI\"}>VI </MenuItem>\n                      <MenuItem value={\"Segmento hepático VII\"}>VII </MenuItem>\n                      <MenuItem value={\"Segmento hepático VIII\"}>\n                        VIII{\" \"}\n                      </MenuItem>\n                    </Select>\n                  </FormControl>\n                </td>\n              </tr>\n              <br />\n              {/* ----------------------------------------- */}\n              <tr>\n                <td>\n                  <Button onClick={()=> this.updateUser()} variant=\"contained\" color=\"primary\" type=\"submit\">\n                    Enviar\n                  </Button>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  {/* <Button\n                    variant=\"contained\"\n                    href=\"/preview\"\n                    color=\"primary\"\n                    type=\"submit\"\n                  >\n                    Preview\n                  </Button> */}\n                </td>\n              </tr>\n              {/* ------------------------------------------ */}\n            </tbody>\n          </table>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default FigadoForm;\n","import React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\n// import MenuItem from \"@material-ui/core/MenuItem\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport \"./App.css\";\nimport ApiService from \"./Services/ApiService\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Link from \"@material-ui/core/Link\";\nimport { Redirect } from 'react-router-dom'\nimport Paper from \"@material-ui/core/Paper\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nexport default function GeneralForm(props) {\n  useEffect(() => function addUser(onclick) {});\n\n  useEffect(onClick => function handleSubmit(onClick) {});\n\n  \n  // const useStyles = makeStyles(theme => ({\n  //   root: {\n  //     height: \"100vh\"\n  //   },\n  //   image: {\n  //     backgroundImage: \"url(/img/medical5.jpeg)\",\n  //     backgroundRepeat: \"no-repeat\",\n  //     backgroundSize: \"cover\",\n  //     backgroundPosition: \"center\"\n  //   },\n  // }));\n\n  const classes = useStyles();\n\n  const [state, setState] = React.useState({\n    data: new Date(),\n    clinica: \"\",\n    medico: \"\",\n    convenio: \"\",\n    medicoSolicitante: \"\",\n\n    dataDeNasc: new Date(),\n    nome: \"\",\n    idade: \"\",\n    telefone: \"\",\n    email: \"\",\n    selecionarExame: \"\",\n    hrefExam: \"/abc\"\n  });\n\n  const inputLabel = React.useRef(null);\n  const [labelWidth, setLabelWidth] = React.useState(0);\n  React.useEffect(() => {\n    setLabelWidth(inputLabel.current.offsetWidth);\n  }, []);\n  const completePacient = objPacient => {\n    console.log(objPacient);\n  };\n  //   const [selectedDate, setSelectedDate] = React.useState(\n  //     new Date(\"2014-08-18T21:11:54\")\n  //   );\n\n  const handleDateChange = dateName => date => {\n    setState({\n      ...state,\n      [dateName]: date\n    });\n  };\n\n  const handleChange = name => event => {\n    console.log(props);\n    if (name === \"selecionarExame\") {\n      console.log(event.target);\n      setState({\n        ...state,\n        [name]: event.target.value\n      });\n    } else {\n      setState({\n        ...state,\n        [name]: event.target.value\n      });\n    }\n  };\n\n  const handleSubmit = event => {\n  \n    event.preventDefault();\n    //axios\n    setState({\n      data: undefined,\n      clinica: \"\",\n      medico: \"\",\n      convenio: \"\",\n      medicoSolicitante: \"\",\n\n      dataDeNasc: undefined,\n      nome: \"\",\n      idade: \"\",\n      telefone: \"\",\n      email: \"\"\n    });\n  };\n  const addUser = event => {\n    const apiHandler = new ApiService();\n\n    const {\n      nome,\n      idade,\n      telefone,\n      email,\n      convenio,\n      clinica,\n      medico,\n      medicoSolicitante,\n      data,\n      selecionarExame\n    } = state;\n\n    apiHandler\n      .newPacient(nome, idade, telefone, email, convenio)\n      .then(function(itemResponse) {\n        const pacient = itemResponse._id;\n        console.log(pacient);\n        if (selecionarExame === \"/newprostataview\") {\n          console.log(\"i\");\n          apiHandler\n            .newProstate(clinica, medico, medicoSolicitante, data, pacient)\n            .then(function(response) {\n              console.log(\"PROSTATA!!!!!!!!!!!!!\", props.rest);\n              props.rest.history.push(`${selecionarExame}/${response._id}`);\n              //return <Redirect to={`${selecionarExame}/${response._id}`}/>\n            });\n        }\n        if (selecionarExame === \"/newfigadoview\") {\n          console.log(pacient);\n          apiHandler\n            .newLiver(clinica, medico, medicoSolicitante, data, pacient)\n            .then(function(response) {\n              console.log(\"figado!!!!!!!!!!!!\", response, pacient);\n              props.rest.history.push(`${selecionarExame}/${response._id}`);\n            });\n        }\n      });\n  }\n\n  return (\n    // <Grid container component=\"main\" className={classes.root}>\n    //   <CssBaseline />\n      \n    //   <Grid item xs={false} sm={3} md={6} className={classes.image} />\n    //   <Grid item xs={12} sm={9} md={6} component={Paper} elevation={6} square>\n    //     <div className={classes.paper}></div>\n\n    <div className=\"mainDivGF\">\n      <form className=\"box-shadow rounded p-4 marginBottom mt-5 \"  onSubmit={handleSubmit}>\n        <h3>Novo Laudo</h3>\n        <table>\n          <thead>\n            <tr>\n              <td>\n                <h3>Exame</h3>\n              </td>\n              <td className=\"pacienteTd\">\n                <h3 className=\"mt=5\" >Paciente</h3>\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Data:</label>\n                  </td>\n                  <td>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                      <Grid container justify=\"space-around\">\n                        <KeyboardDatePicker\n                        required\n                          margin=\"normal\"\n                          id=\"date-picker-dialog\"\n                          format=\"dd/MM/yyyy\"\n                          value={state.data}\n                          onChange={handleDateChange(\"data\")}\n                          KeyboardButtonProps={{\n                            \"aria-label\": \"change date\"\n                          }}\n                        />\n                      </Grid>\n                    </MuiPickersUtilsProvider>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <label  htmlFor=\"\">Clinica:</label>\n                  </td>\n\n                  <td>\n                    <FormControl\n                      // variant=\"outlined\"\n                      className={classes.formControl}\n                    >\n                      <InputLabel\n                      \n                        ref={inputLabel}\n                        htmlFor=\"outlined-age-simple\"\n                      ></InputLabel>\n                      <Select\n                      required\n                        native\n                        margin=\"dense\"\n                        value={state.clinica}\n                        onChange={handleChange(\"clinica\")}\n                        labelWidth={labelWidth}\n                        inputProps={{\n                          name: \"clinica\",\n                          id: \"outlined-clinica\"\n                        }}\n                      >\n                        <option value=\"\" />\n                        <option value={\"Femme - Laboratório da Mulher\"}>\n                          Femme - Laboratório da Mulher\n                        </option>\n                        <option value={\"Clínica Popular Cuidar Mais\"}>\n                          Clínica Popular Cuidar Mais\n                        </option>\n                        <option value={\"Centro Diagnostico\"}>\n                          Centro Diagnóstico\n                        </option>\n                      </Select>\n                    </FormControl>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Médico:</label>\n                  </td>\n                  <td>\n                    <FormControl\n                      // variant=\"outlined\"\n                      className={classes.formControl}\n                    >\n                      {/* <InputLabel ref={inputLabel} htmlFor=\"outlined-age-simple\">\n                  Medico\n                </InputLabel> */}\n                      <Select\n                      required\n                        native\n                        value={state.medico}\n                        onChange={handleChange(\"medico\")}\n                        name=\"medico\"\n                        margin=\"dense\"\n                        labelWidth={labelWidth}\n                        inputProps={{\n                          name: \"medico\",\n                          id: \"outlined-medico\"\n                        }}\n                      >\n                        <option value=\"\" />\n                        <option value={\"Roberto Sangalo\"}>\n                          Roberto Sangalo\n                        </option>\n                        <option value={\"Pablo Vasconcellos\"}>\n                          Pablo Vasconcellos\n                        </option>\n                        <option value={\"Aretuza Grande\"}>Aretuza Grande</option>\n                        <option value={\"Katrina Swift\"}>Katrina Swift</option>\n                        <option value={\"Gloria Maria\"}>Gloria Maria</option>\n                        <option value={\"Vitor Carlos\"}>Vitor Carlos</option>\n                      </Select>\n                    </FormControl>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Convênio:</label>\n                  </td>\n                  <td>\n                    <FormControl\n                      // variant=\"outlined\"\n                      className={classes.formControl}\n                    >\n                      {/* <InputLabel ref={inputLabel} htmlFor=\"outlined-age-simple\">\n                  Convenio\n                </InputLabel> */}\n                      <Select\n                        required\n                        native\n                        value={state.convenio}\n                        onChange={handleChange(\"convenio\")}\n                        name=\"convenio\"\n                        margin=\"dense\"\n                        labelWidth={labelWidth}\n                        inputProps={{\n                          name: \"convenio\",\n                          id: \"outlined-convenio\"\n                        }}\n                      >\n                        <option value=\"\" />\n                        <option value={\"Unimed\"}>Unimed</option>\n                        <option value={\"Bradesco\"}>Bradesco</option>\n                        <option value={\"Sul Americano\"}>Sul Americano</option>\n                        <option value={\"Notre Dame\"}>Notre Dame</option>\n                        <option value={\"Amil\"}>Amil</option>\n                      </Select>\n                    </FormControl>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Médico Solicitante:</label>\n                  </td>\n                  <td>\n                    <FormControl\n                      // variant=\"outlined\"\n                      className={classes.formControl}\n                    >\n                      {/* <InputLabel ref={inputLabel} htmlFor=\"outlined-age-simple\">\n                  Convenio\n                </InputLabel> */}\n                      <Select\n                        required\n                        native\n                        name=\"medicoSolicitante\"\n                        value={state.medicoSolicitante}\n                        onChange={handleChange(\"medicoSolicitante\")}\n                        margin=\"dense\"\n                        labelWidth={labelWidth}\n                        inputProps={{\n                          name: \"medicoSolicitante\",\n                          id: \"outlined-medicoSolicitante\"\n                        }}\n                      >\n                        <option value=\"\" />\n                        <option value={\"Albert Scharle\"}>Albert Scharle</option>\n                        <option value={\"Stuart David\"}>Stuart David</option>\n                        <option value={\"Lucas Viena\"}>Lucas Viena</option>\n                        <option value={\"Maria Antonieta\"}>\n                          Maria Antonieta\n                        </option>\n                        <option value={\"David Junior\"}>David Junior</option>\n                      </Select>\n                    </FormControl>\n                  </td>\n                </tr>\n              </td>\n              {/* --------------------------------------------------------------------------------------------- */}\n              <td className=\"mainTd\">\n                <tr>\n                  <td>\n                    <label className=\"mt-4\" htmlFor=\"\">Data de Nasc: </label>\n                  </td>\n                  <td>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                      <Grid container justify=\"space-around\">\n                        <KeyboardDatePicker\n                          required\n                          margin=\"normal\"\n                          id=\"date-picker-dialog\"\n                          format=\"dd/MM/yyyy\"\n                          value={state.dataDeNasc}\n                          onChange={handleDateChange(\"dataDeNasc\")}\n                          KeyboardButtonProps={{\n                            \"aria-label\": \"change date\"\n                          }}\n                        />\n                      </Grid>\n                    </MuiPickersUtilsProvider>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <label className=\"mt-2\" htmlFor=\"\">Nome:</label>\n                  </td>\n                  <td>\n                    <TextField\n                      required\n                      id=\"outlined-dense\"\n                      margin=\"dense\"\n                      // variant=\"outlined\"\n                      name=\"nome\"\n                      type=\"text\"\n                      value={state.nome}\n                      onChange={handleChange(\"nome\")}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Idade:</label>\n                  </td>\n                  <td>\n                    <TextField\n                      required\n                      id=\"outlined-number\"\n                      name=\"idade\"\n                      margin=\"dense\"\n                      value={state.idade}\n                      onChange={handleChange(\"idade\")}\n                      type=\"number\"\n                      InputLabelProps={{\n                        shrink: true\n                      }}\n                      // variant=\"outlined\"\n                    />\n                  </td>\n                </tr>\n\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Telefone:</label>\n                  </td>\n                  <td>\n                    <TextField\n                      required\n                      id=\"outlined-tel\"\n                      margin=\"dense\"\n                      // label=\"Telefone\"\n                      // variant=\"outlined\"\n                      name=\"telefone\"\n                      type=\"tel\"\n                      value={state.telefone}\n                      onChange={handleChange(\"telefone\")}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">E-mail:</label>\n                  </td>\n                  <td>\n                    <TextField\n                      required\n                      id=\"outlined-email-input\"\n                      name=\"email\"\n                      autoComplete=\"email\"\n                      margin=\"dense\"\n                      // variant=\"outlin  ed\"\n                      onChange={handleChange(\"email\")}\n                      value={state.email}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Exame: </label>\n                  </td>\n                  <td>\n                    <FormControl\n                      // variant=\"outlined\"\n                      className={classes.formControl}\n                    >\n                      <Select\n                        required\n                        native\n                        value={state.selecionarExame}\n                        onChange={handleChange(\"selecionarExame\")}\n                        name=\"selecionarExame\"\n                        margin=\"dense\"\n                        labelWidth={labelWidth}\n                        inputProps={{\n                          name: \"convenio\",\n                          id: \"outlined-convenio\"\n                        }}\n                      >\n                        <option value=\"\" />\n                        <option value={\"/newfigadoview\"}>Figado</option>\n                        <option value={\"/newprostataview\"}>Prostata</option>\n                      </Select>\n                    </FormControl>\n                  </td>\n                </tr>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <br />\n\n        <br />\n        <Button\n          type=\"submit\"\n          onClick={() => addUser(onclick)}\n          // fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n        >\n          novo laudo\n        </Button>\n      </form>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\n// import Input from \"@material-ui/core/Input\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Button from \"@material-ui/core/Button\";\nimport VoiceRecognition from \"./Components/VoiceRecognition\";\nimport \"./App.css\";\nimport ApiService from './Services/ApiService'\n\nclass ProstataForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n      size1: 0,\n      size2: 0,\n      size3: 0,\n      contornos: \"\",\n      residuo: false,\n      residuoML: 0,\n      exameViaTransretal: false,\n      noduloPeriferica: false,\n      noduloPerifericaTipo: \"\",\n      noduloSize1: 0,\n      noduloSize2: 0,\n      noduloSize3: 0,\n      noduloLocal: \"\",\n      biopsia: false,\n      fragmentos: 0\n    };\n    this.typeControl = {\n      checkBox: [\"exameViaTransretal\"],\n      text: [\"size1\", \"size2\", \"size3\"],\n      select: [\"contornos\"]\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeSelect = this.handleChangeSelect.bind(this);\n    this.handleChangeBySpeech = this.handleChangeBySpeech.bind(this);\n  }\n\n  handleChange = name => event => {\n    console.log(event.target);\n    \n    if (event.target.type === \"checkbox\") {\n      this.setState({ ...this.state, [name]: event.target.checked });\n    } else {\n      this.setState({ ...this.state, [name]: event.target.value });\n    }\n  };\n\n  handleChangeBySpeech = name => {\n    let checkBoxes = this.typeControl.checkBox;\n    let texts = this.typeControl.text;\n    let selects = this.typeControl.selects;\n    if (checkBoxes.includes(name)) {\n      this.setState({ ...this.state, [name]: !this.state.name });\n    }\n  };\n\n  handleChangeSelect = name => event => {\n    console.log(event.target);\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n    console.log(this.state);\n  };\n\n  updateUser = async () =>  {\n    console.log(this.props)\n    try{\n      const apiHandler = new ApiService()\n      const id = this.props.rest.match.params.id;\n      const { homogenio,size1,size2,size3,contornos,residuo,residuoML,exameViaTransretal,noduloPeriferica,noduloPerifericaTipo,noduloSize1,noduloSize2,noduloSize3,noduloLocal,biopsia,fragmentos} = this.state;\n      const response = await apiHandler.updateProstate(homogenio,size1,size2,size3,contornos,residuo,residuoML,exameViaTransretal,noduloPeriferica,noduloPerifericaTipo,noduloSize1,noduloSize2,noduloSize3,noduloLocal,biopsia,fragmentos,id)\n      console.log(\"worked\")\n      this.props.rest.history.push(`/laudofinal/${response.response._id}`)\n      console.log(response)\n    }catch(err){\n      console.log(err,\"=>\")\n    }\n    //.then(function(itemResponse) {\n    //  console.log(this.props)\n      //this.props.history.push(`newprostataview/${itemResponse._id}`)\n   \n    //})\n  }\n\n  handleSubmit(event) {\n    console.log(this.state);\n    event.preventDefault();\n    \n  }\n\n  //   showExameTransversal() {\n  //     const { show } = this.state;\n  //     this.setState({\n  //       show: !show\n  //     });\n  //   }\n\n  render() {\n \n    console.log('PROPS!!!!!',this.props.rest.match.params)\n    return (\n      <div className=\"mainDivGF\">\n        <form className=\"box-shadow p-4 mt-5  marginBottom\"   onSubmit={this.handleSubmit}>\n          <table className=\"\">\n            <thead>\n              <tr>\n                <td colspan=\"2\">\n                  <h2>Laudo da Prostata</h2>\n                </td>\n              </tr>\n            </thead>\n            <br />\n            <tbody>\n              <tr>\n                <td>\n                  <VoiceRecognition\n                    prevState={this.state}\n                    handleChangeVR={this.handleChangeBySpeech}\n                  />\n                </td>\n              </tr>\n              <br />\n              {/* ---------------------------------------- */}\n              <tr>\n                <td>Quais suas dimensões ?</td>\n                <td>\n                  <TextField\n                    required\n                    id=\"outlined-number\"\n                    label=\"Largura prostata\"\n                    value={this.state.size1}\n                    onChange={this.handleChange(\"size1\")}\n                    type=\"number\"\n                    InputLabelProps={{\n                      shrink: true\n                    }}\n                    margin=\"dense\"\n                    // variant=\"outlined\"\n                  />\n                </td>\n                <td>\n                  <TextField\n                    required\n                    id=\"outlined-number\"\n                    label=\"Altura prostata\"\n                    value={this.state.size2}\n                    onChange={this.handleChange(\"size2\")}\n                    type=\"number\"\n                    InputLabelProps={{\n                      shrink: true\n                    }}\n                    margin=\"dense\"\n                    // variant=\"outlined\"\n                  />\n                </td>\n                <td>\n                  <TextField\n                    required  \n                    id=\"outlined-number\"\n                    label=\"Espessura prostata\"\n                    value={this.state.size3}\n                    onChange={this.handleChange(\"size3\")}\n                    type=\"number\"\n                    InputLabelProps={{\n                      shrink: true\n                    }}\n                    margin=\"dense\"\n                    // variant=\"outlined\"\n                  />\n                </td>\n              </tr>\n              {/* -------------------------------------- */}\n              <tr>\n                <td>Qual o tipo do contorno ?</td>\n                <td>\n                  <FormControl variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-age-simple\"></InputLabel>\n                    <Select\n                      value={this.state.contornos}\n                      onChange={this.handleChangeSelect(\"contornos\")}\n                      // labelWidth={this.labelWidth}\n                      name=\"contornos\"\n                      inputProps={{\n                        name: \"contornos\",\n                        id: \"outlined-age-simple\"\n                      }}\n                      margin=\"dense\"\n                    >\n                      <MenuItem value=\"\">\n                        <em>None</em>\n                      </MenuItem>\n                      <MenuItem value={\"Normais\"}>Normais</MenuItem>\n                      <MenuItem value={\"Regulares\"}>Regulares</MenuItem>\n                      <MenuItem value={\"Irregulares\"}>Irregulares</MenuItem>\n                      <MenuItem value={\"Lobulados\"}>Lobulados</MenuItem>\n                    </Select>\n                  </FormControl>\n                </td>\n              </tr>\n              {/* --------------------------------------- */}\n              <tr>\n                <td>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={this.state.residuo}\n                        onChange={this.handleChange(\"residuo\")}\n                        value={this.state.residuo}\n                      />\n                    }\n                    label=\"Possui resíduo ?\"\n                  />\n                </td>\n                <td>\n                  {\" \"}\n                  <TextField\n                    required\n                    id=\"outlined-number\"\n                    label=\"Quantidade(ml)\"\n                    value={this.state.residuoML}\n                    onChange={this.handleChange(\"residuoML\")}\n                    type=\"number\"\n                    InputLabelProps={{\n                      shrink: true\n                    }}\n                    margin=\"dense\"\n                    // variant=\"outlined\"\n                  />\n                </td>\n              </tr>\n              {/* --------------------------------------- */}\n              <tr>\n                <td>\n                  {\" \"}\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={this.state.exameViaTransretal}\n                        onChange={this.handleChange(\"exameViaTransretal\")}\n                        value={this.state.exameViaTransretal}\n                      />\n                    }\n                    label=\"Exame via transretal ?\"\n                  />\n                </td>\n              </tr>\n              {/* ------------------------------------------ */}\n            </tbody>\n          </table>\n          {this.state.exameViaTransretal && (\n            <ExameTransversal\n              {...this.state}\n              handleChangeByToggle={this.handleChange}\n              handleChangeSelectByToggle={this.handleChangeSelect}\n            />\n          )}\n          <br />\n          <Button onClick={() => this.updateUser()} variant=\"contained\" color=\"primary\" >\n            Enviar\n          </Button>\n        </form>\n      </div>\n    );\n  }\n}\n\nclass ExameTransversal extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <form className=\"exameTransDiv\">\n        <table>\n          <thead></thead>\n          <tbody>\n            <tr>\n              <td colSpan=\"3\">\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={this.props.noduloPeriferica}\n                      onChange={this.props.handleChangeByToggle(\n                        \"noduloPeriferica\"\n                      )}\n                      value={this.props.noduloPeriferica}\n                    />\n                  }\n                  label=\"Possui nódulo na zona periférica?                 Qual o seu tipo ?\"\n                />\n\n                <FormControl variant=\"outlined\">\n                  <InputLabel htmlFor=\"outlined-age-simple\"></InputLabel>\n                  <Select\n                    value={this.props.noduloPerifericaTipo}\n                    onChange={this.props.handleChangeSelectByToggle(\n                      \"noduloPerifericaTipo\"\n                    )}\n                    // labelWidth={this.labelWidth}\n                    name=\"noduloPerifericaTipo\"\n                    inputProps={{\n                      name: \"noduloPerifericaTipo\",\n                      id: \"outlined-age-simple\"\n                    }}\n                    margin=\"dense\"\n                  >\n                    <MenuItem value=\"\">\n                      <em>None</em>\n                    </MenuItem>\n                    Hiperecogenico , Isoecogenico ou Hipoecogenico\n                    <MenuItem value={\"Hiperecogenico\"}>Hiperecogenico</MenuItem>\n                    <MenuItem value={\"Hipoecogenico\"}>Hipoecogenico</MenuItem>\n                    <MenuItem value={\"Isoecogenico\"}>Isoecogenico</MenuItem>\n                  </Select>\n                </FormControl>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <TextField \n                  required\n                  id=\"outlined-number\"\n                  label=\"Largura nódulo\"\n                  value={this.props.noduloSize1}\n                  onChange={this.props.handleChangeByToggle(\"noduloSize1\")}\n                  type=\"number\"\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                />\n              </td>\n              <td>\n                <TextField\n                  required\n                  id=\"outlined-number\"\n                  label=\"Altura nódulo\"\n                  value={this.props.noduloSize2}\n                  onChange={this.props.handleChangeByToggle(\"noduloSize2\")}\n                  type=\"number\"\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                />\n              </td>\n              <td>\n                <TextField\n                  required\n                  id=\"outlined-number\"\n                  label=\"Espessura nódulo(mm)\"\n                  value={this.props.noduloSize3}\n                  onChange={this.props.handleChangeByToggle(\"noduloSize3\")}\n                  type=\"number\"\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>Aonde está situado o nódulo?</td>\n              <td>\n                <FormControl variant=\"outlined\">\n                  <InputLabel htmlFor=\"outlined-age-simple\"></InputLabel>\n                  <Select\n                    value={this.props.noduloLocal}\n                    onChange={this.props.handleChangeSelectByToggle(\n                      \"noduloLocal\"\n                    )}\n                    // labelWidth={this.labelWidth}\n                    name=\"noduloLocal\"\n                    inputProps={{\n                      name: \"noduloLocal\",\n                      id: \"outlined-age-simple\"\n                    }}\n                    margin=\"dense\"\n                  >\n                    <MenuItem value=\"\">\n                      <em>None</em>\n                    </MenuItem>\n                    <MenuItem value={\"Zona Periférica\"}>\n                      Zona Periférica\n                    </MenuItem>\n                    <MenuItem value={\"Zona Central\"}>Zona Central</MenuItem>\n                    <MenuItem value={\"Zona de Transição\"}>\n                      Zona de Transição\n                    </MenuItem>\n                  </Select>\n                </FormControl>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={this.props.biopsia}\n                      onChange={this.props.handleChangeByToggle(\"biopsia\")}\n                      value={this.props.biopsia}\n                    />\n                  }\n                  label=\"Realizada a Biopsia?\"\n                />\n              </td>\n              <td>\n                <TextField\n                  required\n                  id=\"outlined-number\"\n                  label=\"Fragmentos\"\n                  value={this.props.fragmentos}\n                  onChange={this.props.handleChangeByToggle(\"fragmentos\")}\n                  type=\"number\"\n                  InputLabelProps={{\n                    shrink: true\n                  }}\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </form>\n    );\n  }\n}\n\nexport default ProstataForm;\n","import React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport \"./FinalForm.css\";\nimport Button from \"@material-ui/core/Button\";\nimport ApiService from './Services/ApiService';\n\nclass FinalForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      observacoes: \"\",\n      conclusoes: \"\",\n      phrases: {}\n    };\n    this.typeControl = {\n      text: [\"observacoes\", \"conclusoes\"]\n    };\n    this.apiHandler = new ApiService();\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeBySpeech = this.handleChangeBySpeech.bind(this);\n  }\n\n  handleChange = name => event => {\n    console.log(event.target);\n    if (event.target.type === \"checkbox\") {\n      this.setState({ ...this.state, [name]: event.target.checked });\n    } else {\n      this.setState({ ...this.state, [name]: event.target.value });\n    }\n  };\n\n  handleChangeBySpeech = name => {\n    let checkBoxes = this.typeControl.checkBox;\n    let texts = this.typeControl.text;\n    let selects = this.typeControl.selects;\n    if (checkBoxes.includes(name)) {\n      this.setState({ ...this.state, [name]: !this.state.name });\n    }\n  };\n\n  handleChangeSelect = name => event => {\n    console.log(event.target);\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n    console.log(this.state);\n  };\n\n  handleSubmit(event) {\n    console.log(this.state);\n    event.preventDefault();\n    this.setState({\n      observacoes: \"\",\n      conclusoes: \"\"\n    });\n  }\n\n  populateFields(data,phrases) {\n    const { homogeneo, esteatotico, \n      dimensao, hepatopiaCronica, \n      ciscoSimples, cistoSimplesMM, \n      ciscoSimplesSit, variosCiscos, \n      variosCiscosMM, variosCiscosSit, \n      noduloSolido, noduloSolidoContorno, \n      noduloSolidoHMM, noduloSolidoVMM,\n      noduloSolidoTipo, calcificacaoGrosseira, \n      calcificacaoGrosseiraMM, calcificacaoGrosseiraSit} = data\n    console.log(data,\"data\")\n    console.log(phrases,\"phrases\")\n    let campoObservasoes = \"\"\n    let campoConclusoes = \"\"\n    let { observations, conclusions } = phrases\n    let auxString = \"\"\n    if(homogeneo){\n      if(dimensao != null && dimensao != \"\"){\n        campoObservasoes += observations[0].homogeneo.text.replace(/especificad@/g, dimensao.toLowerCase())\n      }\n      campoConclusoes += conclusions[0].homogeneo.text\n    }\n    if(esteatotico){\n      if(dimensao != null && dimensao != \"\"){\n        campoObservasoes += observations[0].esteatotico.text.replace(/especificad@/g, dimensao.toLowerCase())\n        campoConclusoes += conclusions[0].esteatotico.text.replace(/especificad@/g, dimensao.toLowerCase())\n      }\n    }\n    if(hepatopiaCronica){\n      campoObservasoes += observations[0].hepatopatiaCronica.text\n      campoConclusoes += conclusions[0].hepatopariaCronica.text\n    }\n    if(ciscoSimples){\n      auxString = observations[0].cistoSimples.text.replace(/especificad@/, cistoSimplesMM)\n      campoObservasoes += auxString.replace(/especificad@/, ciscoSimplesSit.toLowerCase())\n      campoConclusoes += conclusions[0].cistoSimples.text.replace(/especificad@/, ciscoSimplesSit.toLowerCase())\n    }\n    if(noduloSolido){\n      auxString  = observations[0].noduloSolido.text.replace(/especificad@/, `${noduloSolidoHMM} x ${noduloSolidoVMM}`)\n      campoObservasoes += auxString.replace(/especificad@/, noduloSolidoTipo)\n      campoConclusoes += conclusions[0].noduloSolido.text\n    } \n    if(calcificacaoGrosseira){                                                \n      auxString = observations[0].calcificacaoGrosseira.text.replace(/especificad@/, calcificacaoGrosseiraMM)\n      campoObservasoes += auxString.replace(/especificad@/, calcificacaoGrosseiraSit.toLowerCase())\n      campoConclusoes += conclusions[0].calcificacaoGrosseira.text.replace(/especificad@/, calcificacaoGrosseiraSit.toLowerCase())\n    }\n    this.setState({\n      observacoes: campoObservasoes,\n      conclusoes: campoConclusoes\n    })\n  } \n\n  componentDidMount() {\n    const apiHandler = new ApiService()\n    const id = this.props.match.params.id\n    apiHandler.getOneLiver(id)\n    .then((data) => {\n      apiHandler.getPhrases(\"liver\")\n        .then(phrases => {\n          this.populateFields(data,phrases)\n        })\n        .catch(err => console.log(err))\n    }).catch(err => console.log(err))\n  }\n\n  render() {\n    \n    console.log(this.props)\n    return (\n      <div className=\"mainDivGF\">\n        <form onSubmit={this.handleSubmit}>\n          <table className=\"tableSize\">\n            <thead>\n              <tr>\n                <td>\n                  <h2>Resultado do exame</h2>\n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>\n                  <label htmlFor=\"\">Observações:</label>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  {\" \"}\n                  <TextField\n                    id=\"outlined-full-width\"\n                    style={{ margin: 8 }}\n                    fullWidth\n                    multiline\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    value={this.state.observacoes}\n                    onChange={this.handleChange(\"observacoes\")}\n                    InputLabelProps={{\n                      shrink: true\n                    }}\n                  />\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <label htmlFor=\"\">Conclusões:</label>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  {\" \"}\n                  <TextField\n                    id=\"outlined-full-width\"\n                    style={{ margin: 8 }}\n                    fullWidth\n                    multiline\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    value={this.state.conclusoes}\n                    onChange={this.handleChange(\"conclusoes\")}\n                    InputLabelProps={{\n                      shrink: true\n                    }}\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n            Concluir\n          </Button>\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n            Baixar PDF do laudo\n          </Button>\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n            Enviar laudo para o cliente\n          </Button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default FinalForm;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FigadoForm from \"./FigadoForm\";\nimport General from \"./GeneralForm\";\nimport ProstataForm from \"./ProstataForm\";\nimport FinalForm from \"./FinalForm\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\"\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular\n  }\n}));\n\nexport default function SimpleExpansionPanel() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel>\n        <ExpansionPanelSummary\n          //   expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography className={classes.heading}>General Info</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <General />\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n      {/* --------------------------------------------------------------------------------------- */}\n      <ExpansionPanel>\n        <ExpansionPanelSummary\n          //   expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2a-content\"\n          id=\"panel2a-header\"\n        >\n          <Typography className={classes.heading}>Laudo Figado</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <FigadoForm />\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n      {/* --------------------------------------------------------------------------------------- */}\n\n      <ExpansionPanel>\n        <ExpansionPanelSummary\n          //   expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2a-content\"\n          id=\"panel2a-header\"\n        >\n          <Typography className={classes.heading}>Laudo Prostata</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <ProstataForm />\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n\n      <ExpansionPanel>\n        <ExpansionPanelSummary\n          //   expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2a-content\"\n          id=\"panel2a-header\"\n        >\n          <Typography className={classes.heading}>Final</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <FinalForm />\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </div>\n  );\n}\n","import React, { Fragment } from 'react';\nimport Container from '@material-ui/core/Container';\nimport MaterialTable, { MTableToolbar } from 'material-table';\nimport ApiService from './Services/ApiService';\nimport SimpleExpansionPanel from './Expansion';\nimport Button from '@material-ui/core/Button';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\nexport default function MainTable(props) {\n\tconst [state,setState] = React.useState({\n\t\tbg: {\n\t\t\t// backgroundColor: \"#f0f0f0\",\n\t\t\t// color: 'red  '\n\t\t},\n\t\tcolumns: [\n\t\t\t{\n\t\t\t\ttitle: 'Ações',\n\t\t\t\tfield: 'acoes',\n\t\t\t\trender: (rowData) =>\n\t\t\t\t\trowData.status === 'Aberto' ? (\n\t\t\t\t\t\t<Link href=\"/newlaudoview\">\n\t\t\t\t\t\t\t<EditIcon />\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Link href=\"/newlaudoview\">\n\t\t\t\t\t\t\t<AssignmentIcon />\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t)\n\t\t\t},\n\t\t\t{ title: 'Exame', field: 'exam' },\n\t\t\t{ title: 'Paciente', field: 'pacient' },\n\t\t\t{\n\t\t\t\ttitle: 'Status',\n\t\t\t\tfield: 'status',\n\t\t\t\trender: (rowData) =>\n\t\t\t\t\trowData.status === 'Aberto' ? (\n\t\t\t\t\t\t<p style={{ color: 'green' }}>{rowData.status}</p>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<p style={{ color: 'red' }}>{rowData.status}</p>\n\t\t\t\t\t)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Delete',\n\t\t\t\tfield: 'delete',\n\t\t\t\trender: (rowData) => (\n\t\t\t\t\t<Button onClick={() => deleteExam(rowData.id)}>\n\t\t\t\t\t\t<DeleteIcon/>\n\t\t\t\t\t</Button>\n\t\t\t\t)\n\t\t\t}\n\t\t],\n\t\t\n  });\n  const [data, setData] = React.useState([]);\n\n\tconst apiHandler = new ApiService();\n\n\tReact.useEffect(\n\t\t() => {\n\t\t\tapiHandler.getAllExams().then(\n\t\t\t\tfunction(itemResponse) {\n\t\t\t\t\tconsole.log(itemResponse);\n\t\t\t\t\tsetData({\n\t\t\t\t\t\tdata: itemResponse.map((item) => ({\n\t\t\t\t\t\t\texam: item.examId,\n\t\t\t\t\t\t\tpacient: item.pacient.nome,\n\t\t\t\t\t\t\tstatus: item.state === 'done' ? 'Fechado' : 'Aberto',\n\t\t\t\t\t\t\tid: item._id\n\t\t\t\t\t\t}))\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tfunction(error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n  );\n\n\tconst deleteExam = (id) => {\n\t\t// await apiHandler.deleteExam(id);\n\t\t// const itemResponse = await apiHandler.getAllExams()\n\t\t// console.log('djalksjlkasjdlaksjdlasjdsa')\n\t\t// setData({\n\t\t// \t\tdata: itemResponse.map((item) => ({\n\t\t// \t\t\texam: item.examId,\n\t\t// \t\t\tpacient: item.pacient.nome,\n\t\t// \t\t\tstatus: item.state === 'done' ? 'Fechado' : 'Aberto',\n\t\t// \t\t\tid: item._id\n\t\t// \t\t}))\n\t\t// \t});\n\n\t\tapiHandler.deleteExam(id).then((response) => {\n\t\t\tapiHandler.getAllExams()\n\t\t\t.then((itemResponse) => {\n\t\t\t\tsetData({\n\t\t\t\t\tdata: itemResponse.map((item) => ({\n\t\t\t\t\t\texam: item.examId,\n\t\t\t\t\t\tpacient: item.pacient.nome,\n\t\t\t\t\t\tstatus: item.state === 'done' ? 'Fechado' : 'Aberto',\n\t\t\t\t\t\tid: item._id\n\t\t\t\t\t}))\n\t\t\t\t});\n\t\t\t}).catch((err) => console.log(err))\n\t\t})\n\t\t.catch((err) => console.log(err));\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Grid className=\"\">\n\t\t\t\t<MaterialTable\n\t\t\t\t\tstyle={state.bg}\n\t\t\t\t\tcolumn={{\n\t\t\t\t\t\tcellStyle: (cell) => ({\n\t\t\t\t\t\t\tbackgroundColor: 'red'\n\t\t\t\t\t\t})\n\t\t\t\t\t}}\n\t\t\t\t\ttitle=\"Procurar laudos\"\n\t\t\t\t\tcolumns={state.columns}\n\t\t\t\t\tdata={data.data}\n\t\t\t\t\tonRowClick={(evt, selectedRow) => {\n\t\t\t\t\t\treturn setState({ ...state, selectedRow });\n\t\t\t\t\t}}\n\t\t\t\t\toptions={{\n\t\t\t\t\t\trowStyle: (rowData) => ({\n\t\t\t\t\t\t\tbackgroundColor:\n\t\t\t\t\t\t\t\tstate.selectedRow && state.selectedRow.tableData.id === rowData.tableData.id\n\t\t\t\t\t\t\t\t\t? '#f0f5f5'\n\t\t\t\t\t\t\t\t\t: '#FFF'\n\t\t\t\t\t\t\t// color: (rowData.status === \"Aberto\" ? '#00b300' : '#ff3300')\n\t\t\t\t\t\t})\n\t\t\t\t\t}}\n\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Fragment>\n\t);\n}\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Link from '@material-ui/core/Link';\n\nconst options = [\n  <Link href=\"/\">Home</Link>,\n  <Link href=\"/laudos\">Laudos</Link>\n];\n\nconst ITEM_HEIGHT = 48;\n\nexport default function LongMenu() {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <IconButton\n        aria-label=\"more\"\n        aria-controls=\"long-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n        <MoreVertIcon />\n      </IconButton>\n      <Menu\n        id=\"long-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={open}\n        onClose={handleClose}\n        PaperProps={{\n          style: {\n            maxHeight: ITEM_HEIGHT * 4.5,\n            width: 200,\n          },\n        }}\n      >\n        {options.map(option => (\n          <MenuItem key={option} selected={option === 'Pyxis'} onClick={handleClose}>\n            {option}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Link from '@material-ui/core/Link';\n// import { Link } from 'react-router-dom'\nimport Button from '@material-ui/core/Button';\nimport PostAddOutlinedIcon from '@material-ui/icons/PostAddOutlined';\n\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Menubar from './Menubar.js';\nimport BuildIcon from '@material-ui/icons/Build';\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tflexGrow: 1\n\t},\n\tmenuButton: {\n\t\tmarginRight: theme.spacing(2)\n\t},\n\ttitle: {\n\t\tflexGrow: 1\n\t},\n\tlogo: {\n\t\tmarginBottom: '35px',\n\t\tbackgroundImage: 'url(/img/Logo.svg)',\n\t\tbackgroundRepeat: 'no-repeat',\n\t\tbackgroundPosition: 'center',\n\t\theight: '6vh',\n\t\twidth: '50vh',\n\t\tbackgroundSize: '150px',\n\t\tposition: 'absolute',\n\t\ttop: '50%',\n\t\tmarginLeft: '90px',\n\t\ttransform: 'translate(-50%, -50%)'\n\t},\n\tjustify: {\n\t\talignItems: 'center'\n\t}\n}));\n\nexport default function NavBar() {\n\tconst classes = useStyles();\n\tconst [ anchorEl, setAnchorEl ] = React.useState(null);\n\n\tconst handleMenu = (event) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClick = (event) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetAnchorEl(null);\n\t};\n\n\treturn (\n\t\t<div className={classes.root && 'fixed-top'}>\n\t\t\t<FormGroup />\n\t\t\t<AppBar position=\"static\">\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<Link href=\"/\" className={classes.logo} />\n\t\t\t\t\t<Typography variant=\"h6\" className={classes.title} />\n\t\t\t\t\t{/* <Tooltip disableFocusListener title=\"Home\">\n            <Button href=\"/\">Home</Button>\n          </Tooltip>\n          <Tooltip disableFocusListener title=\"Laudos\">\n            <Button href=\"Laudos\">Laudos</Button>\n          </Tooltip> */}\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" href=\"/newlaudoview\">\n\t\t\t\t\t\t\t<PostAddOutlinedIcon />\n\t\t\t\t\t\t\tNovo Exame\n\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t<Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n\t\t\t\t\t\t\t<BuildIcon />\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Menu\n\t\t\t\t\t\t\tid=\"simple-menu\"\n\t\t\t\t\t\t\tanchorEl={anchorEl}\n\t\t\t\t\t\t\tkeepMounted\n\t\t\t\t\t\t\topen={Boolean(anchorEl)}\n\t\t\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Link href=\"/Medicos\">\n\t\t\t\t\t\t\t\t<MenuItem onClick={handleClose}>Médicos</MenuItem>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<Link href=\"/MedicosSolicitante\">\n\t\t\t\t\t\t\t\t<MenuItem onClick={handleClose}>Médicos Solitantes</MenuItem>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<Link href=\"/Convenios\">\n\t\t\t\t\t\t\t\t<MenuItem onClick={handleClose}>Convênios</MenuItem>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<Link href=\"/Clinicas\">\n\t\t\t\t\t\t\t\t<MenuItem onClick={handleClose}>Clinicas</MenuItem>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t\t<Link href=\"/dashboard\">\n\t\t\t\t\t\t\t\t<MenuItem onClick={handleClose}>Dashboard</MenuItem>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Menu>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Router>\n\t\t\t\t\t\t\t<Menubar />\n\t\t\t\t\t\t</Router>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\taria-label=\"account of current user\"\n\t\t\t\t\t\t\taria-controls=\"menu-appbar\"\n\t\t\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\t\t\tonCl\n\t\t\t\t\t\t\tick={handleMenu}\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\thref=\"/Cadastro\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<AccountCircle />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</div>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</div>\n\t);\n}\n","import React, {Component} from 'react'\n\n\n\nclass Footer extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n    \n    }\n  }\n\n  \n  render() {\n    return (\n      <div>\n<footer className=\"bg-dark text-white\">\n    <div className=\"container py-4 mx--74 \">\n      <div className=\"row\">\n        <div className=\"col\">\n          \n          <ul className=\"list-unstyled\">\n          </ul>\n          <h4 className=\"h6\">DADOS DE CONTATO</h4>\n          <ul className=\"list-unstyled text-secondary\">\n             <strong style={{color: 'white'}}>email:</strong> contato@onreport.com.br <strong style={{color: 'white'}}>contato:</strong> 11 99999-9999 <strong style={{color: \"white\"}}>aberto:</strong> de seg. à Sexta das 8hrs às 18hrs\n          <p style={{color: \"white\"}}>Copyright © OnReport 2019</p>\n          </ul>\n        </div>\n       \n  \n      </div>\n    </div>\n  </footer>\n  </div>\n    )\n  };\n}\n\nexport default Footer \n\n\n\n\n","import React, {Component} from 'react'\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport MainTable from './MainTable'\nimport Navbar from './Navbar'\nimport Footer from './Footer'\nimport {Link} from 'react-router-dom'\n\nclass Laudos extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n    \n    }\n  }\n\n  render(){\n    return (\n          <div>\n            <Router>\n              <div id=\"main\"></div>\n              <Navbar/>\n                <MainTable/>\n                <Footer/>\n            </Router> \n      </div>\n    )\n  }\n}\n\n  export default Laudos","import React from 'react';\nimport MaterialTable from 'material-table';\nimport { Container } from '@material-ui/core';\nimport Grid from \"@material-ui/core/Grid\";\n\n\n\n  export default function MainTable() {\n    const [state, setState] = React.useState({\n      // bg: {\n      //   backgroundColor: \"#f0f0f0\",\n      //   color: 'red'\n      // },  \n      columns: [\n        { title: 'Medico', field: 'medico' },\n        { title: 'CRM', field: 'crm' },\n        { title: 'Estado', field: 'estado' },\n      ],\n      data: [\n        { medico: 'João Lisboa Campos', crm: '33345223', 'estado': 'São Paulo' },\n        {\n          medico: 'Leticia Pardo',crm: '333353', 'estado': 'Bahia '\n        },\n        \n      ],\n    });\n\n    \n    return (\n      <Grid className=\"mt-5 pt-4\">\n      <MaterialTable \n        style={state.bg}\n        title=\"Cadastro Medicos\"\n        columns={state.columns}\n        data={state.data}\n        onRowClick={((evt, selectedRow) =>{\n          \n          return setState( {...state }, { selectedRow })\n          }) }\n        options={{\n          rowStyle: rowData => ({\n            backgroundColor: (state.selectedRow && state.selectedRow.tableData.id === rowData.tableData.id) ? 'red' : '#FFF'\n          })\n        }}\n        editable={{\n          onRowAdd: newData =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                const data = [...state.data];\n                data.push(newData);\n                setState({ ...state, data });\n              }, 600);\n            }),\n          onRowUpdate: (newData, oldData) =>\n            new Promise(resolve => {\n              // setTimeout(() => {\n                resolve();\n                const data = [...state.data];\n                data[data.indexOf(oldData)] = newData;\n                setState({ ...state, data });\n              // }, 600);\n            }),\n          onRowDelete: oldData =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                const data = [...state.data];\n                data.splice(data.indexOf(oldData), 1);\n                setState({ ...state, data });\n              }, 600);\n            }),\n        }}\n      />\n      </Grid>\n      \n    );\n  }\n\n\n\n  ","import React, {Component} from 'react'\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport MainTableMedicos from './MainTableMedicos'\nimport Navbar from './Navbar'\nimport Footer from './Footer'\n\nclass Medicos extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n    \n    }\n  }\n\n  render(){\n    return (\n          <div>\n            <Router>\n              <div id=\"main\"></div>\n              <Navbar/>\n                <MainTableMedicos/>\n              <Footer/>\n            </Router> \n      </div>\n    )\n  }\n}\n\nexport default Medicos","import React from 'react';\nimport MaterialTable from 'material-table';\nimport Grid from \"@material-ui/core/Grid\";\n\n\n  export default function MainTable() {\n    const [state, setState] = React.useState({\n      // bg: {\n      //   backgroundColor: \"#f0f0f0\",\n      //   color: 'red'\n      // },  \n      columns: [\n        { title: 'Medico', field: 'medico' },\n        { title: 'CRM', field: 'crm' },\n        { title: 'Estado', field: 'estado' },\n      ],\n      data: [\n        { medico: 'Patricia Campos', crm: '33345223', 'estado': 'Rio de Janeiro' },\n        {\n          medico: 'Sandra Bullock',crm: '333353', 'estado': 'Maranhão '\n        },\n        \n      ],\n    });\n\n    \n    return (\n      <Grid className=\"mt-5 pt-4\">\n      <MaterialTable \n        style={state.bg}\n        title=\"Cadastro Medicos Solicitante\"\n        columns={state.columns}\n        data={state.data}\n        onRowClick={((evt, selectedRow) =>{\n          \n          return setState( {...state }, { selectedRow })\n          }) }\n        options={{\n          rowStyle: rowData => ({\n            backgroundColor: (state.selectedRow && state.selectedRow.tableData.id === rowData.tableData.id) ? 'red' : '#FFF'\n          })\n        }}\n        editable={{\n          onRowAdd: newData =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                const data = [...state.data];\n                data.push(newData);\n                setState({ ...state, data });\n              }, 600);\n            }),\n          onRowUpdate: (newData, oldData) =>\n            new Promise(resolve => {\n              // setTimeout(() => {\n                resolve();\n                const data = [...state.data];\n                data[data.indexOf(oldData)] = newData;\n                setState({ ...state, data });\n              // }, 600);\n            }),\n          onRowDelete: oldData =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                const data = [...state.data];\n                data.splice(data.indexOf(oldData), 1);\n                setState({ ...state, data });\n              }, 600);\n            }),\n        }}\n      />\n      </Grid>\n      \n    );\n  }\n\n\n\n  ","import React, {Component} from 'react'\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport MainTableMedicosSolicitante from './MainTableMedicosSolicitante'\nimport Navbar from './Navbar'\nimport Footer from './Footer'\n\nclass MedicosSolicitante extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n    \n    }\n  }\n\n  render(){\n    return (\n          <div>\n            <Router>\n              <div id=\"main\"></div>\n              <Navbar/>\n                <MainTableMedicosSolicitante/>\n              <Footer/>\n            </Router> \n      </div>\n    )\n  }\n}\n\nexport default MedicosSolicitante","import React from 'react';\nimport MaterialTable from 'material-table';\nimport Grid from \"@material-ui/core/Grid\";\n\n\n\n  export default function MainTable() {\n    const [state, setState] = React.useState({\n      // bg: {\n      //   backgroundColor: \"#f0f0f0\",\n      //   color: 'red'\n      // },  \n      columns: [\n        { title: 'Clinicas', field: 'clinica' },\n      ],\n      data: [\n        { clinica: 'Albert Einstein' },\n        { clinica: 'São Domingos' },\n        { clinica: 'UDI' },\n      ],\n    });\n\n    \n    return (\n      <Grid className=\"mt-5 pt-4\">\n\n      <MaterialTable \n        style={state.bg}\n        title=\"Cadastro Clinicas\"\n        columns={state.columns}\n        data={state.data}\n        onRowClick={((evt, selectedRow) =>{\n          \n          return setState( {...state }, { selectedRow })\n          }) }\n        options={{\n          rowStyle: rowData => ({\n            backgroundColor: (state.selectedRow && state.selectedRow.tableData.id === rowData.tableData.id) ? 'red' : '#FFF'\n          })\n        }}\n        editable={{\n          onRowAdd: newData =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                const data = [...state.data];\n                data.push(newData);\n                setState({ ...state, data });\n              }, 600);\n            }),\n          onRowUpdate: (newData, oldData) =>\n            new Promise(resolve => {\n              // setTimeout(() => {\n                resolve();\n                const data = [...state.data];\n                data[data.indexOf(oldData)] = newData;\n                setState({ ...state, data });\n              // }, 600);\n            }),\n          onRowDelete: oldData =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                const data = [...state.data];\n                data.splice(data.indexOf(oldData), 1);\n                setState({ ...state, data });\n              }, 600);\n            }),\n        }}\n      />\n      </Grid>\n      \n    );\n  }\n\n\n\n  ","import React, {Component} from 'react'\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport MainTableClinicas from './MainTableClinicas'\nimport Navbar from './Navbar'\nimport Footer from './Footer'\n\nclass Clinicas extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n    \n    }\n  }\n\n  render(){\n    return (\n          <div>\n            <Router>\n              <div id=\"main\"></div>\n              <Navbar/>\n                <MainTableClinicas/>\n              <Footer/>\n            </Router> \n      </div>\n    )\n  }\n}\n\nexport default Clinicas","import React, {Component} from 'react'\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Navbar from './Navbar'\nimport Footer from './Footer'\nimport GeneralForm from './GeneralForm';\n\nclass NewLaudoView extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n    \n    }\n  }\n\n  render(){\n    return (\n          <div>\n            <Router>\n              <div id=\"main\"></div>\n              <Navbar/>\n                <GeneralForm rest={this.props}/>\n                <Footer/>\n            </Router> \n      </div>\n    )\n  }\n}\n\n  export default NewLaudoView\n","import React, {Component} from 'react'\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Navbar from './Navbar'\nimport Footer from './Footer'\nimport ProstataForm from './ProstataForm';\n\nclass NewProstataView extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n    \n    }\n  }\n\n  render(){\n    console.log(this.props)\n    return (\n          <div>\n            <Router>\n              <div id=\"main\"></div>\n              <Navbar/>\n                <ProstataForm rest={this.props}/>\n                <Footer/>\n            </Router> \n      </div>\n    )\n  }\n}\n\n  export default NewProstataView\n","import React from 'react';\nimport MaterialTable from 'material-table';\nimport Grid from \"@material-ui/core/Grid\";\n\n\n\n  export default function MainTable() {\n    const [state, setState] = React.useState({\n      // bg: {\n      //   backgroundColor: \"#f0f0f0\",\n      //   color: 'red'\n      // },  \n      columns: [\n        { title: 'Convênio', field: 'convenio' },\n      ],\n      data: [\n        { convenio: 'Unimed' },\n        { convenio: 'Cassi'},\n        { convenio: 'Bradesco'},\n        { convenio: 'Hapvida'}\n      ],\n    });\n\n    \n    return (\n      <Grid className=\"mt-5 pt-4\">\n      <MaterialTable \n        style={state.bg}\n        title=\"Cadastro Convênios\"\n        columns={state.columns}\n        data={state.data}\n        onRowClick={((evt, selectedRow) =>{\n          \n          return setState( {...state }, { selectedRow })\n          }) }\n        options={{\n          rowStyle: rowData => ({\n            backgroundColor: (state.selectedRow && state.selectedRow.tableData.id === rowData.tableData.id) ? 'red' : '#FFF'\n          })\n        }}\n        editable={{\n          onRowAdd: newData =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                const data = [...state.data];\n                data.push(newData);\n                setState({ ...state, data });\n              }, 600);\n            }),\n          onRowUpdate: (newData, oldData) =>\n            new Promise(resolve => {\n              // setTimeout(() => {\n                resolve();\n                const data = [...state.data];\n                data[data.indexOf(oldData)] = newData;\n                setState({ ...state, data });\n              // }, 600);\n            }),\n          onRowDelete: oldData =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                const data = [...state.data];\n                data.splice(data.indexOf(oldData), 1);\n                setState({ ...state, data });\n              }, 600);\n            }),\n        }}\n      />\n      </Grid>\n      \n      \n    );\n  }\n\n\n\n  ","import React, {Component} from 'react'\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport MainTableConvenios from './MainTableConvenios.js'\nimport Navbar from './Navbar'\nimport Footer from './Footer'\n\nclass Convenios extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n    \n    }\n  }\n\n  render(){\n    return (\n          <div>\n            <Router>\n              <div id=\"main\"></div>\n              <Navbar/>\n              <MainTableConvenios/>\n              <Footer/>\n            </Router> \n      </div>\n    )\n  }\n}\n\nexport default Convenios","import React, {Component} from 'react'\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Navbar from './Navbar'\nimport Footer from './Footer'\nimport FigadoForm from './FigadoForm';\n\nclass NewFigadoView extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n    \n    }\n  }\n\n  render(){\n    return (\n          <div>\n            <Router>\n              <div id=\"main\"></div>\n              <Navbar/>\n              <FigadoForm rest={this.props}/>\n                <Footer/>\n            </Router> \n      </div>\n    )\n  }\n}\n\n  export default NewFigadoView\n","\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst protectedRoute  = ({component: Component, user, ...rest}) => {\n  console.log({component: Component, user, ...rest})\n    return (\n      <Route\n        {...rest}\n        render={ props  => {\n            if(user){\n              console.log(\"entrou\")\n              return <Component {...props} loggedInUser={user}/>\n            } else {\n              return <Redirect to={{pathname: '/', state: {from: props.location}}} />\n            }\n          }\n        }\n      />\n    )\n}\nexport default protectedRoute;","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport Link from '@material-ui/core/Link';\nimport AccountBoxOutlinedIcon from '@material-ui/icons/AccountBoxOutlined';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport HomeWorkOutlinedIcon from '@material-ui/icons/HomeWorkOutlined';\nimport ReceiptOutlinedIcon from '@material-ui/icons/ReceiptOutlined';\n\nexport const mainListItems = (\n  <div>\n    <ListItem button>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n    <Link href=\"/laudos \">\n      <ListItemText primary=\"Home\" />\n      </Link>\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n      <AssignmentIcon />  \n      </ListItemIcon>\n      <Link href=\"/Laudos\">\n      <ListItemText primary=\"Laudos\" />\n      </Link>\n    </ListItem>\n  </div>\n);\n\nexport const secondaryListItems = (\n  <div>\n    <ListSubheader inset>Configurações</ListSubheader>\n    <ListItem button>\n      <ListItemIcon>\n        <AccountCircleOutlinedIcon />\n      </ListItemIcon>\n      <Link href=\"/medicos\">\n      <ListItemText primary=\"Medicos\" />\n      </Link>\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <AccountBoxOutlinedIcon />\n      </ListItemIcon>\n      <Link href=\"/medicossolicitante\"> \n      <ListItemText primary=\"Medico Auxiliar\" />\n      </Link>\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <HomeWorkOutlinedIcon />\n      </ListItemIcon>\n      <Link href=\"clinicas\">\n      <ListItemText primary=\"Clinicas\" />\n      </Link>\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <ReceiptOutlinedIcon />\n      </ListItemIcon>\n      <Link href=\"/convenios\">\n      <ListItemText primary=\"Convenios\" />\n      </Link>\n    </ListItem>\n  </div>\n);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","import React from 'react';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\nconst data = [\n  createData('Semana 1', 300),\n  createData('Semana 2', 600),\n  createData('Semana 3', 800),\n  createData('Semana 4', 1000),\n];\n\nexport default function ChartSemana() {\n  return (\n    <React.Fragment>\n      <Title>Mês</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"time\" />\n          <YAxis>\n            <Label angle={270} position=\"left\" style={{ textAnchor: 'middle' }}>\n              Reais (R$)\n            </Label>\n          </YAxis>\n          <Line type=\"monotone\" dataKey=\"amount\" stroke=\"#556CD6\" dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\nconst data = [\n  createData('1', 300),\n  createData('2', 600),\n  createData('3', 700),\n  createData('4', 1000),\n  createData('5', 1200),\n  createData('6', 1400),\n  createData('7', 2000),\n  createData('8', 1900),\n  createData('9', 1000),\n  createData('10', 1300),\n  createData('11', 1500),\n  createData('12', 1800),\n  createData('13', 1900),\n  createData('14', 2000),\n  createData('15', 2500),\n  createData('16', 2300),\n  createData('17', 2400),\n  createData('18', 2600),\n  createData('19', 2600),\n  createData('20', 2700),\n  createData('21', 3000),\n  createData('22', 3400),\n  createData('23', 3500),\n  createData('24', 3900),\n  createData('25', 4000),\n  createData('26', 4300),\n  createData('27', 4100),\n  createData('28', 4300),\n  createData('29', 4400),\n  createData('20', 4500),\n\n\n];\n\nexport default function ChartDias() {\n  return (\n    <React.Fragment>\n      <Title>Ultimos 30 dias</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"time\" />\n          <YAxis>\n            <Label angle={270} position=\"left\" style={{ textAnchor: 'middle' }}>\n              Reais (R$)\n            </Label>\n          </YAxis>\n          <Line type=\"monotone\" dataKey=\"amount\" stroke=\"#556CD6\" dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { mainListItems, secondaryListItems } from './listItems';\nimport ChartSemana from './ChartSemana'\nimport ChartDias from './ChartDias'\nimport Link from '@material-ui/core/Link';\n\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n\t\tcolor: 'black',\n    paddingRight: 24, // keep right padding when drawer closed\n\t},\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n\t\t\t\t\t\tDashboard\n          </Typography>\n          {/* <IconButton color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton> */}\n\t\t\t\t\t\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n        <List>{secondaryListItems}</List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            {/* Chart */}\n            <Grid item xs={12} md={8} lg={12}>\n              <Paper className={fixedHeightPaper}>\n                <ChartSemana />\n              </Paper>\n            </Grid>\n\t\t\t\t\t\t<Grid item xs={12} md={8} lg={12}>\n              <Paper className={fixedHeightPaper}>\n                <ChartDias />\n              </Paper>\n            </Grid>\n            {/* Recent Deposits */}\n            {/* <Grid item xs={12} md={4} lg={3}>\n              <Paper className={fixedHeightPaper}>\n                <Deposits />\n              </Paper>\n            </Grid> */}\n\t\t\t\t\t\t\n            {/* Recent Orders */}\n            {/* <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <Orders />\n              </Paper>\n            </Grid> */}\n          </Grid>\n        </Container>\n      </main>\n    </div>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\n// import MenuItem from \"@material-ui/core/MenuItem\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport \"./App.css\";\nimport ApiService from './Services/ApiService'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Link from \"@material-ui/core/Link\";\nimport { Redirect } from 'react-router-dom'\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nexport default function GeneralForm(props) {\n\n  useEffect(()=> function addUser(onclick){\n\n  })\n    \n \n\n  useEffect((onClick)=> function handleSubmit(onClick) {\n  \n  });\n\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    data: new Date(),\n    clinica: \"\",\n    medico: \"\",\n    convenio: \"\",\n    medicoSolicitante: \"\",\n\n    dataDeNasc: new Date(),\n    nome: \"\",\n    idade: \"\",\n    telefone: \"\",\n    email: \"\",\n    selecionarExame: \"\",\n    hrefExam: \"/abc\"\n  });\n  \n  const inputLabel = React.useRef(null);\n  const [labelWidth, setLabelWidth] = React.useState(0);\n  React.useEffect(() => {\n    setLabelWidth(inputLabel.current.offsetWidth);\n  }, []);\n  const completePacient = objPacient =>{\n      console.log(objPacient)\n\n  }\n  //   const [selectedDate, setSelectedDate] = React.useState(\n  //     new Date(\"2014-08-18T21:11:54\")\n  //   );\n\n  const handleDateChange = dateName => date => {\n    setState({\n      ...state,\n      [dateName]: date\n    });\n  };\n\n  const handleChange = name => event => {\n   console.log(props)\n    if(name === \"selecionarExame\"){\n      console.log(event.target)\n      setState({\n        ...state,\n        [name]: event.target.value,\n      });\n    }else {\n      setState({\n        ...state,\n        [name]: event.target.value\n      });\n    }\n  };\n  \n\n  const handleSubmit = event => {\n  \n    event.preventDefault();\n    //axios\n    setState({\n      data: undefined,\n      clinica: \"\",\n      medico: \"\",\n      convenio: \"\",\n      medicoSolicitante: \"\",\n\n      dataDeNasc: undefined,\n      nome: \"\",\n      idade: \"\",\n      telefone: \"\",\n      email: \"\"\n    });\n  };\n  const addUser = event => {\n   \n    const apiHandler = new ApiService()\n   \n    const { dataDeNasc,nome,idade,telefone,email,convenio,clinica,medico,medicoSolicitante,data,selecionarExame} = state\n    \n  \n      apiHandler.newPacient(dataDeNasc,nome,idade,telefone,email,convenio)\n      .then(function(itemResponse) {\n        console.log('PACIENT!!!!!!!!',itemResponse)\n        console.log(selecionarExame)\n        if(selecionarExame===\"/newprostataview\"){\n          apiHandler.newProstate(clinica,medico,medicoSolicitante,data)\n        .then(function(response) {\n          console.log('PROSTATA!!!!!!!!!!!!!',response)\n        props.rest.history.push(`${selecionarExame}`)\n          \n        })\n        }\n        if(selecionarExame===\"figado\"){\n          apiHandler.newLiver(clinica,medico,medicoSolicitante,data)\n        }\n      \n        \n       \n      });\n  }\n\n  return (\n\n    <div className=\"mainDivGF\">\n      <form className=\"box-shadow p-4 marginBottom mt-5 \"  onSubmit={handleSubmit}>\n        <h3>Historico do Laudo Figado</h3>\n        <table>\n          <thead>\n            <tr>\n              <td>\n                <h3>Exame</h3>\n              </td>\n              <td className=\"pacienteTd\">\n                <h3>Paciente</h3>\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Data:</label>\n                  </td>\n                  <td>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                      <Grid container justify=\"space-around\">\n                        <KeyboardDatePicker\n                          disabled\n                          margin=\"normal\"\n                          id=\"date-picker-dialog\"\n                          format=\"dd/MM/yyyy\"\n                          value={state.data}\n                          onChange={handleDateChange(\"data\")}\n                          KeyboardButtonProps={{\n                            \"aria-label\": \"change date\"\n                          }}\n                        />\n                      </Grid>\n                    </MuiPickersUtilsProvider>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Clinica:</label>\n                  </td>\n\n                  <td>\n                    <FormControl\n                      // variant=\"outlined\"\n                      className={classes.formControl}\n                    >\n                      <InputLabel\n                        ref={inputLabel}\n                        htmlFor=\"outlined-age-simple\"\n                      ></InputLabel>\n                      <Select\n                      disabled\n                        native\n                        margin=\"dense\"\n                        value={state.clinica}\n                        onChange={handleChange(\"clinica\")}\n                        labelWidth={labelWidth}\n                        inputProps={{\n                          name: \"clinica\",\n                          id: \"outlined-clinica\"\n                        }}\n                      >\n                        <option value=\"\" />\n                        <option value={\"ten\"}>Ten</option>\n                        <option value={\"two\"}>Twenty</option>\n                        <option value={\"tree\"}>Thirty</option>\n                      </Select>\n                    </FormControl>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Medico:</label>\n                  </td>\n                  <td>\n                    <FormControl\n                      // variant=\"outlined\"\n                      className={classes.formControl}\n                    >\n                      {/* <InputLabel ref={inputLabel} htmlFor=\"outlined-age-simple\">\n                  Medico\n                </InputLabel> */}\n                      <Select\n                        disabled\n                        native\n                        value={state.medico}\n                        onChange={handleChange(\"medico\")}\n                        name=\"medico\"\n                        margin=\"dense\"\n                        labelWidth={labelWidth}\n                        inputProps={{\n                          name: \"medico\",\n                          id: \"outlined-medico\"\n                        }}\n                      >\n                        <option value=\"\" />\n                        <option value={\"ten\"}>Ten</option>\n                        <option value={20}>Twenty</option>\n                        <option value={30}>Thirty</option>\n                      </Select>\n                    </FormControl>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Convenio:</label>\n                  </td>\n                  <td>\n                    <FormControl\n                      // variant=\"outlined\"\n                      className={classes.formControl}\n                    >\n                      {/* <InputLabel ref={inputLabel} htmlFor=\"outlined-age-simple\">\n                  Convenio\n                </InputLabel> */}\n                      <Select\n                        disabled\n                        native\n                        value={state.convenio}\n                        onChange={handleChange(\"convenio\")}\n                        name=\"convenio\"\n                        margin=\"dense\"\n                        labelWidth={labelWidth}\n                        inputProps={{\n                          name: \"convenio\",\n                          id: \"outlined-convenio\"\n                        }}\n                      >\n                        <option value=\"\" />\n                        <option value={\"unimed\"}>Ten</option>\n                        <option value={20}>Twenty</option>\n                        <option value={30}>Thirty</option>\n                      </Select>\n                    </FormControl>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Medico Solicitante:</label>\n                  </td>\n                  <td>\n                    <FormControl\n                      // variant=\"outlined\"\n                      className={classes.formControl}\n                    >\n                      {/* <InputLabel ref={inputLabel} htmlFor=\"outlined-age-simple\">\n                  Convenio\n                </InputLabel> */}\n                      <Select\n                        disabled\n                        native\n                        name=\"medicoSolicitante\"\n                        value={state.medicoSolicitante}\n                        onChange={handleChange(\"medicoSolicitante\")}\n                        margin=\"dense\"\n                        labelWidth={labelWidth}\n                        inputProps={{\n                          name: \"medicoSolicitante\",\n                          id: \"outlined-medicoSolicitante\"\n                        }}\n                      >\n                        <option value=\"\" />\n                        <option value={\"ten\"}>Ten</option>\n                        <option value={20}>Twenty</option>\n                        <option value={30}>Thirty</option>\n                      </Select>\n                    </FormControl>\n                  </td>\n                </tr>\n              </td>\n              {/* --------------------------------------------------------------------------------------------- */}\n              <td className=\"mainTd\">\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Data de Nasc: </label>\n                  </td>\n                  <td>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                      <Grid container justify=\"space-around\">\n                        <KeyboardDatePicker\n                          disabled\n                          margin=\"normal\"\n                          id=\"date-picker-dialog\"\n                          format=\"dd/MM/yyyy\"\n                          value={state.dataDeNasc}\n                          onChange={handleDateChange(\"dataDeNasc\")}\n                          KeyboardButtonProps={{\n                            \"aria-label\": \"change date\"\n                          }}\n                        />\n                      </Grid>\n                    </MuiPickersUtilsProvider>\n                  </td>\n                </tr>\n\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Nome:</label>\n                  </td>\n                  <td>\n                    <TextField\n                      disabled\n                      id=\"outlined-dense\"\n                      margin=\"dense\"\n                      // variant=\"outlined\"\n                      name=\"nome\"\n                      type=\"text\"\n                      value={state.nome}\n                      onChange={handleChange(\"nome\")}\n                    />\n                  </td>\n                </tr>\n\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Idade:</label>\n                  </td>\n                  <td>\n                    <TextField\n                      disabled\n                      id=\"outlined-number\"\n                      name=\"idade\"\n                      margin=\"dense\"\n                      value={state.idade}\n                      onChange={handleChange(\"idade\")}\n                      type=\"number\"\n                      InputLabelProps={{\n                        shrink: true\n                      }}\n                      // variant=\"outlined\"\n                    />\n                  </td>\n                </tr>\n\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Telefone:</label>\n                  </td>\n                  <td>\n                    <TextField\n                      disabled\n                      id=\"outlined-tel\"\n                      margin=\"dense\"\n                      // label=\"Telefone\"\n                      // variant=\"outlined\"\n                      name=\"telefone\"\n                      type=\"tel\"\n                      value={state.telefone}\n                      onChange={handleChange(\"telefone\")}\n                    />\n                  </td>\n                </tr>\n\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">E-mail:</label>\n                  </td>\n                  <td>\n                    <TextField\n                      disabled\n                      id=\"outlined-email-input\"\n                   \n                      name=\"email\"\n                      autoComplete=\"email\"\n                      margin=\"dense\"\n                      // variant=\"outlin  ed\"\n                      onChange={handleChange(\"email\")}\n                      value={state.email}\n                    />\n                  </td>\n                </tr>\n               \n                <tr>\n                  <td>\n                    <label htmlFor=\"\">selecionar exame</label>\n                  </td>\n                  <td>\n                    <FormControl\n                      // variant=\"outlined\"\n                      className={classes.formControl}\n                    >\n                    \n                      <Select\n                        disabled\n                        native\n                        value={state.selecionarExame}\n                        onChange={handleChange(\"selecionarExame\")}\n                        name=\"selecionarExame\"\n                        margin=\"dense\"\n                        labelWidth={labelWidth}\n                        inputProps={{\n                          name: \"convenio\",\n                          id: \"outlined-convenio\"\n                        }}\n                      >\n                        <option value=\"\" />\n                        <option value={\"/newfigadoview\"}>figado</option>\n                        <option value={\"/newprostataview\"}>prostata</option>\n                        \n                      </Select>\n                    </FormControl>\n                  </td>\n                </tr>\n             \n               \n              </td>\n              \n              \n            </tr>\n          </tbody>\n        </table>\n        <br />\n        <p>Observações: </p>\n        <br/>\n        <p className=\"mb-4\">Conclusão: </p>\n\n  <br/>\n      </form>\n    </div>  \n  );\n}\n\n\n\n\n\n\n","import React, {Component} from 'react'\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport HistoricoFigadoForm from './HistoricoFigadoForm'\nimport Navbar from './Navbar'\nimport Footer from './Footer'\n\nclass Historico extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n    \n    }\n  }\n\n  render(){\n    return (\n          <div>\n            <Router>\n              <div id=\"main\"></div>\n              <Navbar/>\n                <HistoricoFigadoForm/>\n                <Footer/>\n            </Router> \n      </div>\n    )\n  }\n}\n\n  export default Historico","import React, { useState, useEffect } from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\n// import MenuItem from \"@material-ui/core/MenuItem\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport \"./App.css\";\nimport ApiService from './Services/ApiService'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Link from \"@material-ui/core/Link\";\nimport { Redirect } from 'react-router-dom'\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\n\n\nexport default function GeneralForm(props) {\n\n  useEffect(()=> function addUser(onclick){\n\n  })\n    \n \n\n  useEffect((onClick)=> function handleSubmit(onClick) {\n  \n      \n    \n\n   \n  });\n\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    data: new Date(),\n    clinica: \"\",\n    medico: \"\",\n    convenio: \"\",\n    medicoSolicitante: \"\",\n\n    dataDeNasc: new Date(),\n    nome: \"\",\n    idade: \"\",\n    telefone: \"\",\n    email: \"\",\n    selecionarExame: \"\",\n    hrefExam: \"/abc\"\n  });\n  \n  const inputLabel = React.useRef(null);\n  const [labelWidth, setLabelWidth] = React.useState(0);\n  React.useEffect(() => {\n    setLabelWidth(inputLabel.current.offsetWidth);\n  }, []);\n  const completePacient = objPacient =>{\n      console.log(objPacient)\n\n  }\n  //   const [selectedDate, setSelectedDate] = React.useState(\n  //     new Date(\"2014-08-18T21:11:54\")\n  //   );\n\n  const handleDateChange = dateName => date => {\n    setState({\n      ...state,\n      [dateName]: date\n    });\n  };\n\n  const handleChange = name => event => {\n   console.log(props)\n    if(name === \"selecionarExame\"){\n      console.log(event.target)\n      setState({\n        ...state,\n        [name]: event.target.value,\n      });\n    }else {\n      setState({\n        ...state,\n        [name]: event.target.value\n      });\n    }\n  };\n  \n\n  const handleSubmit = event => {\n  \n  \n \n    event.preventDefault();\n    //axios\n    setState({\n      data: undefined,\n      clinica: \"\",\n      medico: \"\",\n      convenio: \"\",\n      medicoSolicitante: \"\",\n\n      dataDeNasc: undefined,\n      nome: \"\",\n      idade: \"\",\n      telefone: \"\",\n      email: \"\"\n    });\n  };\n  const addUser = event => {\n   \n    const apiHandler = new ApiService()\n   \n    const { dataDeNasc,nome,idade,telefone,email,convenio,clinica,medico,medicoSolicitante,data,selecionarExame} = state\n    \n  \n      apiHandler.newPacient(dataDeNasc,nome,idade,telefone,email,convenio)\n      .then(function(itemResponse) {\n        console.log('PACIENT!!!!!!!!',itemResponse)\n        console.log(selecionarExame)\n        if(selecionarExame===\"/newprostataview\"){\n          apiHandler.newProstate(clinica,medico,medicoSolicitante,data)\n        .then(function(response) {\n          console.log('PROSTATA!!!!!!!!!!!!!',response)\n        props.rest.history.push(`${selecionarExame}`)\n          \n        })\n        }\n        if(selecionarExame===\"figado\"){\n          apiHandler.newLiver(clinica,medico,medicoSolicitante,data)\n        }\n      \n        \n       \n      });\n     \n  \n\n    \n  \n  }\n\n\n\n\n\n  return (\n\n    <div className=\"mainDivGF\">\n      <form className=\"box-shadow p-4 marginBottom mt-5\"  onSubmit={handleSubmit}>\n        <h3>Historico do Laudo Prostata</h3>\n        <table>\n          <thead>\n            <tr>\n              <td>\n                <h3>Exame</h3>\n              </td>\n              <td className=\"pacienteTd\">\n                <h3>Paciente</h3>\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Data:</label>\n                  </td>\n                  <td>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                      <Grid container justify=\"space-around\">\n                        <KeyboardDatePicker\n                          disabled\n                          margin=\"normal\"\n                          id=\"date-picker-dialog\"\n                          format=\"dd/MM/yyyy\"\n                          value={state.data}\n                          onChange={handleDateChange(\"data\")}\n                          KeyboardButtonProps={{\n                            \"aria-label\": \"change date\"\n                          }}\n                        />\n                      </Grid>\n                    </MuiPickersUtilsProvider>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Clinica:</label>\n                  </td>\n\n                  <td>\n                    <FormControl\n                      // variant=\"outlined\"\n                      className={classes.formControl}\n                    >\n                      <InputLabel\n                        ref={inputLabel}\n                        htmlFor=\"outlined-age-simple\"\n                      ></InputLabel>\n                      <Select\n                      disabled\n                        native\n                        margin=\"dense\"\n                        value={state.clinica}\n                        onChange={handleChange(\"clinica\")}\n                        labelWidth={labelWidth}\n                        inputProps={{\n                          name: \"clinica\",\n                          id: \"outlined-clinica\"\n                        }}\n                      >\n                        <option value=\"\" />\n                        <option value={\"ten\"}>Ten</option>\n                        <option value={\"two\"}>Twenty</option>\n                        <option value={\"tree\"}>Thirty</option>\n                      </Select>\n                    </FormControl>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Medico:</label>\n                  </td>\n                  <td>\n                    <FormControl\n                      // variant=\"outlined\"\n                      className={classes.formControl}\n                    >\n                      {/* <InputLabel ref={inputLabel} htmlFor=\"outlined-age-simple\">\n                  Medico\n                </InputLabel> */}\n                      <Select\n                        disabled\n                        native\n                        value={state.medico}\n                        onChange={handleChange(\"medico\")}\n                        name=\"medico\"\n                        margin=\"dense\"\n                        labelWidth={labelWidth}\n                        inputProps={{\n                          name: \"medico\",\n                          id: \"outlined-medico\"\n                        }}\n                      >\n                        <option value=\"\" />\n                        <option value={\"ten\"}>Ten</option>\n                        <option value={20}>Twenty</option>\n                        <option value={30}>Thirty</option>\n                      </Select>\n                    </FormControl>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Convenio:</label>\n                  </td>\n                  <td>\n                    <FormControl\n                      // variant=\"outlined\"\n                      className={classes.formControl}\n                    >\n                      {/* <InputLabel ref={inputLabel} htmlFor=\"outlined-age-simple\">\n                  Convenio\n                </InputLabel> */}\n                      <Select\n                        disabled\n                        native\n                        value={state.convenio}\n                        onChange={handleChange(\"convenio\")}\n                        name=\"convenio\"\n                        margin=\"dense\"\n                        labelWidth={labelWidth}\n                        inputProps={{\n                          name: \"convenio\",\n                          id: \"outlined-convenio\"\n                        }}\n                      >\n                        <option value=\"\" />\n                        <option value={\"unimed\"}>Ten</option>\n                        <option value={20}>Twenty</option>\n                        <option value={30}>Thirty</option>\n                      </Select>\n                    </FormControl>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Medico Solicitante:</label>\n                  </td>\n                  <td>\n                    <FormControl\n                      // variant=\"outlined\"\n                      className={classes.formControl}\n                    >\n                      {/* <InputLabel ref={inputLabel} htmlFor=\"outlined-age-simple\">\n                  Convenio\n                </InputLabel> */}\n                      <Select\n                        disabled\n                        native\n                        name=\"medicoSolicitante\"\n                        value={state.medicoSolicitante}\n                        onChange={handleChange(\"medicoSolicitante\")}\n                        margin=\"dense\"\n                        labelWidth={labelWidth}\n                        inputProps={{\n                          name: \"medicoSolicitante\",\n                          id: \"outlined-medicoSolicitante\"\n                        }}\n                      >\n                        <option value=\"\" />\n                        <option value={\"ten\"}>Ten</option>\n                        <option value={20}>Twenty</option>\n                        <option value={30}>Thirty</option>\n                      </Select>\n                    </FormControl>\n                  </td>\n                </tr>\n              </td>\n              {/* --------------------------------------------------------------------------------------------- */}\n              <td className=\"mainTd\">\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Data de Nasc: </label>\n                  </td>\n                  <td>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                      <Grid container justify=\"space-around\">\n                        <KeyboardDatePicker\n                          disabled\n                          margin=\"normal\"\n                          id=\"date-picker-dialog\"\n                          format=\"dd/MM/yyyy\"\n                          value={state.dataDeNasc}\n                          onChange={handleDateChange(\"dataDeNasc\")}\n                          KeyboardButtonProps={{\n                            \"aria-label\": \"change date\"\n                          }}\n                        />\n                      </Grid>\n                    </MuiPickersUtilsProvider>\n                  </td>\n                </tr>\n\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Nome:</label>\n                  </td>\n                  <td>\n                    <TextField\n                      disabled\n                      id=\"outlined-dense\"\n                      margin=\"dense\"\n                      // variant=\"outlined\"\n                      name=\"nome\"\n                      type=\"text\"\n                      value={state.nome}\n                      onChange={handleChange(\"nome\")}\n                    />\n                  </td>\n                </tr>\n\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Idade:</label>\n                  </td>\n                  <td>\n                    <TextField\n                      disabled\n                      id=\"outlined-number\"\n                      name=\"idade\"\n                      margin=\"dense\"\n                      value={state.idade}\n                      onChange={handleChange(\"idade\")}\n                      type=\"number\"\n                      InputLabelProps={{\n                        shrink: true\n                      }}\n                      // variant=\"outlined\"\n                    />\n                  </td>\n                </tr>\n\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">Telefone:</label>\n                  </td>\n                  <td>\n                    <TextField\n                      disabled\n                      id=\"outlined-tel\"\n                      margin=\"dense\"\n                      // label=\"Telefone\"\n                      // variant=\"outlined\"\n                      name=\"telefone\"\n                      type=\"tel\"\n                      value={state.telefone}\n                      onChange={handleChange(\"telefone\")}\n                    />\n                  </td>\n                </tr>\n\n                <tr>\n                  <td>\n                    <label htmlFor=\"\">E-mail:</label>\n                  </td>\n                  <td>\n                    <TextField\n                      disabled\n                      id=\"outlined-email-input\"\n                   \n                      name=\"email\"\n                      autoComplete=\"email\"\n                      margin=\"dense\"\n                      // variant=\"outlin  ed\"\n                      onChange={handleChange(\"email\")}\n                      value={state.email}\n                    />\n                  </td>\n                </tr>\n               \n                <tr>\n                  <td>\n                    <label htmlFor=\"\">selecionar exame</label>\n                  </td>\n                  <td>\n                    <FormControl\n                      // variant=\"outlined\"\n                      className={classes.formControl}\n                    >\n                    \n                      <Select\n                        disabled\n                        native\n                        value={state.selecionarExame}\n                        onChange={handleChange(\"selecionarExame\")}\n                        name=\"selecionarExame\"\n                        margin=\"dense\"\n                        labelWidth={labelWidth}\n                        inputProps={{\n                          name: \"convenio\",\n                          id: \"outlined-convenio\"\n                        }}\n                      >\n                        <option value=\"\" />\n                        <option value={\"/newfigadoview\"}>figado</option>\n                        <option value={\"/newprostataview\"}>prostata</option>\n                        \n                      </Select>\n                    </FormControl>\n                  </td>\n                </tr>\n             \n               \n              </td>\n              \n              \n            </tr>\n          </tbody>\n        </table>\n        <br />\n        <p>Observações:</p>\n        <br/>\n        <p className=\"mb-4\">Conclusão:</p>\n     \n  \n  <br/>\n  \n\n\n       \n      </form>\n    </div>  \n  );\n}\n\n\n\n\n\n\n","import React, {Component} from 'react'\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport HistoricoProstataForm from './HistoricoProstataForm'\nimport Navbar from './Navbar'\nimport Footer from './Footer'\n\nclass Historico extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n    \n    }\n  }\n\n  render(){\n    return (\n          <div>\n            <Router>\n              <div id=\"main\"></div>\n              <Navbar/>\n                <HistoricoProstataForm/>\n                <Footer/>\n            </Router> \n      </div>\n    )\n  }\n}\n\n  export default Historico","import React, { Component } from \"react\";\nimport skrollr from \"skrollr\";\nimport \"./LandingPageCover.css\";\nimport Button from \"@material-ui/core/Button\";\n\nclass LandingPageCover extends Component {\n  componentDidMount() {\n    skrollr.init();\n  }\n\n  render() {\n    return (\n      <div>\n        <div\n          className=\"logocon\"\n          data-0=\"opacity: 1; display: flex\"\n          data-99=\"opacity: 0; display: none\"\n          data-100=\"display: none\"\n        >\n          <div className=\"logo\">\n            <img src=\"/img/OnReport_roxo.svg\" alt=\"\" id=\"imageLaudos\" />\n          </div>\n        </div>\n        <div\n          className=\"hint\"\n          data-0=\"bottom: 10vh\"\n          data-50=\"bottom:10vh\"\n          data-100=\"bottom: -85px\"\n        >\n          <img src=\"/img/arrow-down.png\" alt=\"\" />\n        </div>\n\n        <div className=\"menu\">\n          <nav className=\"navigation navbar navbar-default navbar-fixed-top\">\n            <div className=\"container-fluid\">\n              <div className=\"navbar-header\">\n                <a className=\"navbar-brand\" href=\"/landingPage\">\n                  <img\n                    id=\"brand\"\n                    className=\"img-responsive\"\n                    alt=\"Brand\"\n                    src=\"/img/OnReport_roxo.svg\"\n                  />\n                </a>\n              </div>\n              {/* ------------------------------------------------- */}\n              <div>\n                <a href=\"/login\">\n                  <button\n                    href=\"/login\"\n                    id=\"navButton\"\n                    className=\"navbar-text navbar-right btn btn-info\"\n                  >\n                    Login\n                  </button>\n                </a>\n\n                <a href=\"/signup\">\n                  <button\n                    href=\"/signup\"\n                    id=\"navButton\"\n                    className=\"navbar-text navbar-right btn btn-info\"\n                  >\n                    SignUp\n                  </button>\n                </a>\n              </div>\n              {/* -------------------------------------------------- */}\n            </div>\n          </nav>\n        </div>\n        <div className=\"content\">\n          <div>\n            {/* <!-- Header Banner --> */}\n            <div className=\"intro-header\">\n              <div className=\"container\">\n                <div className=\"row\">\n                  <div className=\"col-lg-12\">\n                    <div className=\"intro-message\">\n                      <h1 className=\"animated bounceInDown\">\n                        Crie e tenha total controle sobre seus laudos de exames.\n                      </h1>\n\n                      <ul\n                        className=\"list-inline intro-social-buttons\"\n                        id=\"headerButton\"\n                      ></ul>\n                      <div id=\"empty\"> </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {/* <!-- /.container --> */}\n            </div>\n\n            {/* <!-- Page Content --> */}\n\n            {/* <!-- /.content-section-a --> --------------------------------------------------*/}\n\n            <div className=\"content-section-a\">\n              <div className=\"container\">\n                <div className=\"row\">\n                  <div className=\"col-lg-5 col-lg-offset-1 col-sm-push-6  col-sm-6\">\n                    <div className=\"clearfix\"></div>\n                    <h2 className=\"section-heading\">Agilidade</h2>\n                    <hr className=\"section-heading-spacer\" />\n                    <div className=\"clearfix\"></div>\n                    <p className=\"lead\">\n                      O sistema OnReport permite laudar de forma extremamente\n                      rápida e ao mesmo tempo segura, encurtando o tempo de\n                      entrega dos resultados sem prejuízo da qualidade do laudo.\n                    </p>\n                  </div>\n                  <div className=\"col-lg-5 col-sm-pull-6  col-sm-6\">\n                    {/* <!-- /.image credit: simple.com --> */}\n\n                    <img\n                      className=\" img-responsive\"\n                      src=\"/img/lukas-blazek-UAvYasdkzq8-unsplash.jpg\"\n                      id=\"responsive\"\n                      alt=\"\"\n                    />\n                  </div>\n                </div>\n              </div>\n              {/* <!-- /.container --> */}\n            </div>\n            {/* <!-- /.content-section-b --> */}\n\n            <div className=\"content-section-b\">\n              <div className=\"container\">\n                <div className=\"row secb\">\n                  <div className=\"col-lg-5 col-sm-6\">\n                    <h2 className=\"section-heading\">Rentabilidade</h2>\n                    <hr className=\"section-heading-spacer\" />\n                    <div className=\"clearfix\"></div>\n\n                    <p className=\"lead\">\n                      O OnReport auxilia na agilidade da liberação, assim, sua\n                      clínica não só terá um grande diferencial em relação à\n                      concorrência, como terá um aumento significativo de renda.\n                    </p>\n                  </div>\n                  <div className=\"col-lg-5 col-lg-offset-2 col-sm-6\">\n                    <img\n                      className=\"img-responsive\"\n                      src=\"/img/pepi-stojanovski-MJSFNZ8BAXw-unsplash.jpg\"\n                      alt=\"\"\n                      id=\"responsive\"\n                    />\n                  </div>\n                </div>\n              </div>\n              {/* <!-- /.container --> */}\n            </div>\n            {/* <!-- /.content-section-c --> */}\n\n            <div className=\"content-section-c\">\n              <div className=\"container\">\n                <div className=\"row\">\n                  <div className=\"col-lg-5 col-lg-offset-1 col-sm-push-6  col-sm-6\">\n                    <h2 className=\"section-heading\">Speech to Text</h2>\n\n                    <hr className=\"section-heading-spacer\" />\n                    <div className=\"clearfix\"></div>\n                    <p className=\"lead\">\n                      O recurso mais renomado do OnReport é a funcionalidade\n                      <strong> Speech to Text</strong> ,no qual o médico dita\n                      para o sistema como o laudo deve ser preenchido. Assim o\n                      profissional pode realizar a consulta e o laudo ao mesmo\n                      tempo.\n                    </p>\n                  </div>\n                  <div className=\"col-lg-5 col-sm-pull-6  col-sm-6\">\n                    <img\n                      className=\"img-responsive\"\n                      id=\"responsive\"\n                      src=\"https://static.pexels.com/photos/57825/pexels-photo-57825-medium.jpeg\"\n                      alt=\"\"\n                    />\n                  </div>\n                </div>\n              </div>\n              {/* <!-- /.container --> */}\n            </div>\n\n            {/* <!-- /.content-section-d --> */}\n\n            <div className=\"content-section-d\">\n              <div className=\"container\">\n                <div className=\"row secb\">\n                  <div className=\"col-lg-5 col-sm-6\">\n                    <h2 className=\"section-heading-white\">Facilidade</h2>\n\n                    <hr className=\"section-heading-spacer-white\" />\n                    <div className=\"clearfix\"></div>\n                    <p className=\"lead-white\">\n                      O sistema é preparado para o dia a dia dos médicos,\n                      tornando-o imperativo e de fácil adaptação. Além de\n                      permitir novas customizações.\n                    </p>\n\n                    {/* <button\n                  href=\"#\"\n                  id=\"button-white\"\n                  className=\"animated bounceInUp btn btn-info btn-lg\"\n                >\n                  {\" \"}\n                  <span className=\"network-name\">CRUNCH DEBT TODAY</span>\n                </button> */}\n                  </div>\n                  <div className=\"col-lg-5 col-lg-offset-2 col-sm-6\">\n                    <img\n                      className=\"phone img-responsive\"\n                      id=\"responsive\"\n                      src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/827672/crunch_phone_%26_computer.png\"\n                      alt=\"\"\n                    />\n                  </div>\n                </div>\n              </div>\n              {/* <!-- /.container --> */}\n            </div>\n\n            {/* <!-- Footer --> */}\n            <footer>\n              <div className=\"container\">\n                <div className=\"row\">\n                  <p className=\"copyright text-muted small\">\n                    Copyright &copy; OnReport 2019. All Rights Reserved\n                  </p>\n                </div>\n              </div>\n            </footer>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LandingPageCover;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport VoiceRecognition from \"./Components/VoiceRecognition\";\nimport \"./App.css\";\nimport Login from \"./Components/auth/Login\";\nimport SignUp from \"./Components/auth/SignUp\";\nimport Laudos from \"./Laudos\";\nimport MainTable from \"./MainTable\";\nimport Medicos from \"./Medicos\";\nimport MedicosSolicitante from \"./MedicosSolicitante\";\nimport Clinicas from \"./Clinicas\";\nimport NewLaudoView from \"./NewLaudoView\";\nimport FinalForm from \"./FinalForm\";\nimport NewProstataView from \"./NewProstataView\";\nimport Convenios from \"./Convenios\";\nimport NewFigadoView from \"./NewFigadoView\";\nimport SimpleExpansionPanel from \"./Expansion\";\nimport AuthService from \"./Components/auth/auth-service\";\nimport ProtectedRoute from \"./Components/auth/protected-route\";\nimport Preview from \"./Components/Preview\";\nimport Dashboard from './Dashboard' \nimport HistoricoFigado from './HistoricoFigado' \nimport HistoricoProstata from './HistoricoProstata' \n\n\n// import { Switch } from? '@material-ui/core';\nimport LandingPage from \"./LandingPage\";\nimport FinalView from \"./FinalView\";\nimport LandingPageCover from \"./LandingPageCover\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedInUser: null\n    };\n    this.service = new AuthService();\n  }\n  fetchUser() {\n    if (this.state.loggedInUser === null) {\n      this.service\n        .loggedin()\n        .then(response => {\n          this.setState({ loggedInUser: response });\n        })\n        .catch(err => {\n          this.setState({ loggedInUser: false });\n        });\n    }\n  }\n\n    getTheUser = (userObj) => {\n        this.setState({loggedInUser: userObj})\n    }\n    render() {\n        if (this.state.loggedInUser) {\n            console.log(\"logado\")\n            return (\n\n                <div className=\"App\">\n                    <Switch>\n                        <Route exact path=\"/\" component={LandingPageCover} />\n                        <Route\n                            exact\n                            path=\"/login\"\n                            render={(props) => <Login {...props} getUser={this.getTheUser}/>}/>\n                        <Route path=\"/signup\" component={SignUp}/>\n                        <ProtectedRoute\n                            path=\"/laudos\"\n                            user={this.state.loggedInUser}\n                            component={Laudos}/>\n                        <Route path=\"/maintable\" component={MainTable}/>\n                        <Route path=\"/medicos\" component={Medicos}/>\n                        <Route path=\"/medicossolicitante\" component={MedicosSolicitante}/>\n                        <Route path=\"/convenios\" component={Convenios}/>\n                        <Route path=\"/clinicas\" component={Clinicas}/>\n                        <Route \n                        exact \n                        path=\"/newfigadoview/:id\" \n                        render={(props) => <NewFigadoView {...props}/>}/>\n                        <Route\n                            exact\n                            path=\"/newprostataview/:id\"\n                            render={(props) => <NewProstataView {...props}/>}/>\n                                <Route\n                            exact\n                            path=\"/newfigadoview/laudofinal/:id\"\n                            render={(props) => <FinalForm {...props}/>}/>\n                        <Route path=\"/newlaudoview\" render={(props) => <NewLaudoView {...props}/>}/>\n                        <Route path=\"/simpleexpansion\" component={SimpleExpansionPanel}/>\n                        <Route path=\"/dashboard\" component={Dashboard} />\n                        <Route path=\"/historicoprostata\" component={HistoricoProstata} />\n                        <Route path=\"/historicofigado\" component={HistoricoFigado} />\n\n                    </Switch>\n                </div>\n            )\n        } else {\n            console.log(\"n logado\")\n            return (\n                <div className=\"App\">\n                    <Switch>\n                        <Route exact path=\"/\" component={LandingPageCover} />\n                        <Route\n                            exact\n                            path=\"/login\"\n                            render={(props) => <Login {...props} getUser={this.getTheUser}/>}/>\n                        <Route path=\"/signup\" component={SignUp}/>\n                        <ProtectedRoute\n                            user={this.state.loggedInUser}\n                            path=\"/laudos\"\n                            component={Laudos}/>\n                        <Route path=\"/laudos\" component={Laudos}/>\n                        <Route path=\"/simpleexpansion\" component={SimpleExpansionPanel}/>\n                        <Route\n                         exact \n                         path=\"/newfigadoview/:id\" \n                         render={(props) => <NewFigadoView {...props}/>}/>\n                        <Route path=\"/medicos\" component={Medicos}/>\n                        <Route path=\"/convenios\" component={Convenios}/>\n                        <Route path=\"/clinicas\" component={Clinicas}/>\n                        <Route path=\"/medicossolicitante\" component={MedicosSolicitante}/>\n                        <Route path=\"/newlaudoview\" render={(props) => <NewLaudoView {...props}/>}/>\n                        <Route path=\"/newlaudoview\" render={(props)=> <NewLaudoView {...props}/>} />\n                        <Route path=\"/newprostataview\" component={NewProstataView} />\n                        <Route path=\"/dashboard\" component={Dashboard} />\n                        <Route path=\"/historicoprostata\" component={HistoricoProstata} />\n                        <Route path=\"/historicofigado\" component={HistoricoFigado} />\n                        <Route\n                            exact\n                            path=\"/finalLiver/:id\"\n                            render={(props) => <FinalForm {...props}/>}/>\n                        <Route\n                            exact\n                            path=\"/newprostataview/:id\"\n                            render={(props) => <NewProstataView {...props}/>}/>\n                    </Switch>\n                </div>\n            )\n        }\n      }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\n// import \"./LandingPage.css\";\nimport LandingPageCover from \"./LandingPageCover\";\n\nclass LandingPage extends Component {\n  render() {\n    return (\n      <div>\n        <LandingPageCover />\n      </div>\n    );\n  }\n}\n\nexport default LandingPage;\n","import React, {Component} from 'react'\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Navbar from './Navbar'\nimport Footer from './Footer'\nimport FinalForm from './FinalForm';\n\nclass FinalView extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n    \n    }\n  }\n\n  render(){\n    return (\n          <div>\n            <Router>\n              <div id=\"main\"></div>\n              <Navbar/>\n                <FinalForm/>\n                <Footer/>\n            </Router> \n      </div>\n    )\n  }\n}\n\n  export default FinalView\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n\n// export const registerServiceWorker = () => {\n//   if (\"serviceWorker\" in navigator) {\n//     window.addEventListener(\"load\", function() {\n//       navigator.serviceWorker\n//         .register(\"/sw.js\")\n//         .then(function(registration) {\n//           // Registration was successful\n//           console.log(\n//             \"ServiceWorker registration successful with scope: \",\n//             registration.scope\n//           );\n//         })\n//         .catch(function(err) {\n//           // registration failed :(\n//           console.log(\"ServiceWorker registration failed: \", err);\n//         });\n//     });\n//   }\n// };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}